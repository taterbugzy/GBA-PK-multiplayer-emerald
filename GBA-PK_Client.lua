local IPAddress, Port = "127.0.0.1", 4096
local MaxPlayers = 4
local Nickname = ""




local GameID = ""
local RegionID
	local KantoRegionID = 0
	local HoennRegionID = 1


local GameCode = "None"
local ConfirmPackett = 0
local EnableScript = false
local ClientConnection

local u32 SpriteTempVar0 = 0
local u32 SpriteTempVar1 = 0

--Map ID
local u32 MapAddress = 0
local u32 MapAddress2 = 0
local PlayerID = 1
local PlayerID2 = 1001
local ScriptTime = 0
local ScriptTimePrev = 0
local initialized = 0
local ScriptTimeFrame = 4

--Internet Play
--local tcp = assert(socket.tcp())
local SocketMain = socket:tcp()
local Packett = ""
local MasterClient = "a"
--timout = every connection attempt
local timeoutmax = 600
local ReturnConnectionType = ""
local FramesPS = 0



--MULTIPLAYER VARS
local PlayerReceiveID = 1000
local MultiplayerConsoleFlags = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
local PlayerTalkingID = 0
local PlayerTalkingID2 = 1000
local Players = {socket:tcp(),socket:tcp(),socket:tcp(),socket:tcp(),socket:tcp(),socket:tcp(),socket:tcp(),socket:tcp()}
local PlayerIDNick = {"None","None","None","None","None","None","None","None"}
local timeout = {0,0,0,0,0,0,0,0}
local AnimationX = {0,0,0,0,0,0,0,0}
local AnimationY = {0,0,0,0,0,0,0,0}
local FutureX = {0,0,0,0,0,0,0,0}
local FutureY = {0,0,0,0,0,0,0,0}
local CurrentX = {0,0,0,0,0,0,0,0}
local CurrentY = {0,0,0,0,0,0,0,0}
local PreviousX = {0,0,0,0,0,0,0,0}
local PreviousY = {0,0,0,0,0,0,0,0}
local StartX = {2000,2000,2000,2000,2000,2000,2000,2000}
local StartY = {2000,2000,2000,2000,2000,2000,2000,2000}
local DifferentMapX = {0,0,0,0,0,0,0,0}
local DifferentMapY = {0,0,0,0,0,0,0,0}
local RelativeX = {0,0,0,0,0,0,0,0}
local RelativeY = {0,0,0,0,0,0,0,0}
local CurrentFacingDirection = {0,0,0,0,0,0,0,0}
local FutureFacingDirection = {0,0,0,0,0,0,0,0}
local CurrentMapID = {0,0,0,0,0,0,0,0}
local PreviousMapID = {0,0,0,0,0,0,0,0}
local MapEntranceType = {1,1,1,1,1,1,1,1}
local PlayerExtra1 = {0,0,0,0,0,0,0,0}			--When utilizing this value, we subtract 100, use it, and then add 100 again afterwards.  It seems like it is always stored +100
local globalSpriteNo = {0,0,0,0,0,0,0,0}
local PlayerExtra3 = {0,0,0,0,0,0,0,0}
local PlayerExtra4 = {0,0,0,0,0,0,0,0}
local PlayerVis = {1,0,0,0,0,0,0,0}
local Facing2 = {0,0,0,0,0,0,0,0}
local MapID = {0,0,0,0,0,0,0,0}
local PrevMapID = {0,0,0,0,0,0,0,0}
local MapChange = {0,0,0,0,0,0,0,0}
local HoennSurfBool = {1,1,1,1,0,0,0,0}	-- add to networking, plus a settings menu
local SurfBobAnimationY = {0,0,0,0,0,0,0,0}
local HasErasedPlayer = {false,false,false,false,false,false,false,false}

--Animation frames
local PlayerAnimationFrameTimer = {0,0,0,0,0,0,0,0}
local PlayerAnimationFlag = {0,0,0,0,0,0,0,0}
local PlayerAnimationFrameTimerMax = {0,0,0,0,0,0,0,0}
local PreviousPlayerAnimation = {0,0,0,0,0,0,0,0}

--PLAYER VARS
local StartXPlayer = 2000
local StartYPlayer = 2000
local CameraX = 0
local CameraY = 0
local PlayerMapXMovePrev = 0
local PlayerMapYMovePrev = 0
local PlayerX = 0
local PlayerY = 0
local PlayerMapID = 0
local PlayerMapIDPrev = 0
local PlayerMapEntranceType = 1
local PlayerDirection = 0
local PreviousPlayerDirection = 0
local PlayerMapChange = 0
local PreviousPlayerX = 0
local PreviousPlayerY = 0
local PlayerFacing = 0
local DifferentMapXPlayer = 0
local DifferentMapYPlayer = 0


--Addresses
local u32 PlayerAddress = {0,0,0,0,0,0,0,0}


local FFTimer = 0
local FFTimer2 = 0
local ScreenData = 0

local Pokemon = {"","","","","",""}

local EnemyPokemon = {"","","","","",""}

local ConsoleForText
local Keypressholding = 0
local LockFromScript = 0
local HideSeek = 0
local HideSeekTimer = 0
local ROMCARD
if not (emu == nil) then ROMCARD = emu.memory.cart0 end
local BufferString = "None"
local PrevExtraAdr = 0
local SendTimer = 0
local Var8000 = {}
local u32 Var8000Adr = {}
local Startvaraddress = 0
local TextSpeedWait = 0
local OtherPlayerHasCancelled = 0
local TradeVars = {0,0,0,0,"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"}
local EnemyTradeVars = {0,0,0,0,0}
local BattleVars = {0,0,0,0,0,0,0,0,0,0,0}
local EnemyBattleVars = {0,0,0,0,0,0,0,0,0,0,0}
local BufferVars = {0,0,0}
TradeVars[5] = "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"


--Decryption for positioning/small packetts
local ReceiveDataSmall = {}
					
--Debug time is how long in frames each message should show. once every 300 frames, or 5 seconds, should be plenty
local DebugTime = 300
local DebugTime2 = 30
local DebugTime3 = 1
local TempVar1 = 0
local TempVar2 = 0
local TempVar3 = 0
local debugBool = false

--Constants
	--SpriteIDs
	FR_M_SpriteID = 1
	FR_F_SpriteID = 0
	EM_M_SpriteID = 2
	EM_F_SpriteID = 3
	BattleIconID = 10
	KantoSurfBlobSpriteID = 11
	HoennSurfBlobSpriteID = 12

	--FrameIDs
	FaceSideID = 1
	FaceUpID = 2
	FaceDownID = 3
	WalkSide1ID = 4
	WalkSide2ID = 5
	WalkUp1ID = 6
	WalkUp2ID = 7
	WalkDown1ID = 8
	WalkDown2ID = 9
	BikeFaceSideID = 10
	BikeFaceUpID = 11
	BikeFaceDownID = 12
	BikeSide1ID = 13
	BikeSide2ID = 14
	BikeUp1ID = 15
	BikeUp2ID = 16
	BikeDown1ID = 17
	BikeDown2ID = 18
	RunFaceSideID = 19
	RunSide1ID = 20
	RunSide2ID = 21
	RunFaceUpID = 22
	RunUp1ID = 23
	RunUp2ID = 24
	RunFaceDownID = 25
	RunDown1ID = 26
	RunDown2ID = 27
	SurfDown1ID = 28
	SurfUp1ID = 29
	SurfSide1ID = 30
	SurfDown2ID = 31
	SurfUp2ID = 32
	SurfSide2ID = 33
	SitFaceDownID = 34
	SitFaceUpID = 35
	SitFaceSideID = 36

	--AnimationIDs
	-- AnimID 0 is unused
	WalkDownAnimID = 1
	WalkUpAnimID = 2
	WalkSideAnimID = 3
	RunDownAnimID = 4
	RunUpAnimID = 5
	RunSideAnimID = 6
	BikeDownAnimID = 7
	BikeUpAnimID = 8
	BikeSideAnimID = 9
	TurnDownAnimID = 10
	TurnUpAnimID = 11
	TurnSideAnimID = 12
	WalkRightAnimID = 13
	RunRightAnimID = 14
	BikeRightAnimID = 15
	-- AnimID 16 is unused
	SurfTurnDownAnimID = 17
	SurfTurnUpAnimID = 18
	SurfTurnLeftAnimID = 19
	SurfTurnRightAnimID = 20
	SurfDownAnimID = 21
	SurfUpAnimID = 22
	SurfLeftAnimID = 23
	SurfRightAnimID = 24

	--CurrentFacingDirectionIDs
	LeftDirID = 1
	RightDirID = 2
	UpDirID = 3
	DownDirID = 4

	--Facing2IDs
	FaceLeftID = 0
	FaceRightID = 1

local FR_M_Sprites = {
	--1 Facing Left
	{2290614272, 3149692928, 3149645824, 3149633664, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149699231, 3435965599, 3435973279, 3435834096, 2290639872, 871576576, 843202560, 859045888, 9227195, 9227468, 16305356, 16025804, 16008328, 1000225, 62243, 1041475, 4098359296, 1875378176, 1758396416, 1072693248, 1206910976, 3337617408, 4278190080, 0, 16637583, 16047862, 16664822, 1044467, 65396, 246, 15, 0},
	
	--2 Facing Up
	{2290614272, 3149692928, 3149627392, 3149645824, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149711360, 3435974400, 3435958016, 4240982512, 2290414576, 1095040768, 1157623808, 4293160704, 9227195, 16567500, 16305356, 253005007, 255805576, 16729108, 1048388, 16731903, 3438043712, 3712762688, 3723490304, 4008140800, 1317007360, 4284936192, 16711680, 0, 69652172, 70567133, 5242589, 425710, 1046500, 1009407, 65280, 0},
	
	--3 Facing Down
	{2290614272, 3149692928, 3149627392, 3149645824, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149713152, 2630668032, 3402269168, 2576806896, 1717784320, 790839040, 607338496, 860843776, 16567227, 16567497, 253275308, 255814041, 16004710, 15938290, 275266, 16184371, 4291191360, 2898670400, 2614096896, 4284964864, 4152356864, 258404352, 16711680, 0, 69627135, 70479050, 5242041, 423679, 1046399, 1009392, 65280, 0},
	
	--4 Side Left Walk Cycle 1
	{0, 2290614272, 3149692928, 3149645824, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149633664, 3149699231, 3435965599, 3435973279, 3435834096, 2290639872, 871576576, 843202560, 9223099, 9227195, 9227468, 16305356, 16025804, 16008328, 1000228, 62243, 859045888, 1682898944, 1713565696, 1714679808, 4283367424, 4293918720, 0, 0, 1041475, 16637512, 16047814, 16664783, 1042039, 1009263, 65520, 0},
	
	--5 Side Left Walk Cycle 2
	{0, 2290614272, 3149692928, 3149645824, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149633664, 3149699231, 3435965599, 3435973279, 3435834096, 2290639872, 871576576, 843202560, 9223099, 9227195, 9227468, 16305356, 16025804, 16008328, 1000228, 62243, 859045888, 4098359296, 1825046528, 4244570112, 2146889728, 4140822528, 268369920, 0, 1041475, 16637542, 16007718, 16663350, 1000703, 65535, 0, 0},
	
	--6 Up Walk Cycle 1
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149711360, 3435974400, 3435958016, 4240982512, 2290414576, 1095040832, 1157587776, 9223099, 9227195, 16567500, 16305356, 253005007, 255805576, 16729108, 327492, 4282672704, 3438046976, 3712761856, 3723292672, 3739676672, 1315307520, 4152295424, 267386880, 1008895, 16142028, 255247581, 255053533, 16740077, 65508, 255, 0},
	
	--7 Up Walk Cycle 2
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149711360, 3435974400, 3435958016, 4240982512, 2290414576, 1095040768, 1157578752, 9223099, 9227195, 16567500, 16305356, 253005007, 255805576, 83837972, 70713156, 4282839040, 3437522688, 3712771056, 3723244528, 3739680512, 1325334528, 4278190080, 0, 73811199, 16174796, 312541, 1035997, 1011437, 26340, 63359, 4080},
	
	--8 Down Walk Cycle 1
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149713152, 2630668032, 3402269168, 2576806896, 1717784320, 790839104, 607340084, 9223099, 16567227, 16567497, 253275308, 255814041, 16004710, 15938290, 275266, 860878388, 4287393776, 2899066880, 2614095872, 4285001728, 1736376320, 4134469632, 267386880, 1045555, 16149759, 4334794, 4404409, 282623, 255, 0, 0},
	
	--9 Down Walk Cycle 2
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149713152, 2630668032, 3402269168, 2576806896, 1717784320, 790839040, 607338496, 9223099, 16567227, 16567497, 253275308, 255814041, 16004710, 83047154, 1130640194, 860876800, 4291194624, 2890015744, 2604872704, 4294197248, 4278190080, 0, 0, 1131410483, 267831551, 314570, 1047737, 1013503, 63350, 63087, 4080},
	
	--10 Side Left Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290614272, 3149692928, 3149645824, 3149633664, 3149699231, 3435965599, 0, 0, 34952, 576443, 572347, 9223099, 9227195, 9227468, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435973279, 3435834096, 2290639872, 871576576, 843203584, 859062016, 1867493120, 1713568496, 16305356, 16025804, 16008328, 1000228, 62243, 1041475, 16637512, 16047686, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 4127195136, 1331691520, 4210032640, 1794113536, 2936012800, 4026531840, 1714682608, 4287614966, 2298466303, 2147482697, 3338334400, 4294601209, 1026730, 65535, 16664783, 107999112, 1879048184, 4131671287, 2936852470, 2795476655, 4205488880, 268435200, 0, 0, 0, 6, 15, 15, 0, 0},
	
	--11 Side Up Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290614272, 3149692928, 3149627392, 3149645824, 3149711360, 3435974400, 0, 0, 34952, 576443, 572347, 9223099, 9227195, 16567500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435958016, 4240982512, 2290414576, 1095040768, 1157575664, 4293288944, 3712773888, 3723292672, 16305356, 253005007, 255805576, 16729108, 255065924, 255225599, 16172253, 1035997, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1313665024, 1149235200, 4293918720, 1827667968, 2901409792, 1862270976, 1610612736, 4026531840, 1033444, 1046340, 4095, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--12 Side Down Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290614272, 3149692928, 3149627392, 3149645824, 3149713152, 0, 0, 0, 34952, 576443, 572347, 9223099, 16567227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2630668032, 3402269168, 2576806896, 1717784320, 790839040, 607342336, 860843776, 4284690176, 16567497, 253275308, 255814041, 16004710, 15938290, 16003906, 16184371, 15873791, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2858630912, 3488890880, 4294963200, 1827667968, 2901409792, 1862270976, 1610612736, 4026531840, 15939242, 282620, 1048575, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--13 Side Left Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290089984, 3150446592, 3149692928, 3149498368, 3150547440, 3435842032, 0, 0, 559240, 9223099, 9157563, 147569595, 147635131, 147639500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435964912, 3433737984, 2290499584, 1060323328, 606356480, 860110592, 1867493120, 1713568496, 260885708, 256412876, 256133256, 16003651, 995891, 16663603, 266200198, 256763126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 4127195136, 1868562432, 4210032640, 1794113536, 2936012800, 4026531840, 1714682608, 4287614966, 2298466303, 2003827785, 1828384960, 4294602655, 1026730, 65535, 266636534, 117374856, 1879048184, 4131671295, 2936852479, 2801399471, 4205488880, 268435200, 0, 0, 0, 6, 15, 15, 0, 0},
	
	--14 Side Left Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 4026531840, 0, 0, 2290647040, 3149645824, 3149642880, 3149642120, 3149646217, 3435973321, 0, 0, 2184, 36027, 35771, 576443, 576699, 576716, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 0, 0, 0, 0, 0, 0, 0, 3435973801, 3435965103, 2290648640, 1128215360, 858006528, 859000576, 1716498176, 1713568496, 1019084, 1001612, 1000520, 62514, 3890, 65092, 1039844, 1002980, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 4127195136, 1331691520, 4210032640, 1794113536, 2936012800, 4026531840, 4130601712, 4287614966, 2298466303, 4294966345, 2147152064, 3338301343, 4279216810, 65535, 1041548, 107413240, 1879048184, 4131671295, 2936852471, 2801399542, 4205488895, 268435200, 0, 0, 0, 6, 15, 15, 0, 0},
	
	--15 Side Up Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290647040, 3149645824, 3149641728, 3149642880, 3149646976, 3435973872, 0, 0, 2184, 36027, 35771, 576443, 576699, 1035468, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435972848, 4291593247, 2290634559, 1142181872, 1146090480, 4294861808, 3721711360, 3722366720, 1019084, 15812812, 15987848, 16774209, 255066100, 255223023, 16739405, 1002733, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1155854336, 1146052608, 4294963200, 2901409792, 1827667968, 1862270976, 1610612736, 4026531840, 1046350, 65396, 4095, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--16 Side Up Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290089984, 3150446592, 3149398016, 3149692928, 3150741504, 3435982848, 0, 0, 559240, 9223099, 9157563, 147569595, 147635131, 265080012, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435720704, 3431210752, 2286894848, 340786944, 1342125040, 4266025968, 3569811200, 3737448448, 260885708, 4048080127, 4092889224, 267665732, 255849540, 255258623, 16535005, 16575965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3833528320, 1207894016, 4293918720, 1827667968, 1827667968, 2936012800, 1610612736, 4026531840, 1003076, 455748, 1048575, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--17 Side Down Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290647040, 3149645824, 3149641728, 3149642880, 3149647088, 0, 0, 0, 2184, 36027, 35771, 576443, 1035451, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2580335856, 3433867295, 2576969535, 1717974256, 586298352, 574829808, 859109104, 4294127360, 1035468, 15829706, 15988377, 1000294, 996143, 17204, 1011523, 15873647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2858630912, 3488890880, 4294336512, 2902454272, 1827667968, 1862270976, 1610612736, 4026531840, 15939242, 282620, 4095, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--18 Side Down Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2290089984, 3150446592, 3149398016, 3149692928, 3150770176, 0, 0, 0, 559240, 9223099, 9157563, 147569595, 265075643, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435982848, 2896699136, 2574204672, 1714745344, 4063490048, 1127481344, 888598528, 4133695232, 265079961, 4052404940, 4093024665, 256075366, 255012642, 256062498, 258949939, 15876095, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2858630912, 3488890880, 4293918720, 1827667968, 1827667968, 2936012800, 1610612736, 4026531840, 15939242, 282620, 421887, 1048527, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--19 Run Side Left Idle
	{2290614272, 3149692928, 3149645824, 3149633664, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149699231, 3435965599, 3435973279, 3435834096, 2290639872, 871576576, 843202560, 859045888, 9227195, 9227468, 16305356, 16025804, 16008328, 1000228, 16708387, 266200131, 4236247040, 1693450240, 804257792, 1056964608, 1862270976, 4026531840, 0, 0, 256763078, 266637254, 16711666, 1046515, 3948, 255, 0, 0},
	
	--20 Run Side Left Cycle 1
	{0, 2290614272, 3149692928, 3149645824, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149633664, 3149699231, 3435965599, 3435973279, 3435834096, 2290639872, 871576576, 843202560, 9223099, 9227195, 9227468, 16305356, 16025804, 150226056, 2166309668, 2180969251, 859340800, 4143065088, 1727215616, 2415915008, 4293918720, 0, 0, 0, 266200131, 256765516, 266635468, 16707468, 16289655, 1033983, 65280, 0},
	
	--21 Run Side Left Cycle 2
	{0, 2290614272, 3149692928, 3149645824, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149633664, 3149699231, 3435965599, 3435973279, 3435834096, 2290639872, 871576704, 843202944, 9223099, 9227195, 9227468, 16305356, 16025804, 16008328, 16728868, 266269475, 859080704, 1149239296, 3488612352, 2003763200, 1828651008, 4293918720, 0, 0, 265847875, 260190052, 260259695, 16777164, 1048575, 0, 0, 0},
	
	--22 Run Side Up Idle
	{2290614272, 3149692928, 3149627392, 3149645824, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149645824, 3149713152, 3435954672, 3435676656, 4169416448, 1095300096, 1157587520, 4293276480, 9223099, 16567227, 253283532, 255102156, 15943823, 5211156, 69664580, 70479615, 3712970496, 3723292672, 1307045888, 4009689088, 4134469632, 267386880, 0, 0, 16184541, 1035997, 1015508, 65518, 63087, 4080, 0, 0},
	
	--23 Run Side Up Cycle 1
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149645824, 3149713152, 3435954672, 3435676656, 4169416448, 1095302912, 1157578496, 9223099, 9223099, 16567227, 253283532, 255102156, 15943823, 1016852, 1048388, 4176015360, 3722244096, 3722440704, 1155465216, 4009099264, 1727004672, 2867855360, 4278190080, 16740351, 253906925, 255065325, 16738285, 4094, 15, 15, 0},
	
	--24 Run Side Up Cycle 2
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149645824, 3149713152, 3435954672, 3435676656, 4169416448, 1095299072, 1157623808, 9223099, 9223099, 16567227, 253283532, 255102156, 15943823, 16745492, 15990596, 4294377216, 3740541680, 3738121200, 3732340480, 4025483264, 4026531840, 4026531840, 0, 1019535, 1035741, 1048029, 64836, 28654, 3942, 4010, 255},
	
	--25 Run Side Down Idle
	{2290614272, 3149692928, 3149627392, 3149645824, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149647616, 3149713392, 2899083760, 3402298352, 2576764672, 1717778160, 790886128, 860827392, 16563131, 268225467, 253283530, 255831212, 16017817, 258160230, 258945778, 15922227, 1156789248, 2898718720, 4285464576, 4134469632, 267386880, 0, 0, 0, 4407108, 1010890, 63231, 63087, 4080, 0, 0, 0},
	
	--26 Run Side Down Cycle 1
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645824, 3149647616, 3149713152, 2899083760, 3402298352, 2576764672, 1717780224, 790884352, 143440827, 2180823995, 2180828091, 253283530, 255831212, 16017817, 15939174, 996082, 860876800, 4284936192, 2283732992, 587137024, 871366656, 4278190080, 0, 0, 1045555, 1036287, 1010858, 63224, 65400, 4010, 255, 0},
	
	--27 Run Side Down Cycle 2
	{0, 2290614272, 3149692928, 3149627392, 0, 0, 0, 0, 0, 34952, 576443, 572347, 3149645952, 3149647640, 3149713176, 2899083760, 3402298352, 2576764672, 1717780224, 790884352, 9223099, 16563131, 16567227, 253283530, 255831212, 16017817, 15939174, 996082, 860876800, 4294766592, 2865164288, 2406416384, 2281635840, 2867855360, 4278190080, 0, 1045555, 1009407, 61832, 65314, 3891, 255, 0, 0},

	--34 Surf sit down
	{0, 0, 0, 0, 0, 2290614272, 3149692928, 3149627392, 3149645824, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149713152, 2630668032, 3402269168, 2576806896, 1717784320, 790839040, 607338496, 860843776, 16567227, 16567497, 253275308, 255814041, 16004710, 15938290, 275266, 16184371, 4291781184, 2898670400, 4135056384, 2137452544, 4284936192, 16711680, 0, 0, 69663999, 70479050, 5207919, 1009399, 1009407, 65280, 0, 0},
	
	--35 Surf sit up
	{0, 0, 0, 0, 0, 2290614272, 3149692928, 3149627392, 3149645824, 0, 0, 0, 0, 34952, 576443, 572347, 9223099, 3149711360, 3435974400, 3435958016, 4240982512, 2290414576, 1095040768, 1157623808, 4293160704, 9227195, 16567500, 16305356, 253005007, 255805576, 16729108, 1048388, 16731903, 3438043712, 3712762688, 3723490304, 4008112128, 1325334528, 4278190080, 0, 0, 69652172, 70567133, 5242589, 1011438, 65508, 255, 0, 0},
	
	--36 Surf sit side
	{0, 0, 0, 0, 0, 2290089984, 3150446592, 3149692928, 3149498368, 0, 0, 0, 0, 559240, 9223099, 9157563, 147569595, 3150547440, 3435842032, 3435964912, 3433737984, 2290499584, 1060323328, 606339072, 859832320, 147635131, 147639500, 260885708, 256412876, 256133256, 16003651, 995891, 16663619, 1156579328, 4244631552, 2406444800, 4160515840, 4143378432, 268369920, 0, 0, 266201316, 256764159, 266637158, 16711526, 1048371, 136, 0, 0}

}

local FR_F_Sprites = {
	{ 1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 16423321, 2577049952, 2863442272, 3435833696, 2863310336, 1717986304, 1140012032, 1111638016, 4080271360, 262842777, 262851242, 4110068940, 4282821290, 4047791718, 256132164, 256119169, 256132340, 4134404096, 645267456, 685244416, 954728448, 1323302912, 3404726272, 4278190080, 0, 256132340, 16008271, 1048562, 3907, 4068, 250, 15, 0},

	--2  Side Up
	{1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 6986137, 2577049952, 2863442272, 3435832896, 2863293680, 1717653488, 286343664, 286543616, 289689344, 110799257, 110807722, 74099916, 256289450, 267654758, 252973329, 16007441, 16008209, 1145372416, 1145369584, 4283417584, 1726930688, 3277778688, 4205834240, 267386880, 0, 16729156, 255804484, 255653119, 16764006, 62780, 64175, 4080, 0},

	--3  Side Down
	{1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 6986137, 3113920864, 2896996704, 3435833072, 2577035072, 1717847280, 790843376, 607384816, 860833008, 110799259, 110807754, 258649292, 83274137, 256132710, 267662066, 256848706, 256177203, 4293326064, 1835216640, 3613605632, 1724706816, 3277783040, 4205772800, 267386880, 0, 256861695, 15873622, 15939198, 1044182, 62780, 64175, 4080, 0},

	--4  Side Left Walk Cycle 1
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 2577049952, 2863442272, 3435833696, 2863310336, 1717986304, 1140012032, 1111638016, 16423321, 262842777, 262851242, 4110068940, 4282821290, 4098123366, 256132164, 256119169, 4080271360, 4134404096, 4252368896, 2391277568, 4009422848, 4138528768, 16711680, 0, 4098114804, 4098114804, 256134946, 16731955, 65524, 63231, 4080, 0},

	--5  Side Left Walk Cycle 2
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 2577049952, 2863442272, 3435833696, 2863310336, 1717986304, 1140012032, 1111638016, 16423321, 262842777, 262851242, 4110068940, 4282821290, 4047791718, 256132164, 255924244, 4080271360, 4100325376, 1109917696, 1127804928, 3830444032, 4294901760, 0, 0, 4098114804, 4098114804, 256132351, 16777198, 1044462, 1034863, 65520, 0},

	--6  Side Up Walk Cycle 1
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 2577049952, 2863442272, 3435832896, 2863293680, 1717653488, 286343664, 286543616, 6986137, 110799257, 110807722, 74099916, 256289450, 267654758, 252973329, 16007441, 289689344, 1145327360, 1145369584, 4283417584, 1825505024, 4294901760, 4026531840, 0, 16008209, 255083588, 16729156, 849151, 64710, 3955, 4010, 255},

	--7  Side Up Walk Cycle 2
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 2577049952, 2863442272, 3435832896, 2863293680, 1717653488, 286343664, 286543616, 6986137, 110799257, 110807722, 74099916, 256289450, 267654758, 252973329, 16007441, 289689344, 1145324528, 1145372416, 4283428608, 1827598080, 905965568, 2867855360, 4278190080, 16008209, 16008260, 255804484, 255653119, 16777158, 4095, 15, 0},

	--8  Side Down Walk Cycle 1
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 3113920864, 2896996704, 3435833072, 2577035072, 1717847280, 790843376, 607384816, 6986137, 110799259, 110807754, 258649292, 83274137, 256132710, 267662066, 256848706, 860828912, 4293279728, 3580165888, 1986850816, 1825505280, 904921088, 2867855360, 4278190080, 256177203, 256180223, 16720886, 996350, 65478, 4095, 15, 0},

	--9  Side Down Walk Cycle 2
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 3113920864, 2896996704, 3435833072, 2577035072, 1717847280, 790843376, 607384816, 6986137, 110799259, 110807754, 258649292, 83274137, 256132710, 267662066, 256848706, 860833008, 4294919408, 3744661248, 2134110208, 1828651008, 4278190080, 4026531840, 0, 256111667, 267611903, 16729686, 1039982, 1043654, 65363, 4010, 255},

	--10 Side Left Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717985280, 2576983552, 2576979456, 2576980576, 2576984726, 2863319702, 0, 0, 1638, 27289, 27033, 1026457, 16427673, 16428202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435965078, 2863311456, 1717986880, 1144992576, 337912832, 1328762624, 1330622208, 4062378736, 256879308, 267676330, 252986982, 16008260, 16007448, 16008271, 16008271, 1000516, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 4127195136, 1331691520, 4210032640, 1794113536, 2936012800, 4026531840, 1663302384, 1879035894, 3909079039, 4294966345, 3405443264, 4294601209, 1026730, 65535, 65535, 107376605, 1879048174, 4131671295, 2936852474, 2795478959, 4205488880, 268435200, 0, 0, 0, 6, 15, 15, 0, 0},

	--11 Side Up Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717960704, 2577031168, 2576965632, 2576983552, 2577049952, 2863442272, 0, 0, 26214, 436633, 432537, 6986137, 110799257, 110807722, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435832896, 2863293680, 1717653488, 286343664, 286543616, 289689584, 1145369584, 1145372416, 74099916, 256289450, 267654758, 252973329, 16007441, 267666449, 255804484, 16729156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4283408384, 3439325184, 4293918720, 1827667968, 2901409792, 1862270976, 1610612736, 4026531840, 718079, 1048524, 4095, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--12 Side Down Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717960704, 2577031168, 2576965632, 2576983552, 3113920864, 0, 0, 0, 26214, 436633, 432537, 6986137, 110799259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2896996704, 3435833072, 2577035072, 1717847280, 790843376, 607384816, 860833008, 4284690416, 110807754, 258649292, 83274137, 256132710, 267662066, 256848706, 256177203, 267532031, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2858630912, 3488890880, 4294963200, 1827667968, 2901409792, 1862270976, 1610612736, 4026531840, 15939242, 282620, 1048575, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--13 Side Left Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 1610612736, 0, 0, 1717986816, 2576980576, 2576980320, 2576980390, 2576980649, 2863312041, 0, 0, 102, 1705, 1689, 64153, 1026729, 1026762, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 0, 0, 0, 0, 0, 0, 0, 3435973289, 2863311526, 1717986916, 1145303860, 2168603200, 1156789248, 1330622208, 4062378736, 16054956, 16729770, 15811686, 1000516, 1000465, 16008260, 16008271, 16008271, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 4127195136, 1331691520, 4210032640, 1794113536, 2936012800, 4026531840, 4079221488, 1879035894, 3875524607, 4294966345, 4294635712, 3405410207, 4279216810, 65535, 1048574, 107376605, 1879048174, 4131671295, 2936852479, 2801399546, 4205488895, 268435200, 0, 0, 0, 6, 15, 15, 0, 0},

	--14 Side Left Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717960704, 2577031168, 2576965632, 2576983552, 2577049952, 2863442272, 0, 0, 26214, 436633, 432537, 16423321, 262842777, 262851242, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435833696, 2863310336, 1717986304, 1140012032, 1111638016, 4080287488, 1330622208, 4062378736, 4110068940, 4282821290, 4047791718, 256132164, 256119169, 256132340, 256132340, 256132351, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 4127195136, 1868562432, 4210032640, 1794113536, 2936012800, 4026531840, 4079221488, 1879035894, 4026519551, 4289723465, 2902126784, 4294602655, 1026730, 65535, 16777062, 107376605, 1879048174, 4131671295, 2936852479, 2801399471, 4205488880, 268435200, 0, 0, 0, 6, 15, 15, 0, 0},

	--15 Side Up Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717985280, 2576983552, 2576979456, 2576980576, 2576984726, 2863319702, 0, 0, 1638, 27289, 27033, 436633, 6924953, 6925482, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3435965028, 2863310415, 1717966079, 286331935, 286541040, 1145327600, 1145369584, 4282711808, 4631244, 16018090, 16728422, 15798545, 256119057, 267666500, 255804484, 16732159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4294963200, 3438977024, 4294963200, 2901409792, 1827667968, 1862270976, 1610612736, 4026531840, 1048575, 4044, 4095, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--16 Side Up Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717567488, 2577793024, 2576744448, 2577031168, 2578093568, 2865403392, 0, 0, 419430, 6986137, 6920601, 111778201, 1772788121, 1772923562, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3433718784, 2863025920, 1712652032, 286334720, 286344432, 1145327600, 1145369584, 4282711808, 1185598668, 4100631210, 4282476134, 4047573265, 256131345, 267666500, 255804484, 16732159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4294963200, 3438280704, 4293918720, 1827667968, 1827667968, 2936012800, 1610612736, 4026531840, 1048575, 700364, 1048575, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--17 Side Down Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717985280, 2576983552, 2576979456, 2576980576, 3147410070, 0, 0, 0, 1638, 27289, 27033, 436633, 6924953, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2865416854, 3435965039, 2576983796, 1717978191, 586298623, 574832463, 859108592, 4294127360, 6925484, 16165580, 5204633, 267666534, 4098835247, 4098159412, 256134979, 15873647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2858630912, 3488890880, 4294615040, 2902454272, 1827667968, 1862270976, 1610612736, 4026531840, 15939242, 282620, 4095, 4047, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--18 Side Down Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717567488, 2577793024, 2576744448, 2577031168, 2578093568, 0, 0, 0, 419430, 6986137, 6920601, 111778201, 1772788155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3402274304, 3433721600, 2577855488, 1715752944, 4063556687, 1128219727, 888423664, 4133695232, 1772924074, 4138388684, 1332386201, 4098123366, 4282593058, 4109579298, 256852787, 267534335, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2858630912, 3488890880, 4293918720, 1827667968, 1827667968, 2936012800, 1610612736, 4026531840, 15939242, 282620, 700415, 1048527, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--19 Run Side Left Idle
	{1717985280, 2576983552, 2576979456, 2576980576, 0, 0, 0, 0, 1638, 27289, 27033, 1026457, 2576984726, 2863319702, 3435965078, 2863311456, 1717986880, 1144992576, 522462208, 4080222208, 16427673, 268086442, 4098861772, 4282673834, 4098115174, 1145115716, 4098114696, 256133137, 2264858624, 804257792, 1065353216, 4269801472, 2936012800, 4026531840, 0, 0, 16732008, 52578, 65267, 65263, 4012, 255, 0, 0},

	--20 Run Side Left Cycle 1
	{0, 1717985280, 2576983552, 2576979456, 0, 0, 0, 0, 0, 1638, 27289, 27033, 2576980576, 2576984726, 2863319702, 3435965078, 2863311456, 1717986880, 1144992576, 522462208, 1026457, 16427673, 16428202, 256879308, 267676330, 256132710, 16008260, 256119112, 523452416, 1996423168, 3633250304, 2365255680, 4289523712, 16711680, 0, 0, 256149576, 16720639, 7287800, 7340014, 1044206, 65535, 0, 0},

	--21 Run Side Left Cycle 2
	{0, 1717985280, 2576983552, 2576979456, 0, 0, 0, 0, 0, 1638, 27289, 27033, 2576980576, 2576984726, 2863319702, 3435965078, 2863311456, 1717986880, 1144992576, 522462208, 1026457, 16427673, 16428202, 256879308, 267676330, 252986982, 16008260, 256119112, 523517952, 4148307968, 3745724416, 4009750528, 4009099264, 4278190080, 0, 0, 256132168, 16008447, 16777215, 16710894, 16560110, 1044735, 0, 0},

	--22 Run Side Up Idle
	{1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 6986137, 2576984416, 2577049952, 2863441648, 3435816176, 1717653488, 286343664, 286347008, 286543856, 110795161, 110799257, 258656938, 256289996, 267654758, 252973329, 15995153, 267665681, 1145369584, 1145372656, 4283417584, 3439259392, 4205834240, 267386880, 0, 0, 255804484, 268387396, 16577791, 1036236, 64175, 4080, 0, 0},

	--23 Run Side Up Cycle 1
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 2576984416, 2577049952, 2863441648, 3435816176, 1717653488, 286343664, 286347008, 6986137, 110795161, 110799257, 258656938, 256289996, 267654758, 252973329, 15995153, 289689344, 1145372416, 4283387648, 1727983360, 3439325184, 2867855360, 2867855360, 4278190080, 16008209, 16729156, 254014719, 255066060, 16715772, 15, 15, 0},

	--24 Run Side Up Cycle 2
	{0, 1717960704, 2577031168, 2576965632, 0, 0, 0, 0, 0, 26214, 436633, 432537, 2576983552, 2576984416, 2577049952, 2863441648, 3435816176, 1718570992, 286343664, 286347008, 6986137, 110795161, 110799257, 258656938, 256289996, 267712102, 252973329, 15995153, 289689344, 1145372416, 4294243056, 3436131312, 3489550080, 4027576320, 4026531840, 0, 16008209, 16729156, 1003519, 64758, 4044, 4010, 4010, 255},

	--25 Run Side Down Idle
	{1717997312, 2577035008, 2576966896, 2576983792, 0, 0, 4095, 1044865, 16279142, 16165273, 256285081, 258644377, 2576984416, 3113920864, 2896996719, 3435832911, 2577035087, 1718568176, 791936768, 860831488, 110795161, 110799259, 4137339594, 4100631756, 4109805977, 256177766, 16724978, 15987763, 4294131456, 1724182528, 3439263744, 4205772800, 267386880, 0, 0, 0, 15941631, 1003118, 1040076, 64175, 4080, 0, 0, 0},

	--26 Run Side Down Cycle 1
	{4293918720, 1718022144, 2577035008, 2576969472, 0, 0, 0, 0, 4095, 1009254, 16165273, 16161177, 2576983552, 2576984416, 3113920864, 2896996704, 3435833072, 2577035008, 1718568176, 791936768, 6986137, 110795161, 110799259, 110807754, 258649292, 4093028761, 4081383014, 268383218, 860876800, 4294373376, 1144979456, 575602688, 871366656, 4278190080, 0, 0, 16708659, 16642047, 1043558, 64719, 4088, 4010, 255, 0},

	--27 Run Side Down Cycle 2
	{4293918720, 1718022144, 2577035008, 2576969472, 0, 0, 0, 0, 4095, 1009254, 16165273, 16161177, 2576983552, 2576984416, 3113920864, 2896996704, 3435833072, 2577035071, 1718567999, 791937008, 6986137, 110795161, 110799259, 110807754, 258649292, 16165273, 256177766, 16724978, 860880640, 4294766592, 1724706816, 4241424384, 2414870528, 2867855360, 4278190080, 0, 1045555, 1019903, 1016644, 1037346, 65331, 255, 0, 0},

	--28 Surf sit down
	{0, 0, 0, 0, 0, 1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 6986137, 3113920864, 2896996704, 3435835376, 2577035072, 1717847280, 790843376, 607384816, 860878064, 110799259, 110807754, 258649292, 83274137, 256132710, 267662066, 256848706, 256898099, 4293869360, 3981899328, 3865887552, 4205367040, 4205375488, 267386880, 0, 0, 15987967, 74409302, 71091822, 16550575, 1018543, 4080, 0, 0},

	--29 Surf sit up
	{0, 0, 0, 0, 0, 1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 6986137, 2577049952, 2863442272, 3435832896, 2863293680, 1717653488, 286343664, 286543616, 289689344, 110799257, 110807722, 74099916, 256289450, 267654758, 252973329, 16007441, 16008209, 1145372416, 1145369584, 4283417584, 1726930688, 3439259392, 4279234560, 0, 0, 16729156, 255804484, 255653119, 16764006, 65484, 255, 0, 0},

	--30 Surf sit side
	{0, 0, 0, 0, 0, 1717960704, 2577031168, 2576965632, 2576983552, 0, 0, 0, 0, 26214, 436633, 432537, 16423321, 2577049952, 2863442272, 3435833696, 2863310336, 1717986304, 1140012032, 1111638016, 4080271360, 262842777, 262851242, 4110068940, 4282821290, 4047791718, 256132164, 256119169, 256132340, 4134404096, 1744826368, 1869590272, 2186063616, 2202726400, 268369920, 0, 0, 256132340, 16008271, 1046770, 1044274, 63539, 68, 0, 0}

}

local Kanto_Surf_Sprites = {
	--28 Surf down Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 4177526784, 4177526784, 1727987712, 2003201792, 2004248304, 2004248175, 2003199599, 1717986918, 1717986918, 1717986918, 65382, 16148087, 258369399, 4133906295, 4133906039, 1717986918, 1717986918, 1717986918, 0, 0, 0, 0, 0, 15, 159, 159, 0, 0, 0, 0, 0, 0, 0, 0, 1718265455, 1722459897, 1722808576, 4285071360, 0, 0, 0, 0, 4134184550, 2674567782, 10484326, 38655, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--29 Surf up Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 4177526784, 4177526784, 2013200384, 2004250368, 2004248304, 2003199599, 1717986927, 1717986918, 1717986918, 1717986918, 65399, 16148343, 258369399, 4133906039, 4133906022, 1717986918, 1717986918, 1717986918, 0, 0, 0, 0, 0, 15, 159, 159, 0, 0, 0, 0, 0, 0, 0, 0, 1717986927, 1717987065, 1718615952, 2583064320, 9857280, 626688, 0, 0, 4133906022, 2674288230, 167769702, 16150425, 9857280, 626688, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	
	--30 Surf side Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4293918720, 1718025984, 0, 0, 0, 0, 0, 0, 4095, 1046118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 4026531840, 4026531840, 2415919104, 2415919104, 2003199728, 2004248175, 2004248175, 2003199590, 1717986918, 1717987942, 1718004399, 1718004399, 267806311, 4133906039, 4133906039, 1717986919, 1717986918, 1717986918, 1717986918, 4133906022, 0, 255, 4095, 4095, 2559, 159, 255, 3942, 0, 0, 0, 0, 0, 0, 0, 0, 1717988089, 1718024592, 4294545408, 2566914048, 0, 0, 0, 0, 4284900966, 2577360486, 630783, 153, 0, 0, 0, 0, 40806, 2415, 153, 0, 0, 0, 0, 0},

	--31 Surf down Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2415919104, 4177526784, 4186963968, 4278190080, 1727987712, 2003201792, 2004248304, 2004248175, 2003199599, 1717986918, 1717986918, 255, 65382, 16148087, 258369399, 4133906295, 4133906039, 1717986918, 1717986918, 0, 0, 0, 0, 0, 9, 159, 2463, 2576351232, 2566914048, 0, 0, 0, 0, 0, 0, 1717986918, 1718265593, 1722460569, 1869191424, 0, 0, 0, 0, 1717986918, 2674566758, 2577050214, 10065654, 0, 0, 0, 0, 2457, 153, 0, 0, 0, 0, 0, 0},

	--32 Surf up Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4177526784, 4186963968, 4278190080, 2013200384, 2004250368, 2004248304, 2003199599, 1717986927, 1717986918, 1717986918, 255, 65399, 16148343, 258369399, 4133906039, 4133906022, 1717986918, 1717986918, 0, 0, 0, 0, 0, 0, 159, 2463, 2576351232, 2566914048, 0, 0, 0, 0, 0, 0, 1717986918, 1717986927, 1717987065, 4194303897, 2576771472, 10066176, 0, 0, 1717986918, 4133906022, 2674288230, 2583691167, 160852377, 10066176, 0, 0, 2457, 153, 0, 0, 0, 0, 0, 0},
	
	--33 Surf side Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4293918720, 0, 0, 0, 0, 0, 0, 0, 4095, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 4026531840, 4177526784, 2566914048, 1718025984, 2003199728, 2004248175, 2004248175, 2003199590, 1717986918, 1717987942, 1718004390, 1046118, 267806311, 4133906039, 4133906039, 1717986919, 1717986918, 1717986918, 1717986918, 0, 0, 255, 4095, 40959, 2463, 159, 255, 2415919104, 0, 0, 0, 0, 0, 0, 0, 1718004393, 1718024601, 1869191568, 2576941056, 0, 0, 0, 0, 4133906022, 1777755750, 2426011503, 629145, 0, 0, 0, 0, 40806, 39270, 2457, 0, 0, 0, 0, 0}
}

local TEMPLATE = {
	--1 Facing Left
	
	--2 Facing Up
	
	--3 Facing Down
	
	--4 Side Left Walk Cycle 1
	
	--5 Side Left Walk Cycle 2
	
	--6 Up Walk Cycle 1
	
	--7 Up Walk Cycle 2
	
	--8 Down Walk Cycle 1
	
	--9 Down Walk Cycle 2
	
	--10 Side Left Bike Facing
	
	--11 Side Up Bike Facing
	--12 Side Down Bike Facing
	
	--13 Side Left Bike Cycle 1
	--14 Side Left Bike Cycle 2
	--15 Side Up Bike Cycle 1
	
	--16 Side Up Bike Cycle 2
	
	--17 Side Down Bike Cycle 1
	
	--18 Side Down Bike Cycle 2
	
	--19 Run Side Left Idle
	
	--20 Run Side Left Cycle 1
	
	--21 Run Side Left Cycle 2
	
	--22 Run Side Up Idle
	
	--23 Run Side Up Cycle 1
	
	--24 Run Side Up Cycle 2
	
	--25 Run Side Down Idle
	
	--26 Run Side Down Cycle 1
	
	--27 Run Side Down Cycle 2
}

local EM_M_Sprites = {
	--1 Facing Left
	{1431306240, 2665828352, 4008334592, 2595153920, 0, 0, 1280, 24144, 24293, 5609881, 93952494, 1503238553, 2863328000, 3149640704, 2165388288, 830542848, 847320064, 858996736, 860094464, 1145044992, 100244410, 16353467, 16287880, 16287887, 1045295, 1000227, 63539, 1030980, 4174643200, 3481534464, 3750690816, 4293918720, 4293918720, 2296315904, 4293918720, 0, 16403343, 16496892, 1032189, 65535, 4095, 3915, 255, 0},
	
	--2 Facing Up
	{1592086528, 2576979200, 4008267776, 3919156480, 0, 0, 0, 0, 1365, 24297, 388846, 5893790, 2576981760, 2576977664, 2575954752, 2559066944, 4294128640, 573784064, 1155526656, 4287119104, 16357785, 16292249, 71276697, 70551689, 4407295, 275234, 1047876, 15960319, 3959376960, 2857360704, 1146093312, 3154112512, 4294242304, 4098158592, 268369920, 0, 80019390, 148763818, 9434180, 1048507, 1003519, 1000527, 65520, 0},
	
	--3 Facing Down
	{1431306240, 2665807872, 4008267776, 2862280704, 0, 0, 1280, 24144, 351973, 5872025, 367006, 1026474, 2929442560, 4004208384, 286388800, 403784256, 673395712, 590561280, 860876800, 4287115008, 16497130, 16104174, 70193425, 69472641, 4403842, 275250, 1045555, 15894783, 3633257536, 2295651648, 2370830080, 1157623808, 4294242304, 4105039872, 268369920, 0, 79820941, 148721032, 9434328, 1048388, 1003519, 1038927, 65520, 0},
	
	--4 Side Walk Cycle 1
	{0, 1431306240, 2665828352, 4008334848, 0, 0, 0, 1280, 24144, 24293, 5609881, 93952494, 2595153920, 2863328000, 3149640704, 4044436480, 830542848, 847320064, 858996736, 860094464, 1503238553, 100244410, 16353467, 16287880, 16287887, 1045295, 1000227, 63539, 1212153856, 4286840832, 3438604288, 3724496640, 4294201088, 4282707968, 16711680, 0, 1031048, 16403336, 16496783, 1032191, 16646143, 16629759, 1035504, 65280},
	
	--5 Side Walk Cycle 2
	{0, 1431306240, 2665828352, 4008334848, 0, 0, 0, 1280, 24144, 24293, 5609881, 93952494, 2595153920, 2863328000, 3149640704, 2165388288, 830542848, 847320064, 858996736, 860094464, 1503238553, 100244410, 16353467, 16287880, 16287887, 1045295, 1000227, 63539, 3560964096, 2370043904, 4174643200, 4169461760, 4170174208, 4294692608, 256176128, 16711680, 1030984, 16403455, 16498636, 1032157, 16056319, 16011263, 1044480, 0},
	
	--6 Up Walk Cycle 1
	{98893824, 1592086528, 2576979200, 4008267776, 0, 0, 0, 0, 0, 1365, 24297, 388846, 3919156480, 2576981760, 2576977664, 2575954752, 2559066944, 4294128640, 573787904, 1149812480, 5893790, 16357785, 16292249, 71276697, 70551689, 4407295, 275234, 33604, 4287623168, 3959418880, 2857365504, 1146044416, 3154051072, 4294901760, 1155465216, 4293918720, 997631, 1003454, 5043370, 9303108, 589755, 4095, 15, 0},
	
	--7 Up Walk Cycle 2
	{98893824, 1592086528, 2576979200, 4008267776, 0, 0, 0, 0, 0, 1365, 24297, 388846, 3919156480, 2576981760, 2576977664, 2575954752, 2559066944, 4294128640, 573784064, 1143472128, 5893790, 16357785, 16292249, 71276697, 70551689, 4407295, 16003874, 16615492, 4286836736, 3958697984, 2857354240, 1146083328, 3154083840, 4293918720, 4026531840, 0, 1046783, 1048510, 1045674, 324676, 65467, 65535, 64836, 4095},
	
	--8 Down Walk Cycle 1
	{0, 1431306240, 2665807872, 4008595456, 0, 0, 0, 1280, 24144, 351973, 5872025, 367086, 2862280704, 2929442560, 4004208384, 286388800, 403784256, 673395712, 590565120, 860879680, 1026474, 16497130, 16104174, 70193425, 69472641, 4403842, 275250, 1045555, 4287626112, 3632855040, 2286878720, 1157562368, 4294443008, 4216258560, 1256128512, 4293918720, 15874303, 9435277, 16568200, 16637912, 1048575, 4095, 15, 0},
	
	--9 Down Walk Cycle 2
	{0, 1431306240, 2665807872, 4008595456, 0, 0, 0, 1280, 24144, 351973, 5872025, 367086, 2862280704, 2929442560, 4004208384, 286388800, 403784256, 673395712, 590565120, 860879680, 1026474, 16497130, 16104174, 70193425, 69472641, 4403842, 275250, 1045555, 4287626112, 3632855040, 2286878720, 1157562368, 4294443008, 4216258560, 1256128512, 4293918720, 15874303, 9435277, 16568200, 16637912, 1048575, 4095, 15, 0},
	
	--10 Side Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1431633920, 2582533376, 4008617392, 2578094464, 3149573792, 0, 80, 1509, 1518, 350617, 5872030, 93952409, 6265243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3149642560, 2400260928, 4061663552, 4062720832, 858993887, 859110879, 1146064880, 4079111375, 1022091, 1017992, 1017992, 65330, 324659, 16428932, 262451192, 263979007, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1711276032, 4284481536, 4109762560, 255787008, 2503933952, 334495744, 4278190080, 4281597407, 4294967286, 4294964447, 2296378189, 4294917964, 1503606175, 89191185, 4095, 16777215, 1718026239, 4294964303, 1145359867, 4042081535, 4182004720, 823213824, 4294963200, 0, 0, 6, 111, 243, 243, 15, 0},

	--11 Up Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5242880, 98893824, 1592086528, 4008613120, 4008267776, 4003045120, 2576981760, 0, 0, 0, 1365, 24302, 368366, 16357870, 16357785, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2576977664, 2575954752, 2559066944, 4294198272, 3959418880, 2856857344, 1145597696, 3153653760, 16292249, 71276697, 70551689, 4476927, 1048510, 15893674, 16155716, 1048507, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4294242304, 4294901760, 2146435072, 1961885696, 2649751552, 2130706432, 1879048192, 4026531840, 1003519, 65535, 4095, 3919, 4063, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--12 Down Bike Facing
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1431306240, 2665807872, 4008595456, 4008640256, 2862268160, 0, 1280, 24144, 351973, 5872025, 367086, 16751086, 16492970, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2929442560, 4004217664, 303121216, 673395952, 674448368, 860390128, 2290626304, 1341968224, 16497130, 70826734, 70521121, 256062082, 255079298, 254313523, 15878280, 117231604, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1871568880, 4294197248, 4260364288, 1844445184, 2632974336, 1862270976, 1610612736, 4026531840, 268294390, 282623, 4063, 4063, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--13 Side Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1342177280, 3847573504, 2577327440, 4008635227, 2577050088, 3149638378, 0, 5, 94, 94, 21913, 367001, 5872025, 391577, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3149642676, 2297499956, 2401337620, 790790964, 858993487, 1127436255, 2219806704, 4079111375, 63880, 63624, 63624, 4083, 20291, 1026808, 16403192, 16498687, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1711276032, 4284481536, 2499149824, 255787008, 4114546688, 334495744, 4278190080, 4080270815, 4294967295, 4294245455, 4294967236, 2382315276, 4288624121, 89191185, 4095, 1048575, 1718026239, 4294964479, 1145360312, 4042081528, 1598313471, 823213824, 4294963200, 0, 0, 6, 111, 243, 243, 15, 0},

	--14 Side Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1431306240, 2665828352, 4008401664, 2594826240, 3148540416, 0, 1280, 24144, 24293, 5609881, 93952494, 1503238553, 100243899, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3149640704, 4044436480, 562107392, 579024112, 859000287, 860851679, 2228785136, 4079111375, 16353467, 16287880, 16287887, 1045295, 5194547, 262928451, 4199219192, 4223664127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1711276032, 4284481536, 2499149824, 255787008, 4114546688, 334495744, 4278190080, 4281597407, 4294967295, 4170054735, 3096444868, 4294917900, 1503606265, 89191185, 4095, 268435455, 1718026239, 4294964303, 1145359839, 4042081525, 1598313456, 823213824, 4294963200, 0, 0, 6, 111, 243, 243, 15, 0},

	--15 Up Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 327680, 90066944, 1592677632, 4008634704, 4008613120, 4008286704, 2576980464, 0, 0, 0, 85, 1518, 23022, 1022366, 1022361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2576980208, 2576916276, 2575860788, 4294919232, 4005560064, 2862908144, 1145341680, 3149893376, 1018265, 4454793, 4409480, 279807, 65531, 993354, 1009732, 65531, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4294963200, 4294963200, 2147348480, 2499739648, 2112880640, 2130706432, 1879048192, 4026531840, 65535, 65535, 4095, 3919, 4063, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--16 Up Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83886080, 1582301184, 3998547968, 4008267776, 4002742272, 3919179776, 2577002496, 0, 0, 5, 21854, 388846, 5893870, 261725934, 261724569, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2576936960, 2560111616, 2290365440, 4282662912, 3221159936, 2760044544, 1149693952, 3213819904, 260675993, 1140427161, 1128827033, 71630847, 16776174, 254298794, 258491460, 16776123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4294901760, 4294901760, 2146435072, 1961885696, 2112880640, 2667577344, 1879048192, 4026531840, 1048575, 1048575, 1040383, 65359, 4063, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--17 Down Bike Cycle 1
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1342177280, 3847553024, 2582532096, 4008633600, 4008636400, 2863246320, 0, 5, 20574, 365918, 367001, 22942, 1046942, 1030810, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2867444720, 4008361780, 287380532, 578958144, 579023935, 859080751, 2290631408, 1341968224, 1031070, 4455342, 4407570, 275240, 15942456, 15894595, 16002952, 117231604, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1871568880, 4294197248, 4261408768, 2649751552, 1827667968, 1862270976, 1610612736, 4026531840, 268294390, 282623, 4063, 4063, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--18 Down Bike Cycle 2
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1426063360, 3998220288, 4007985152, 4008701952, 2846617600, 0, 1280, 5267024, 93675237, 93952409, 5873390, 268017390, 263887530, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3921408000, 3938399232, 554972160, 2184396800, 2201239296, 881340160, 2297581312, 1341968224, 263954090, 1140567790, 1128337937, 70461474, 4081268770, 4069016371, 254052488, 117231604, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1871568880, 4294197248, 4260364288, 1844445184, 1827667968, 2667577344, 1610612736, 4026531840, 268294390, 282623, 1048543, 4063, 4047, 255, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0},

	--19 Run Left Idle
	{1342177280, 3847573504, 2577327440, 4008634965, 0, 0, 0, 5, 94, 94, 21913, 367001, 2577051368, 3148524523, 3148524468, 2287014196, 2402386196, 791838996, 590558016, 858997760, 5872025, 391579, 63877, 63624, 63624, 4083, 65347, 1031160, 4292673536, 3431923712, 3717136384, 4293918720, 4293918720, 2296315904, 4293918720, 0, 16403336, 16498575, 1032191, 65535, 4095, 3915, 255, 0},
	
	--20 Run Left Cycle 1
	{0, 1342177280, 3847573504, 2577327440, 0, 0, 0, 0, 5, 94, 94, 21913, 4008634966, 2577051368, 3148524522, 3148524468, 2287014196, 2402386196, 791838996, 590558016, 367001, 5872025, 391579, 63877, 63624, 325768, 4964339, 4980547, 859045632, 2379795696, 2298469616, 2298478336, 4294242304, 4282707968, 16711680, 0, 326591, 1025208, 1031048, 1047551, 16646143, 16629759, 1035504, 65280},
	
	--21 Run Left Cycle 2
	{0, 1342177280, 3847573504, 2577327440, 0, 0, 0, 0, 5, 94, 94, 21913, 4008634966, 2577051368, 3148524522, 3148524468, 2287014196, 2402386196, 791838996, 590558016, 367001, 5872025, 391579, 63877, 63624, 63624, 4083, 65347, 858997940, 3713006516, 2380206064, 2298474496, 4170174208, 4294692608, 256176128, 16711680, 1045039, 16567094, 16572296, 1048573, 16056319, 16011263, 1044480, 0},
	
	--22 Run Up Idle
	{1441071104, 4008005632, 4008613120, 4008267776, 0, 0, 0, 0, 0, 1365, 24302, 368366, 4003045120, 2576981760, 2576977664, 2575926080, 2559066944, 4294201088, 3952082688, 2856901872, 16357870, 16357785, 16292249, 71276697, 70551689, 16011263, 16775358, 265127082, 1145605616, 3153657600, 2289037312, 4294242304, 4098158592, 268369920, 0, 0, 265847876, 16748475, 1046152, 1003519, 1000527, 65520, 0, 0},
	
	--23 Run Up Cycle 1
	{5242880, 1441071104, 4008005632, 4008613120, 0, 0, 0, 0, 0, 0, 1365, 24302, 4008267776, 4003045120, 2576981760, 2576977664, 2575926080, 2559066944, 4294956272, 4005100528, 368366, 16357870, 16357785, 16292249, 71276697, 70551689, 16008447, 1048459, 2862903040, 1145368576, 3149459456, 2288975872, 4294901760, 3722379264, 1718550528, 4293918720, 1038410, 16568132, 16572411, 1046664, 4095, 15, 15, 0},

	--24 Run Up Cycle 2
	{5242880, 1441071104, 4008005632, 4008613120, 0, 0, 0, 0, 0, 0, 1365, 24302, 4008267776, 4003045120, 2576981760, 2576977664, 2575926080, 2559066944, 4282666752, 3103780864, 368366, 16357870, 16357785, 16292249, 71276697, 70551689, 256770047, 264211438, 2760765440, 1157418752, 3221081856, 2291134464, 4293918720, 4026531840, 4026531840, 0, 16140970, 1000516, 1018811, 63112, 65535, 64989, 63078, 4095},

	--25 Run Down Idle
	{0, 1431306240, 2665807872, 4008595456, 0, 0, 0, 1280, 24144, 351973, 5872025, 367086, 4008640256, 2862268160, 2929442560, 4004217664, 303121216, 673395712, 674496256, 860409072, 16751086, 16492970, 16497130, 70826734, 70521121, 4403842, 16724866, 265061427, 3758087664, 2296381184, 2379804672, 1341452288, 4108185600, 268369920, 0, 0, 266207229, 16776584, 1019352, 1003508, 1039695, 65520, 0, 0},
	
	--26 Run Down Cycle 1
	{0, 0, 1431306240, 2665807872, 0, 0, 0, 0, 1280, 24144, 351973, 5872025, 4008595456, 4008640256, 2862268160, 2929442560, 4004217664, 303121216, 673395712, 674447360, 16095726, 268409326, 4227574186, 4227578346, 70826734, 70521121, 4403842, 275330, 860876800, 3640623104, 4241485824, 4258201600, 4293918720, 4026531840, 0, 0, 1045555, 1017997, 64904, 36863, 64957, 63078, 4095, 0},
	
	--27 Run Down Cycle 2
	{0, 0, 1431306240, 2665807872, 0, 0, 0, 0, 1280, 24144, 351973, 5872025, 4008595456, 4008640496, 2862268351, 2929442751, 4004217664, 303121216, 673395712, 674447360, 367086, 16751086, 16492970, 16497130, 70826734, 70521121, 4403842, 275330, 860876800, 3632852992, 2296315904, 4294443008, 3688824832, 1718550528, 4293918720, 0, 1045555, 589709, 1047759, 64735, 4095, 15, 0, 0},

	--34 Surf Sit Down
	{0, 0, 0, 0, 0, 0, 1431306240, 2665807872, 4008595456, 0, 0, 0, 1280, 24144, 351973, 5872025, 367086, 4008640256, 2862333696, 2929442560, 4005294912, 303121216, 673395712, 674447360, 860876800, 16751086, 16497066, 16497130, 71023598, 70521121, 4403842, 275330, 1045555, 4287119104, 3633302592, 2295651648, 2231369472, 1332146176, 4284936192, 16711680, 0, 15960319, 80541837, 148721032, 9437000, 1009396, 1009407, 65280, 0},
	
	--35 Surf sit up
	{0, 0, 0, 0, 0, 1441071104, 4008005632, 4008613120, 4008267776, 0, 0, 0, 0, 0, 1365, 24302, 368366, 4003045120, 2576981760, 2576977664, 2575926080, 2559066944, 4294128640, 573784064, 1155526656, 16357870, 16357785, 16292249, 71276697, 70551689, 4407295, 275234, 1047876, 4287115008, 3959393344, 2857360704, 1146093312, 3153653760, 4177461248, 4278190080, 0, 15894783, 80281534, 148763818, 16774212, 1019835, 65423, 255, 0},
	
	--36 Surf sit side
	{0, 0, 0, 0, 0, 0, 1426063360, 3998547968, 4004884480, 0, 0, 0, 20480, 386304, 388693, 89758105, 1503239918, 2867757056, 2863570944, 3149611008, 286474240, 403783680, 674447360, 859045888, 876609536, 2576980377, 1603910586, 261655483, 260606095, 260606194, 16724722, 16003891, 16315187, 1073741824, 3741323008, 1341191408, 4285528304, 4287618816, 4294471424, 4283166720, 16711680, 263947336, 4199281293, 4223173256, 264209480, 16748532, 1047759, 64991, 4080}
}

local EM_Green_Female_Sprites = {
	--1 Facing Left
	{1476395008, 2857893888, 2594799616, 4002969600, 0, 0, 0, 559104, 143178629, 2344323498, 146315753, 9406958, 1149728768, 2005432064, 2014413824, 2189497344, 2189497344, 858996736, 2202271744, 2254438400, 16217156, 16217975, 16197415, 16217975, 1001332, 1000520, 33864, 2184, 4141350912, 4016570368, 2682191872, 4193255424, 1727004672, 2380201984, 4293918720, 0, 143, 65534, 1025785, 1031071, 65382, 3915, 255, 0},

	--2 Facing Up
	{1488627712, 2830874624, 3095953408, 2310770432, 0, 0, 0, 559104, 9087877, 9157514, 559243, 16300952, 3149430528, 2290579440, 2004305136, 2000979072, 1145587840, 1216606448, 860815360, 4284608512, 16223163, 259487880, 256145271, 138953847, 142902340, 252655748, 62515, 988927, 3597659904, 2293800704, 2877681664, 3129995264, 1714356224, 4249812992, 267386880, 0, 16709229, 16354184, 1005754, 1046699, 62054, 62687, 4080, 0},

	--3 Facing Down
	{1488697344, 2857940992, 2863366144, 4002959104, 0, 0, 0, 559104, 9157509, 9143722, 564969, 16026094, 1212645120, 1921460208, 1092121840, 404259968, 404965504, 590672112, 860815360, 4294045696, 16217220, 259160104, 256344344, 138969473, 142881409, 252658482, 62515, 991231, 3607031552, 3724123904, 2875191296, 3714510848, 1714356224, 4249812992, 267386880, 0, 16707437, 16359389, 1045946, 1009373, 62054, 62687, 4080, 0},

	--4 Side Left Walk Cycle 1
	{0, 1476395008, 2874671104, 2595979264, 0, 0, 0, 0, 559104, 143178629, 2344323498, 146315758, 4002969600, 1149728768, 2005432064, 2014413824, 2189497344, 2189497344, 858996736, 2202271744, 9405854, 16217156, 16217975, 16197415, 16217975, 1001332, 1000520, 33864, 2254438400, 805109760, 4277137408, 4188004096, 2415759104, 1720250368, 16711680, 0, 2184, 134, 65533, 1025789, 1031128, 16645990, 1035504, 65280},

	--5 Side Left Walk Cycle 2
	{0, 1476395008, 2874671104, 2595979264, 0, 0, 0, 0, 559104, 143178629, 2344323498, 146315758, 4002969600, 1149728768, 2005432064, 2014413824, 2189497344, 2189497344, 858996736, 2202271744, 9405854, 16217156, 16217975, 16197415, 16217975, 1001332, 1000520, 33864, 2254438400, 651689984, 4251451392, 4175425536, 2381762304, 1727778560, 266203136, 16711680, 2184, 2303, 65518, 1027993, 16759807, 16318310, 1048320, 0},

	--6 Up Walk Cycle 1
	{8945664, 1488627712, 2830874624, 3095953408, 0, 0, 0, 0, 559104, 9087877, 9157514, 559243, 2310770432, 3149430528, 2290579440, 2004305136, 2000979072, 1145587840, 1216606448, 860815360, 16300952, 16223163, 259487880, 256145271, 138953847, 142902340, 252655748, 62515, 4285132800, 3597266944, 2378166272, 3101028352, 2828992512, 1668218880, 3723493376, 4278190080, 988927, 1001069, 16672904, 16354218, 1018555, 1638, 15, 0},

	--7 Up Walk Cycle 2
	{8945664, 1488627712, 2830874624, 3095953408, 0, 0, 0, 0, 559104, 9087877, 9157514, 559243, 2310770432, 3149430528, 2290579440, 2004305136, 2000979072, 1145587840, 1216606448, 860815360, 16300952, 16223163, 259487880, 256145271, 138953847, 142902340, 252655748, 62515, 4284608512, 3596939264, 2290544384, 2864226048, 3148410880, 1717567488, 4026531840, 0, 1021695, 1021549, 1047512, 1006987, 63882, 63030, 4061, 255},

	--8 Down Walk Cycle 1
	{8945664, 1488697344, 2857940992, 2863366144, 0, 0, 0, 0, 559104, 9157509, 9143722, 564969, 4002959104, 1212645120, 1921460208, 1092121840, 404259968, 404965504, 590672112, 860856064, 16026094, 16217220, 259160104, 256344344, 138969473, 142881409, 252658482, 62515, 4285505280, 3599298560, 3720282112, 2883518464, 3715039232, 1693450240, 3572498432, 4278190080, 991119, 1044214, 1022461, 62858, 65501, 4095, 15, 0},

	--9 Down Walk Cycle 2
	{8945664, 1488697344, 2857940992, 2863366144, 0, 0, 0, 0, 559104, 9157509, 9143722, 564969, 4002959104, 1212645120, 1921460208, 1092121840, 404259968, 404965504, 590672112, 860815360, 16026094, 16217220, 259160104, 256344344, 138969473, 142881409, 252658482, 16380979, 4176605184, 3756978176, 3751407616, 2824798208, 3724476416, 4293918720, 4026531840, 0, 16381695, 1017965, 64477, 64954, 63197, 3910, 3917, 255},

	--10 Side Left Bike Facing
	
	--11 Side Up Bike Facing
	--12 Side Down Bike Facing
	
	--13 Side Left Bike Cycle 1
	--14 Side Left Bike Cycle 2
	--15 Side Up Bike Cycle 1
	
	--16 Side Up Bike Cycle 2
	
	--17 Side Down Bike Cycle 1
	
	--18 Side Down Bike Cycle 2
	
	--19 Run Side Left Idle
	{0, 2237136896, 2863290368, 3920275840, 0, 0, 0, 0, 2184, 559291, 9157509, 571550, 4008614008, 1145341816, 2004322423, 662180228, 2005041428, 1954709780, 1211315008, 1216562176, 36745, 63348, 63351, 63271, 63351, 3911, 3908, 132, 4284874752, 4002349056, 2576285696, 4293918720, 1727004672, 2296315904, 4293918720, 0, 65496, 1025759, 1031135, 65501, 3942, 3913, 255, 0},

	--20 Run Side Left Cycle 1
	{0, 0, 2237136896, 2863290368, 0, 0, 0, 0, 0, 2184, 559291, 9157509, 3920275840, 4008614008, 1145341816, 2004322423, 1920471428, 2005041428, 1211269396, 2201170752, 571550, 36745, 63348, 62583, 1013618, 1013623, 16009079, 1016904, 1212367872, 573107952, 2298452464, 3758096128, 3606331392, 4282707968, 16711680, 0, 1022082, 65528, 1025757, 1031133, 16643693, 16621567, 1035504, 65280},

	--21 Run Side Left Cycle 2
	{0, 0, 2237136896, 2863290368, 0, 0, 0, 0, 0, 2184, 559291, 9157509, 3920275840, 4008614008, 1145341816, 2004322423, 1920471428, 2005041428, 1211269396, 2201170752, 571550, 36745, 63348, 62583, 1013618, 1013623, 16009079, 1016904, 1715684502, 913308054, 2380206064, 2297462784, 3758083840, 4285128448, 256765952, 16711680, 1046660, 16707362, 16359416, 1048029, 16017117, 16011263, 1044480, 0},

	--22 Run Side Up Idle
	{1488627712, 2830874624, 3095953408, 2310770432, 0, 0, 0, 559104, 9087877, 9157514, 559243, 16300952, 3149430528, 2290579440, 2004305136, 2000979072, 1145587840, 1216606448, 860880640, 3597180656, 16223163, 259487880, 256145271, 138953847, 142902340, 252655748, 16774195, 266962541, 2295892464, 2877685504, 3129995264, 1714356224, 4259250176, 267386880, 0, 0, 261655944, 16734394, 1046699, 62054, 64991, 4080, 0, 0},

	--23 Run Side Up Cycle 1
	{8945664, 1488627712, 2830874624, 3095953408, 0, 0, 0, 0, 559104, 9087877, 9157514, 559243, 2310770432, 3149428720, 2290579327, 2004305023, 2000979087, 1145589744, 1216606208, 860827392, 16300952, 259492795, 4151801992, 4148459383, 4165485687, 267682884, 997508, 62515, 3597025024, 2380263424, 3101028352, 2828398592, 1668218880, 3723493376, 1727004672, 4278190080, 1001069, 16705672, 16354218, 1018555, 1638, 15, 15, 0},

	--24 Run Side Up Cycle 2
	{8945664, 1488627712, 2830874624, 3095953408, 0, 0, 0, 0, 559104, 9087877, 9157514, 559243, 2310770432, 3149428720, 2290579327, 2004305023, 2000979087, 1145589744, 1216606208, 860815360, 16300952, 259492795, 4151801992, 4148459383, 4165485687, 267682884, 997508, 15922227, 3596939264, 2291068672, 2864226048, 3148410880, 1717567488, 4026531840, 4026531840, 0, 15951469, 1048024, 1006987, 1005962, 63030, 4061, 3942, 255},

	--25 Run Side Down Idle
	{146505728, 1488683008, 2857926656, 2863366144, 0, 0, 0, 34816, 572288, 572293, 558506, 564906, 2863222528, 4002905856, 1212622832, 1921545456, 1092125824, 404965504, 673513216, 860876528, 16051950, 16218606, 259159172, 256346152, 138969368, 142881409, 16728706, 267318323, 1879022064, 3714055936, 3714641920, 1716453376, 4108255232, 267386880, 0, 0, 261750774, 16774621, 1017565, 62566, 64847, 4080, 0, 0},

	--26 Run Side Down Cycle 1
	{8912896, 146505728, 1488683008, 2857926656, 0, 0, 0, 0, 34816, 572288, 572293, 558506, 2863367776, 2863222678, 4002904054, 1212622719, 1921545343, 1092126848, 404953088, 673513216, 564906, 16027374, 259488238, 4151473284, 4148660264, 2290647320, 8467073, 16728706, 860876800, 1753608192, 3713921024, 1725431808, 3438280704, 1156579328, 4278190080, 0, 586803, 540550, 1048303, 63903, 4095, 15, 0, 0},

	--27 Run Side Down Cycle 2
	{8912896, 146505728, 1488683008, 2857926656, 0, 0, 0, 0, 34816, 572288, 572293, 558506, 2863366144, 2863222528, 4002904048, 1212622719, 2189980799, 2165868680, 404953088, 673513216, 107519658, 1777635054, 1870100974, 4151473284, 4148660263, 143163668, 8467073, 16728706, 860848128, 1760788480, 4277137408, 4187947008, 4293918720, 4026531840, 0, 0, 1045555, 1005702, 1037789, 36198, 4044, 3908, 255, 0},
}

local Hoenn_Surf_Sprites = {
	--down
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1459552256, 1431764736, 1431656176, 0, 0, 0, 0, 255, 65381, 16737621, 258299221, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 4026531840, 4127195136, 4278190080, 4127195136, 4294311936, 4294901760, 1431655791, 1431655775, 1431655766, 1431655765, 1431655766, 1431655775, 1431655791, 1431655935, 4283782485, 4116010325, 1700091221, 1431655765, 1700091221, 4116010325, 4132787541, 4283782485, 0, 15, 15, 111, 255, 111, 28671, 65535, 4293918720, 4127195136, 4026531840, 0, 0, 0, 0, 0, 1431662591, 1433403391, 4294967295, 4294967286, 4294967136, 4294926336, 4278190080, 0, 4294333781, 4294964821, 4294967295, 1879048191, 117440511, 458751, 255, 0, 4095, 111, 6, 0, 0, 0, 0, 0},

	--up
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1610612736, 0, 0, 0, 4278190080, 1450139648, 1431764832, 1431656182, 1431655791, 0, 0, 0, 255, 456293, 117400917, 1868911957, 4132787541, 0, 0, 0, 0, 0, 0, 0, 6, 4127195136, 4284481536, 4294901760, 4294963200, 4294926336, 4294311936, 4127195136, 4127195136, 1431655775, 1431655766, 1431655765, 1431655766, 1431655775, 1431655791, 1431655935, 1431662591, 4116010325, 1700091221, 1431655765, 1700091221, 4116010325, 4132787541, 4283782485, 4294333781, 111, 1791, 65535, 1048575, 458751, 28671, 111, 111, 1610612736, 1610612736, 0, 0, 0, 0, 0, 0, 1433403391, 4294967295, 4294967286, 4294964736, 4294901760, 4278190080, 0, 0, 4294964821, 4294967295, 268435455, 7340031, 28671, 255, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0},

	--side
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1717567488, 4294336512, 1718615808, 1431660287, 0, 0, 0, 0, 0, 0, 28671, 7337573, 0, 0, 0, 0, 0, 0, 0, 0, 4026531840, 1862270976, 1877999616, 1609564160, 1610547200, 1878982656, 1878982656, 4294901760, 1431655766, 1431655765, 1431655765, 1431655765, 1431655765, 1431655765, 1431655765, 1431655766, 116806997, 1868911957, 1868911957, 4283782485, 4283782485, 4284831061, 4284831061, 4294333781, 0, 0, 0, 6, 6, 111, 111, 111, 4293918720, 4293918720, 4278190080, 4026531840, 0, 0, 0, 0, 1431660287, 1718616063, 4294967295, 4294967295, 4294967295, 4294927872, 4294311936, 1711276032, 4294964837, 4294967295, 1879048191, 117440511, 458751, 1647, 15, 15, 6, 6, 0, 0, 0, 0, 0, 0}

}

function ClearAllVar()
	local MultFlags = 0
	LockFromScript = 0
	
	 GameID = ""
	 GameCode = "None"
	--	 Nickname = ""
	 ConfirmPackett = 0
	 EnableScript = false
	 
	 ScriptTime = 0
	 initialized = 0

	--Server Switches

	--If 0 then don't render players
	ScreenData = 0
	MultiplayerConsoleFlags[1] = 0
	
	for i = 1, MaxPlayers do
		MultFlags = i + 1
		 PlayerVis[i] = 0
		 MultiplayerConsoleFlags[MultFlags] = 0
		 HasErasedPlayer[i] = false
		if i ~= PlayerID and PlayerIDNick[i] ~= "None" then
			RemovePlayerFromConsole(i)
		end
	end

end


function GetGameVersion()
	GameCode = emu:getGameCode()
	if (GameCode == "AGB-BPRE") or (GameCode == "AGB-ZBDM")
	then
		local GameVersion = emu:read16(134217916)
		if GameVersion == 26624 then
			ConsoleForText:print("Pokemon Firered 1.0 detected. Script enabled.")
			EnableScript = true
			GameID = "BPR1"
		elseif GameVersion == 26369 then
			ConsoleForText:print("Pokemon Firered 1.1 detected. Script enabled.")
			EnableScript = true
			GameID = "BPR2"
		else
			ConsoleForText:print("Unknown version of Pokemon Firered detected. Defaulting to 1.0. Script enabled.")
			EnableScript = true
			GameID = "BPR1"
		end
		RegionID = KantoRegionID
	elseif (GameCode == "AGB-BPGE")
		then
		local GameVersion = emu:read16(134217916)
		if GameVersion == 33024 then
			ConsoleForText:print("Pokemon Leafgreen 1.0 detected. Script enabled.")
			EnableScript = true
			GameID = "BPG1"
		elseif GameVersion == 32769 then
			ConsoleForText:print("Pokemon Leafgreen 1.1 detected. Script enabled.")
			EnableScript = true
			GameID = "BPG2"
		else
			ConsoleForText:print("Unknown version of Pokemon Leafgreen detected. Defaulting to 1.0. Script enabled.")
			EnableScript = true
			GameID = "BPG1"
		end
		RegionID = KantoRegionID
	elseif (GameCode == "AGB-BPEE") then
			ConsoleForText:print("Pokemon Emerald detected. Script disabled.")
			EnableScript = true
			GameID = "BPEE"
			RegionID = HoennRegionID
	elseif (GameCode == "AGB-AXVE") then
			ConsoleForText:print("Pokemon Ruby detected. Script disabled.")
			EnableScript = true
			GameID = "AXVE"
			RegionID = HoennRegionID
	elseif (GameCode == "AGB-AXPE") then
			ConsoleForText:print("Pokemon Sapphire detected. Script disabled.")
			EnableScript = true
			GameID = "AXPE"
			RegionID = HoennRegionID
	else
		ConsoleForText:print("Unknown game. Script disabled.")
		EnableScript = false
	end
	ConsoleForText:moveCursor(0,2)
end

--To fit everything in 1 file, I must unfortunately clog this file with a lot of sprite data. Luckily, this does not lag the game. It is just hard to read.
--Also, if you are looking at this, then I am sorry. Truly      -TheHunterManX
--IsBiking is temporary and is used for drawing the extra symbol

-- Update 6/22/2024 from Tate:
-- No need to be sorry! It was only 6 hours of my life to get it shrunk down!

-- 6/25/2024 3:20am from Tate:
-- I take it back, I am in great distress.
function createChars(StartAddressNo, FrameID, SpriteNo, IsBiking)
	--0 = Tile 190, 1 = Tile 185, etc...
	--Tile number 190 = Player1
	--Tile number 185 = Player2
	--Tile number 180 = Player3
	--Tile number 175 = Player4
	--First will be the 4 bytes, or 32 bits
	
	--Start address. 100745216 = 06014000 = 184th tile. can safely use 32.
	--CHANGE 100746752 = 190th tile = 2608
	--Because the actual data doesn't start until 06013850, we will skip 50 hexbytes, or 80 decibytes
	local ActualAddress = (100746752 - (StartAddressNo * 1280)) + 80
	if ScreenData ~= 0 then

	--Character Sprites
	if SpriteNo ~= BattleIconID then
		--ConsoleForText:print("FrameID in DrawChar: " .. FrameID .. string.char(10)) -- debug
		if FrameID < 10 or (FrameID >= 19 and FrameID <= 27) then
			SpriteTempVar0 = ActualAddress

		elseif FrameID >= 10 and FrameID <= 18 then
			--Bike Sprites: Due to it being a 64x64, it requires far more space
			SpriteTempVar0 = ActualAddress - 80

		elseif FrameID >= 28 and FrameID <= 33 then
			--Skip 2 tiles, aka put in 3rd and 4th tiles to fit sit char
			SpriteTempVar0 = ActualAddress + 512
			FrameID = FrameID - 27	--Adjustment needed for when I created a new table for the surf blob sprites
			
		elseif FrameID >= 34 and FrameID <= 36 then
			SpriteTempVar0 = ActualAddress - 20
			FrameID = FrameID - 6	--Adjustment needed for when I removed the surf blob sprites from each spritesheet

		else ConsoleForText:print("Bad FrameID in DrawChar")		--debug

		end

		--Firered Male Sprite
		if SpriteNo == FR_M_SpriteID then
			for i = 1, #FR_M_Sprites[FrameID] do
				SpriteTempVar1 = FR_M_Sprites[FrameID][i]
				emu:write32(SpriteTempVar0, SpriteTempVar1) 
				SpriteTempVar0 = SpriteTempVar0 + 4
			end
		--Firered Female Sprite
		elseif SpriteNo == FR_F_SpriteID then
			for i = 1, #FR_F_Sprites[FrameID] do
				SpriteTempVar1 = FR_F_Sprites[FrameID][i]
				emu:write32(SpriteTempVar0, SpriteTempVar1) 
				SpriteTempVar0 = SpriteTempVar0 + 4
			end
		--Emerald Male Sprite
		elseif SpriteNo == EM_M_SpriteID then
			for i = 1, #EM_M_Sprites[FrameID] do
				SpriteTempVar1 = EM_M_Sprites[FrameID][i]
				emu:write32(SpriteTempVar0, SpriteTempVar1) 
				SpriteTempVar0 = SpriteTempVar0 + 4
			end
		--Emerald Female Sprite
		elseif SpriteNo == EM_F_SpriteID then
			for i = 1, #EM_Green_Female_Sprites[FrameID] do
				SpriteTempVar1 = EM_Green_Female_Sprites[FrameID][i]
				emu:write32(SpriteTempVar0, SpriteTempVar1) 
				SpriteTempVar0 = SpriteTempVar0 + 4
			end
		-- Kanto Surf Blob
		elseif SpriteNo == KantoSurfBlobSpriteID then
			for i = 1, #Kanto_Surf_Sprites[FrameID] do
				emu:write32(SpriteTempVar0, Kanto_Surf_Sprites[FrameID][i])
				SpriteTempVar0 = SpriteTempVar0 + 4
			end
		-- Hoenn Surf Blob
		elseif SpriteNo == HoennSurfBlobSpriteID then
			--need to use FrameID (which is from 1 to 6) to indicate regular sprite (1-3) and down sprite (4-6)
			--if (FrameID > 3) then
			--	for i = 1, 32 do
			--		emu:write32(SpriteTempVar0, 0)
			--		SpriteTempVar0 = SpriteTempVar0 + 4
			--	end
			--end

			-- Collapses FrameID from 1-6 to 1-3 by mod 3ing it
			FrameID = FrameID % 3
			if FrameID == 0 then FrameID = 3 end
			SpriteTempVar0 = SpriteTempVar0 + 16
			for i = 9, #Hoenn_Surf_Sprites[FrameID] do
				emu:write32(SpriteTempVar0, Hoenn_Surf_Sprites[FrameID][i])
				SpriteTempVar0 = SpriteTempVar0 + 4
			end



		else ConsoleForText:print("Bad SpriteNo in DrawChar")		--debug
		end
	--Gender Neutral Sprites
	elseif SpriteNo == BattleIconID then
		--Battle Icon 1
		if FrameID == 1 then
			SpriteTempVar0 = ActualAddress + 256 + (IsBiking * 256) - 80
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 65280
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 1023744
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 16379904
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 262078464
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 4193255424
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 2667577344
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 1044480
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 1023744
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 63984
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 3999
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 249
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 15
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 4193320704
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 262143744
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 16773120
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 268435200
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 267452400
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 4080
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 1044729
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 1048479
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 65520
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 1048575
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 16773375
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 16711680
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			SpriteTempVar0 = SpriteTempVar0 + 4 
			SpriteTempVar1 = 0
			emu:write32(SpriteTempVar0, SpriteTempVar1) 
			end
		end
	end
end

function GetPokemonTeam()
	local PokemonTeamAddress = 0
	local PokemonTeamADRTEMP = 0
	local ReadTemp = ""
		if GameID == "BPR1" or GameID == "BPR2" then
			--Addresses for Firered
			PokemonTeamAddress = 33702532
		elseif GameID == "BPG1" or GameID == "BPG2" then
			--Addresses for Leafgreen
			PokemonTeamAddress = 33702532
		end
		PokemonTeamADRTEMP = PokemonTeamAddress
		for j = 1, 6 do
			for i = 1, 25 do
				ReadTemp = emu:read32(PokemonTeamADRTEMP) 
				PokemonTeamADRTEMP = PokemonTeamADRTEMP + 4 
				ReadTemp = tonumber(ReadTemp)
				ReadTemp = ReadTemp + 1000000000
				if i == 1 then Pokemon[j] = ReadTemp
				else Pokemon[j] = Pokemon[j] .. ReadTemp
				end
			end
		end
	--	ConsoleForText:print("EnemyPokemon 1 data: " .. Pokemon[2])
end
function SetEnemyPokemonTeam(EnemyPokemonNo, EnemyPokemonPos)
	local PokemonTeamAddress = 0
	local PokemonTeamADRTEMP = 0
	local ReadTemp = ""
	local String1 = 0
	local String2 = 0
		if GameID == "BPR1" or GameID == "BPR2" then
			--Addresses for Firered
			PokemonTeamAddress = 33701932
		elseif GameID == "BPG1" or GameID == "BPG2" then
			--Addresses for Leafgreen
			PokemonTeamAddress = 33701932
		end
		PokemonTeamADRTEMP = PokemonTeamAddress
		if EnemyPokemonNo == 0 then
			for j = 1, 6 do
				for i = 1, 25 do
					if i == 1 then String1 = i
					else String1 = String1 + 10
					end
					String2 = String1 + 9
					ReadTemp = string.sub(EnemyPokemon[j],String1,String2)
					ReadTemp = tonumber(ReadTemp)
					ReadTemp = ReadTemp - 1000000000
					emu:write32(PokemonTeamADRTEMP, ReadTemp)
					PokemonTeamADRTEMP = PokemonTeamADRTEMP + 4
				end
			end
		else
			PokemonTeamADRTEMP = PokemonTeamADRTEMP + ((EnemyPokemonPos - 1) * 100)
			for i = 1, 25 do
				if i == 1 then String1 = i
				else String1 = String1 + 10
				end
				String2 = String1 + 9
				ReadTemp = string.sub(EnemyPokemon[EnemyPokemonNo],String1,String2)
				ReadTemp = tonumber(ReadTemp)
				ReadTemp = ReadTemp - 1000000000
				emu:write32(PokemonTeamADRTEMP, ReadTemp)
				PokemonTeamADRTEMP = PokemonTeamADRTEMP + 4
			end
		end
end

function FixAddress()
	local MultichoiceAdr = 0
		if GameID == "BPR1" then
			MultichoiceAdr = 138282176
		elseif GameID == "BPR2" then
			MultichoiceAdr = 138282288
		elseif GameID == "BPG1" then
			MultichoiceAdr = 138281724
		elseif GameID == "BPG2" then
			MultichoiceAdr = 138281836
		end
	if PrevExtraAdr ~= 0 then
		emu:write32(MultichoiceAdr, PrevExtraAdr)
	end
end

function Loadscript(ScriptNo)
	local ScriptAddressTemp = 0
	local ScriptAddressTemp1 = 0				--memory to force it to read the script in scriptaddress2

	local u32 ScriptAddress2 = 145227776		--location of script
	
	local u32 ScriptAddress3 = 145227712		--extra address for stuff like multi-choice
	
	local MultichoiceAdr2 = ScriptAddress3 - 32
	local TextToNum = 0
	local NickNameNum
	local Buffer = {0,0,0,0}
	local Buffer1 = 33692880
	local Buffer2 = 33692912
	local Buffer3 = 33692932
	local MultichoiceAdr = 0
		if GameID == "BPR1" or GameID == "BPEE"then
			MultichoiceAdr = 138282176
		elseif GameID == "BPR2" then
			MultichoiceAdr = 138282288
		elseif GameID == "BPG1" then
			MultichoiceAdr = 138281724
		elseif GameID == "BPG2" then
			MultichoiceAdr = 138281836
		end
	
		--Convert 4-byte buffer to readable bytes in case its needed
			TextToNum = 0
			for i = 1, 4 do
				NickNameNum = string.sub(PlayerIDNick[PlayerTalkingID],i,i)
				NickNameNum = string.byte(NickNameNum)
				NickNameNum = tonumber(NickNameNum)
				if NickNameNum > 64 and NickNameNum < 93 then
					NickNameNum = NickNameNum + 122
				
				elseif NickNameNum > 92 and NickNameNum < 128 then
					NickNameNum = NickNameNum + 116
				else
					NickNameNum = NickNameNum + 113
				end
				Buffer[i] = NickNameNum
				if Buffer[i] == "" or Buffer[i] == nil then Buffer[i] = "A" end
			end
		
			ScriptAddressTemp = ScriptAddress2

			if ScriptNo == 0 then
				 
				ScriptAddressTemp1 = 4294902380
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
		--		LoadScriptIntoMemory()
			--Host script
			elseif ScriptNo == 1 then 
				emu:write16(Var8000Adr[2], 0) 
				emu:write16(Var8000Adr[5], 0) 

				local HostScript = {603983722, 151562240, 2148344069, 17170433, 145227804, 25166870, 4278348800, 41944086, 4278348800, 3773424593, 3823960280, 3722445033, 3892369887, 3805872355, 3655390933, 3638412030, 3034710233, 3654929664, 16755935}
				 
				for i = 1, #HostScript do
					ROMCARD:write32(ScriptAddressTemp, HostScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4
				end

				LoadScriptIntoMemory()
		--Interaction Menu	Multi Choice
			elseif ScriptNo == 2 then
				emu:write16(Var8000Adr[1], 0) 
				emu:write16(Var8000Adr[2], 0) 
				emu:write16(Var8000Adr[14], 0) 
				 
				ScriptAddressTemp1 = 1664873
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 1868957864
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 132117
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 226492441
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 2147489664
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 40566785
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 3588018687
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 3823829224
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 14213353
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 15328237
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 3655327200
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 14936318
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 3942704088
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 14477533
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 4289463293
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = 4294967040
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				--For buffer 2
				ScriptAddressTemp = 33692912
				ScriptAddressTemp1 = Buffer[1]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 1
				ScriptAddressTemp1 = Buffer[2]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 2
				ScriptAddressTemp1 = Buffer[3]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 3
				ScriptAddressTemp1 = Buffer[4]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 4
				ScriptAddressTemp1 = 255
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				--First save multichoice in case it's needed later
				PrevExtraAdr = ROMCARD:read32(MultichoiceAdr)
				--Overwrite multichoice 0x2 with a custom at address MultichoiceAdr2
				ScriptAddressTemp = MultichoiceAdr
				ScriptAddressTemp1 = MultichoiceAdr2
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				--Multi-Choice
				ScriptAddressTemp = MultichoiceAdr2
				ScriptAddressTemp1 = ScriptAddress3
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 0
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4 
				ScriptAddressTemp1 = ScriptAddress3 + 7
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 0
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = ScriptAddress3 + 13
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 0
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = ScriptAddress3 + 18
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 0
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				--Text
				ScriptAddressTemp = ScriptAddress3
				ScriptAddressTemp1 = 3907573180
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 3472873952
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 3654866406
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 3872767487
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 3972005848
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = ScriptAddressTemp + 4
				ScriptAddressTemp1 = 4294961373
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
				LoadScriptIntoMemory()
		--Placeholder
			elseif ScriptNo == 3 then
				emu:write16(Var8000Adr[2], 0) 

				local PlaceholderScript = {285216618, 151562240, 2147554822, 40632321, 3907242239, 3689078236, 3839220736, 3655522788, 16756952, 4294967295}
				 
				for i = 1, #PlaceholderScript do
					ROMCARD:write32(ScriptAddressTemp, PlaceholderScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--Waiting message
			elseif ScriptNo == 4 then
				emu:write16(Var8000Adr[2], 0) 

				
				local WaitingScript = {1271658, 375785640, 5210113, 654415909, 3523150444, 3723025877, 3657489378, 3808487139, 3873037544, 3588285440, 2967919085, 4294902015}
				
				for i = 1, #WaitingScript do
					ROMCARD:write32(ScriptAddressTemp, WaitingScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				
				LoadScriptIntoMemory()
		--Cancel message
			elseif ScriptNo == 5 then
				emu:write16(Var8000Adr[2], 0) 

				local CancelScript = {285216618, 151562240, 2147554822, 40632325, 3655126783, 3706249984, 3825264345, 3656242656, 3587965158, 3587637479, 3772372962, 4289583321, 4294967040}
				 
				for i = 1, #CancelScript do
					ROMCARD:write32(ScriptAddressTemp, CancelScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--Trade request
			elseif ScriptNo == 6 then
				emu:write16(Var8000Adr[2], 0) 

				local TradeRequestScript = {469765994, 151562240, 2148344069, 393217, 145227850, 41943318, 4278348800, 3942646781, 3655133149, 3823632615, 3588679680, 3942701528, 14477533, 2917786605, 14925566, 15328237, 3654801365, 4289521892, 18284288, 1811939712, 4294967042}
				 
				for i = 1, #TradeRequestScript do
					ROMCARD:write32(ScriptAddressTemp, TradeRequestScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
				--For buffer 2
				ScriptAddressTemp = 33692912
				ScriptAddressTemp1 = Buffer[1]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 1
				ScriptAddressTemp1 = Buffer[2]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 2
				ScriptAddressTemp1 = Buffer[3]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 3
				ScriptAddressTemp1 = Buffer[4]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 4
				ScriptAddressTemp1 = 255
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
		--Trade request denied
			elseif ScriptNo == 7 then
				emu:write16(Var8000Adr[2], 0) 

				local TradeRequestDeniedScript = {285216618, 151562240, 2147554822, 40632321, 3655126783, 3706249984, 3825264345, 3656242656, 3822584038, 3808356313, 3942705379, 14477277, 3892372456, 3654866406, 4278255533}
				 
				for i = 1, #TradeRequestDeniedScript do
					ROMCARD:write32(ScriptAddressTemp, TradeRequestDeniedScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--Trade offer
			elseif ScriptNo == 8 then
				emu:write16(Var8000Adr[2], 0) 

				local TradeOfferScript = {469765994, 151562240, 2148344069, 393217, 145227866, 41943318, 4278348800, 15328211, 3656046044, 3671778048, 3638159065, 2902719744, 3655126782, 3587965165, 3808483818, 3873037018, 4244691161, 3522931970, 14737629, 15328237, 3654801365, 4289521892, 18284288, 1811939712, 4294967042}
				 
				for i = 1, #TradeOfferScript do
					ROMCARD:write32(ScriptAddressTemp, TradeOfferScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--Trade offer denied
			elseif ScriptNo == 9 then
				emu:write16(Var8000Adr[2], 0)

				local TradeOfferDeniedScript = {285216618, 151562240, 2147554822, 40632321, 3655126783, 3588679680, 3691043288, 3590383573, 14866905, 3772242392, 3638158045, 4278255533}
				 
				for i = 1, #TradeOfferDeniedScript do
					ROMCARD:write32(ScriptAddressTemp, TradeOfferDeniedScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end

				LoadScriptIntoMemory()
		--Battle request
			elseif ScriptNo == 10 then
				emu:write16(Var8000Adr[2], 0) 

				local BattleRequestScript = {469765994, 151562240, 2148344069, 393217, 145227846, 41943318, 4278348800, 3942646781, 3655133149, 3823632615, 3906328064, 14278888, 2917786605, 14925566, 15328237, 3654801365, 4289521892, 18284288, 1811939712, 4294967042}
				 
				for i = 1, #BattleRequestScript do
					ROMCARD:write32(ScriptAddressTemp, BattleRequestScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end

				LoadScriptIntoMemory()
				--For buffer 2
				ScriptAddressTemp = 33692912
				ScriptAddressTemp1 = Buffer[1]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 1
				ScriptAddressTemp1 = Buffer[2]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 2
				ScriptAddressTemp1 = Buffer[3]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 3
				ScriptAddressTemp1 = Buffer[4]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = 33692912 + 4
				ScriptAddressTemp1 = 255
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
		--Battle request denied
			elseif ScriptNo == 11 then
				emu:write16(Var8000Adr[2], 0) 

				local BattleRequestDeniedScript = {285216618, 151562240, 2147554822, 40632321, 3655126783, 3706249984, 3825264345, 3656242656, 3822584038, 3808356313, 3942705379, 14477277, 3590382568, 3773360341, 16756185, 4294967295}
				 
				for i = 1, #BattleRequestDeniedScript do
					ROMCARD:write32(ScriptAddressTemp, BattleRequestDeniedScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end

				LoadScriptIntoMemory()
		--Select Pokemon for trade
			elseif ScriptNo == 12 then
				emu:write16(Var8000Adr[1], 0) 
				emu:write16(Var8000Adr[2], 0) 
				emu:write16(Var8000Adr[4], 0) 
				emu:write16(Var8000Adr[5], 0) 
				emu:write16(Var8000Adr[14], 0) 

				local SelectPkmForTradeScript = {10429802, 2147754279, 67502086, 145227809, 1199571750, 50429185, 2147554944, 40632322, 2147555071, 40632321, 4294967295}
				 
				for i = 1, #SelectPkmForTradeScript do
					ROMCARD:write32(ScriptAddressTemp, SelectPkmForTradeScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end

				LoadScriptIntoMemory()
		--Battle will start
			elseif ScriptNo == 13 then
				emu:write16(Var8000Adr[2], 0)

				local StartBattleScript = {1416042, 627443880, 1009254542, 2147554816, 40632322, 3924022271, 3587571942, 3655395560, 3772640000, 3823239392, 3654680811, 2917326299, 4294902015}
				 
				for i = 1, #StartBattleScript do
					ROMCARD:write32(ScriptAddressTemp, StartBattleScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--Trade will start
			elseif ScriptNo == 14 then
				emu:write16(Var8000Adr[2], 0)

				local StartTradeScript = {1416042, 627443880, 1009254542, 2147554816, 40632322, 3924022271, 3873964262, 14276821, 3772833259, 3957580288, 3688486400, 4289585885, 4294967040}
				 
				for i = 1, #StartTradeScript do
					ROMCARD:write32(ScriptAddressTemp, StartTradeScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--You have canceled the battle
			elseif ScriptNo == 15 then
				emu:write16(Var8000Adr[2], 0)

				local SelfCancelBattleScript = {285216618, 151562240, 2147554822, 40632326, 3924022271, 3939884032, 3587637465, 3772372962, 14211552, 14277864, 3907573206, 4289583584, 4294967040}
				 
				for i = 1, #SelfCancelBattleScript do
					ROMCARD:write32(ScriptAddressTemp, SelfCancelBattleScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
		--You have canceled the trade
			elseif ScriptNo == 16 then
				emu:write16(Var8000Adr[2], 0)
				
				local SelfCancelTradeScript = {285216618, 151562240, 2147554822, 40632326, 3924022271, 3939884032, 3587637465, 3772372962, 14211552, 14277864, 3637896936, 16756185, 4294967295}
				 
				for i = 1, #SelfCancelTradeScript do
					ROMCARD:write32(ScriptAddressTemp, SelfCancelTradeScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
			--Trading. Your pokemon is stored in 8004, whereas enemy pokemon is already stored through setenemypokemon command
			elseif ScriptNo == 17 then
				emu:write16(Var8000Adr[2], 0)
				emu:write16(Var8000Adr[6], Var8000[5])
				
				local TradeScript = {16655722, 2147554855, 40632321, 4294967295}
				 
				for i = 1, #TradeScript do
					ROMCARD:write32(ScriptAddressTemp, TradeScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
			--Cancel Battle
			elseif ScriptNo == 18 then
				emu:write16(Var8000Adr[2], 0)
				 
				local CancelBattleScript = {285216618, 151562240, 2147554822, 40632325, 3655126783, 3706249984, 3825264345, 3656242656, 3587965158, 3587637479, 3772372962, 4275624416, 14277864, 3907573206, 4289583584, 4294967040}
				
				for i = 1, #CancelBattleScript do
					ROMCARD:write32(ScriptAddressTemp, CancelBattleScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
			--Cancel Trading
			elseif ScriptNo == 19 then
				emu:write16(Var8000Adr[2], 0)
				 
				local CancelTradeScript = {285216618, 151562240, 2147554822, 40632325, 3655126783, 3706249984, 3825264345, 3656242656, 3587965158, 3587637479, 3772372962, 4275624416, 14277864, 3637896936, 16756185, 4294967295}
				for i = 1, #CancelTradeScript do
					ROMCARD:write32(ScriptAddressTemp, CancelTradeScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
			--other player is too busy to battle.
			elseif ScriptNo == 20 then
				emu:write16(Var8000Adr[2], 0)
				 
				local BusyBattleScript = {285216618, 151562240, 2147554822, 40632321, 3722235647, 3873964263, 3655523797, 3655794918, 15196633, 4276347880, 3991398870, 14936064, 3907573206, 4289780192, 4294967040}
				
				for i = 1, #BusyBattleScript do
					ROMCARD:write32(ScriptAddressTemp, BusyBattleScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
			--other player is too busy to trade.
			elseif ScriptNo == 21 then
				emu:write16(Var8000Adr[2], 0)
				 
				local BusyTradeScript =  {285216618, 151562240, 2147554822, 40632321, 3722235647, 3873964263, 3655523797, 3655794918, 15196633, 4276347880, 3991398870, 14936064, 3637896936, 16756953, 4294967295}
				for i = 1, #BusyTradeScript do
					ROMCARD:write32(ScriptAddressTemp, BusyTradeScript[i]) 
					ScriptAddressTemp = ScriptAddressTemp + 4 
				end
				LoadScriptIntoMemory()
			--battle script
			elseif ScriptNo == 22 then
				emu:write16(Var8000Adr[2], 0)
				 
				ScriptAddressTemp1 = 40656234
				ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1) 
				LoadScriptIntoMemory()
			--trade names script.
			elseif ScriptNo == 23 then
				--Other trainer aka other player
				ScriptAddressTemp = Buffer1
				ScriptAddressTemp1 = Buffer[1]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = Buffer1 + 1
				ScriptAddressTemp1 = Buffer[2]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = Buffer1 + 2
				ScriptAddressTemp1 = Buffer[3]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = Buffer1 + 3
				ScriptAddressTemp1 = Buffer[4]
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				ScriptAddressTemp = Buffer1 + 4
				ScriptAddressTemp1 = 255
				emu:write8(ScriptAddressTemp, ScriptAddressTemp1)
				--Their pokemon
				WriteBuffers(Buffer3, EnemyTradeVars[6], 5)
			end
			
end

function ApplyMovement(MovementType)
	local u32 ScriptAddress = 50335400
	local u32 ScriptAddress2 = 145227776
	local ScriptAddressTemp = 0
	local ScriptAddressTemp1 = 0
	ScriptAddressTemp = ScriptAddress2
	ScriptAddressTemp1 = 16732010
	ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
	ScriptAddressTemp = ScriptAddressTemp + 4
	ScriptAddressTemp1 = 145227790
	ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
	ScriptAddressTemp = ScriptAddressTemp + 4
	ScriptAddressTemp1 = 1811939409
	ROMCARD:write32(ScriptAddressTemp, ScriptAddressTemp1)
	ScriptAddressTemp = ScriptAddressTemp + 4
	ScriptAddressTemp1 = 65282
	ROMCARD:write16(ScriptAddressTemp, ScriptAddressTemp1)
	if MovementType == 0 then
		ScriptAddressTemp = ScriptAddressTemp + 2
		ScriptAddressTemp1 = 65024
		ROMCARD:write16(ScriptAddressTemp, ScriptAddressTemp1)
		LoadScriptIntoMemory()
	elseif MovementType == 1 then
		ScriptAddressTemp = ScriptAddressTemp + 2
		ScriptAddressTemp1 = 65025
		ROMCARD:write16(ScriptAddressTemp, ScriptAddressTemp1)
		LoadScriptIntoMemory()
	elseif MovementType == 2 then
		ScriptAddressTemp = ScriptAddressTemp + 2
		ScriptAddressTemp1 = 65026
		ROMCARD:write16(ScriptAddressTemp, ScriptAddressTemp1)
		LoadScriptIntoMemory()
	elseif MovementType == 3 then
		ScriptAddressTemp = ScriptAddressTemp + 2
		ScriptAddressTemp1 = 65027
		ROMCARD:write16(ScriptAddressTemp, ScriptAddressTemp1)
		LoadScriptIntoMemory()
	end
end

function LoadScriptIntoMemory()
	--This puts the script at ScriptAddress into the memory, forcing it to load

	local u32 ScriptAddress = 50335400
	local u32 ScriptAddress2 = 145227776
	local ScriptAddressTemp = 0
	local ScriptAddressTemp1 = 0
	ScriptAddressTemp = ScriptAddress
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	--Either use 66048, 512, or 513.
	ScriptAddressTemp1 = 513
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4
	--134654353 and 145293312 freezes the game
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = ScriptAddress2 + 1
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1)
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1)
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1) 
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1)
	ScriptAddressTemp = ScriptAddressTemp + 4 
	ScriptAddressTemp1 = 0
	emu:write32(ScriptAddressTemp, ScriptAddressTemp1)
	--END Block
end

function SendMultiplayerPackets(Offset, size, Socket)
	local Packet = ""
	local ModifiedSize = 0
	local ModifiedLoop = 0
	local ModifiedLoop2 = 0
	local PacketAmount = 0
	--Using RAM 0263DE00 for packets, as it seems free. If not, will modify later
	if Offset == 0 then Offset = 40099328 end
	local ModifiedRead = ""
	if size > 0 then
		CreatePackettSpecial("SLNK",Socket,size)
		for i = 1, size do
			--Inverse of i, size remaining. 1 = last. Also size represents hex bytes, which goes up to 255 in decimal, so we triple it.
			ModifiedSize = size - i + 1
			if ModifiedSize > 20 and ModifiedLoop == 0 then
				PacketAmount = PacketAmount + 1
				ModifiedLoop = 20
				ModifiedLoop2 = 0
			--	ConsoleForText:print("Packet number: " .. PacketAmount)
			elseif ModifiedSize <= 20 and ModifiedLoop == 0 then
				PacketAmount = PacketAmount + 1
				ModifiedLoop = ModifiedSize
				ModifiedLoop2 = 0
			--	ConsoleForText:print("Last packet. Number: " .. PacketAmount)
			end
			if ModifiedLoop ~= 0 then
				ModifiedLoop2 = ModifiedLoop2 + 1
				ModifiedRead = emu:read8(Offset)
				ModifiedRead = tonumber(ModifiedRead)
				ModifiedRead = ModifiedRead + 100
				if Packet == "" then Packet = ModifiedRead
				else Packet = Packet .. ModifiedRead
				end
				if ModifiedLoop == 1 then
					Socket:send(Packet)
			--		ConsoleForText:print("Packet sent! Packet " .. Packet .. " end. Amount of loops: " .. ModifiedLoop2 .. " " .. Offset)
					Packet = ""
					ModifiedLoop = 0
				else
					ModifiedLoop = ModifiedLoop - 1
				end
			end
			Offset = Offset + 1
		end
	end
end

function ReceiveMultiplayerPackets(size, Socket)
	local Packet = ""
	local ModifiedSize = 0
	local ModifiedLoop = 0
	local ModifiedLoop2 = 0
	local PacketAmount = 0
	local ModifiedRead
	local ModifiedLoop3 = 0
	local SizeMod = 0
	--Using RAM 0263D000-0263DDFF for received data, as it seems free. If not, will modify later
	local MultiplayerPacketSpace = 40095744
	ConsoleForText:print("TEST 1")
	for i = 1, size do
		--Inverse of i, size remaining. 1 = last. Also size represents hex bytes, which goes up to 255 in decimal
		ModifiedSize = size - i + 1
		if ModifiedSize > 20 and ModifiedLoop == 0 then
			PacketAmount = PacketAmount + 1
			Packet = Socket:receive(60)
			ModifiedLoop = 20
			ModifiedLoop2 = 0
			ConsoleForText:print("Packet number: " .. PacketAmount)
		elseif ModifiedSize <= 20 and ModifiedLoop == 0 then
			PacketAmount = PacketAmount + 1
			SizeMod = ModifiedSize * 3
			Packet = Socket:receive(SizeMod)
			ModifiedLoop = ModifiedSize
			ModifiedLoop2 = 0
			ConsoleForText:print("Last packet. Number: " .. PacketAmount)
		end
		if ModifiedLoop ~= 0 then
			ModifiedLoop3 = ModifiedLoop2 * 3 + 1
			ModifiedLoop2 = ModifiedLoop2 + 1
			SizeMod = ModifiedLoop3 + 2
			ModifiedRead = string.sub(Packet, ModifiedLoop3, SizeMod)
			ModifiedRead = tonumber(ModifiedRead)
			ModifiedRead = ModifiedRead - 100
			emu:write8(MultiplayerPacketSpace, ModifiedRead)
			ConsoleForText:print("Num: " .. ModifiedRead)
	--		ConsoleForText:print("NUM: " .. ModifiedRead)
			if ModifiedLoop == 1 then
				ConsoleForText:print("Packet " .. PacketAmount .. " end. Amount of loops: " .. ModifiedLoop2 .. " " .. MultiplayerPacketSpace)
				Packet = ""
				ModifiedLoop = 0
			else
				ModifiedLoop = ModifiedLoop - 1
			end
		end
		MultiplayerPacketSpace = MultiplayerPacketSpace + 1
	end
end

function Battlescript()


end

function BattlescriptClassic()
	--Cursor
	
	BattleVars[2] = emu:read8(33701880)
	--Battle finished. 1 = yes, 0 = is still ongoing
	BattleVars[3] = emu:read8(33701514)
	--Phase. 4 = finished moves.
	BattleVars[4] = emu:read8(33701506)
	--Speed. 256 = You move first. 1 = You move last
	BattleVars[5] = emu:read16(33700830)
	if BattleVars[5] > 10 then BattleVars[5] = 1
	else BattleVars[5] = 0
	end
		
	--Initialize battle
	if BattleVars[1] == 0 then
		BattleVars[1] = 1
		BattleVars[11] = 1
		
		Loadscript(22)
		--Trainerbattleoutro
		local Buffer1 = 33785528
		local Buffer2 = 145227780
		--Outro for battle. "Thanks for the great battle."
		local Bufferloc = "1145227780"
		local Bufferstring = "48056665104657492447489237321946742660764906329062490632806439167372565294967295"
	
		--514 = Player red ID, 515 = Leaf aka female
		emu:write16(33785518, 514)
		--Cursor. Set to 0
		emu:write8(33701880, 0)
		--Set win to 0
		emu:write8(33701514, 0)
		--Set speeds to 0
		emu:write16(33700830, 0)
		--Set turn to 0
		emu:write8(33700834, 0)
				
		WriteBuffers(Buffer1, Bufferloc, 1)
		WriteRom(Buffer2, Bufferstring, 8)
		
	--Wait 150 frames for other vars to load
	elseif BattleVars[1] == 1 and BattleVars[11] < 150 then
		BattleVars[11] = BattleVars[11] + 1
			--514 = Player red ID, 515 = Leaf aka female
			emu:write16(33785518, 514)
			--Cursor. Set to 0
			emu:write8(33701880, 0)
			--Set win to 0
			emu:write8(33701514, 0)
			--Set speeds to 0
			emu:write16(33700830, 0)
			--Set turn to 0
			emu:write8(33700834, 0)
			if BattleVars[11] >= 150 then
				--Set enemy team
				SetEnemyPokemonTeam(0,1)
				BattleVars[1] = 2
			end
		
	--Battle loop
	elseif BattleVars[1] == 2 then
		BattleVars[12] = emu:read8(33700808)
		BufferVars[20] = ""
		
		--If both players have not gone
		if BattleVars[6] == 0 then
			--You have not decided on a move
			if BattleVars[4] >= 1 and EnemyBattleVars[4] ~= 4 then
				--Pause until other player has made a move
				if BattleVars[12] < 32 then
					BattleVars[12] = BattleVars[12] + 32
					emu:write8(33700808, BattleVars[12])
				end
			elseif BattleVars[4] >= 4 and EnemyBattleVars[4] >= 4 then
				if MasterClient == "h" then
					if BattleVars[5] == 1 then
						BattleVars[6] = 1
					else
						BattleVars[6] = 2
					end
				else
					if EnemyBattleVars[5] == 1 then
						BattleVars[6] = 2
					else
						BattleVars[6] = 1
					end
				end
			end
		--You go first
		elseif BattleVars[6] == 1 then
			local TurnTime = emu:read8(33700834)
			--Write speed to 256
			emu:write16(33700830, 256)
			if BattleVars[7] == 0 then
				BattleVars[7] = 1
			--	BattleVars[13] = ReadBuffers()
			--	ConsoleForText:print("First")
			-- SEND DATA
				CreatePackettSpecial("BAT2", Players[PlayerTalkingID])
				
			--Animate
			elseif BattleVars[7] == 1 and EnemyBattleVars[7] == 1 and TurnTime == 0 then
				if BattleVars[12] >= 32 then
					BattleVars[12] = BattleVars[12] - 32
					emu:write8(33700808, BattleVars[12])
				end
				
			--Other player's turn. Pause.
			elseif BattleVars[7] == 1 and TurnTime == 1 then
				if BattleVars[12] < 32 then
					BattleVars[12] = BattleVars[12] + 32
					emu:write8(33700808, BattleVars[12])
				end
				BattleVars[7] = 2
			--Once received then set 7 to 3.
			elseif BattleVars[7] == 2 and string.len(BattleVars[20]) == 280 and string.len(BattleVars[21]) == 244 then
				BattleVars[7] = 3
			--Animate
			elseif BattleVars[7] == 3 and EnemyBattleVars[7] == 3 then
				if BattleVars[12] >= 32 then
					BattleVars[12] = BattleVars[12] - 32
					emu:write8(33700808, BattleVars[12])
				end
				BattleVars[7] = 4
			--Lock after animations while waiting for other player
			elseif BattleVars[7] == 4 and TurnTime == 2 then
				if BattleVars[12] < 32 then
					BattleVars[12] = BattleVars[12] + 32
					emu:write8(33700808, BattleVars[12])
				end
			--Unlock if both players finish animations
			elseif BattleVars[7] == 4 and TurnTime == 2 then
				if BattleVars[12] < 32 then
					BattleVars[12] = BattleVars[12] + 32
					emu:write8(33700808, BattleVars[12])
				end
				BattleVars[7] = 4
			end
		--You go second
		elseif BattleVars[6] == 2 then
		local TurnTime = emu:read8(33700834)
			--Write speed to 1
			emu:write16(33700830, 1)
			if BattleVars[7] == 0 and string.len(BattleVars[20]) == 280 and string.len(BattleVars[21]) == 244 then
				BattleVars[7] = 1
			--	BattleVars[13] = ReadBuffers()
			-- RECEIVEDATA
			--	ConsoleForText:print("Second")
			elseif BattleVars[7] == 1 and EnemyBattleVars[7] == 1 then
				if BattleVars[12] >= 32 then
					BattleVars[12] = BattleVars[12] - 32
					emu:write8(33700808, BattleVars[12])
				end
			end
		end
	end
	
	--Prevent item use
	if BattleVars[1] >= 2 and BattleVars[2] == 1 then emu:write8(33696589, 1)
	else emu:write8(33696589, 0)
	end
	
	--Unlock once battle ends
	if BattleVars[1] >= 2 and BattleVars[3] == 1 then LockFromScript = 0 end
	
	
	if SendTimer == 0 then CreatePackettSpecial("BATT", Players[PlayerTalkingID]) end
end

function WriteBuffers(BufferOffset, BufferVar, Length)
	local BufferOffset2 = BufferOffset
	local BufferVarSeperate
	local String1 = 0
	local String2 = 0
	for i = 1, Length do
		if i == 1 then String1 = 1
		else String1 = String1 + 10
		end
		String2 = String1 + 9
		BufferVarSeperate = string.sub(BufferVar, String1, String2)
		BufferVarSeperate = tonumber(BufferVarSeperate)
		BufferVarSeperate = BufferVarSeperate - 1000000000
		emu:write32(BufferOffset2, BufferVarSeperate)
		BufferOffset2 = BufferOffset2 + 4
	end
end
function WriteRom(RomOffset, RomVar, Length)
	local RomOffset2 = RomOffset
	local RomVarSeperate
	local String1 = 0
	local String2 = 0
	for i = 1, Length do
		if i == 1 then String1 = 1
		else String1 = String1 + 10
		end
		String2 = String1 + 9
		RomVarSeperate = string.sub(RomVar, String1, String2)
		RomVarSeperate = tonumber(RomVarSeperate)
		RomVarSeperate = RomVarSeperate - 1000000000
		ROMCARD:write32(RomOffset2, RomVarSeperate)
		RomOffset2 = RomOffset2 + 4
	end
end
function ReadBuffers(BufferOffset, Length)
	local BufferOffset2 = BufferOffset
	local BufferVar
	local BufferVarSeperate
	for i = 1, Length do
		BufferVarSeperate = emu:read32(BufferOffset2)
		BufferVarSeperate = tonumber(BufferVarSeperate)
		BufferVarSeperate = BufferVarSeperate + 1000000000
		if i == 1 then BufferVar = BufferVarSeperate
		else BufferVar = BufferVar .. BufferVarSeperate
		end
		BufferOffset2 = BufferOffset2 + 4
	end
	return BufferVar
end
function Tradescript()
	--Buffer 1 is enemy pokemon, 2 is our pokemon
	local Buffer1 = 33692880
	local Buffer2 = 33692912
	local Buffer3 = 33692932
	
	
	
	if TradeVars[1] == 0 and TradeVars[4] == 0 and TradeVars[3] == 0 and EnemyTradeVars[3] == 0 then
		OtherPlayerHasCancelled = 0
		TradeVars[3] = 1
		Loadscript(4)
	elseif TradeVars[1] == 0 and TradeVars[4] == 0 and TradeVars[3] == 0 and EnemyTradeVars[3] > 0 then
		TradeVars[3] = 1
		TradeVars[4] = 1
		Loadscript(14)
	elseif TradeVars[1] == 0 and TradeVars[4] == 0 and EnemyTradeVars[3] > 0 and TradeVars[3] > 0 then
		TradeVars[4] = 1
		Loadscript(14)

	--	if TempVar2 == 0 then ConsoleForText:print("1: " .. TradeVars[1] .. " 8001: " .. Var8000[2] .. " OtherPlayerHasCancelled: " .. OtherPlayerHasCancelled .. " EnemyTradeVars[1]: " .. EnemyTradeVars[1]) end

	--Text is finished before trade
	elseif Var8000[2] ~= 0 and TradeVars[4] == 1 and TradeVars[1] == 0 then
		TradeVars[1] = 1
		TradeVars[2] = 0
		TradeVars[3] = 0
		TradeVars[4] = 0
		Var8000[1] = 0
		Var8000[2] = 0
		Loadscript(12)
	
	--You have canceled or have not selected a valid pokemon slot
	elseif Var8000[2] == 1 and TradeVars[1] == 1 then
		Loadscript(16)
		SendData("CTRA",Players[PlayerTalkingID])
		LockFromScript = 0
		TradeVars[1] = 0
		TradeVars[2] = 0
		TradeVars[3] = 0
	--The other player has canceled
	elseif Var8000[2] == 2 and TradeVars[1] == 1 and OtherPlayerHasCancelled ~= 0 then
		OtherPlayerHasCancelled = 0
		Loadscript(19)
		LockFromScript = 7
		TradeVars[1] = 0
		TradeVars[2] = 0
		TradeVars[3] = 0
	
	--You have finished your selection
	elseif Var8000[2] == 2 and TradeVars[1] == 1 and OtherPlayerHasCancelled == 0 then
		--You just finished. Display waiting
		TradeVars[3] = Var8000[5]
		TradeVars[5] = ReadBuffers(Buffer2, 4)
	--	TradeVars[6] = TradeVars[5] .. 5294967295
	--	WriteBuffers(Buffer1, TradeVars[6], 5)
		if EnemyTradeVars[1] == 2 then
			EnemyTradeVars[6] = EnemyTradeVars[5] .. 5294967295
			WriteBuffers(Buffer1, EnemyTradeVars[6], 5)
			TradeVars[1] = 3
			Loadscript(8)
		else
			Loadscript(4)
			TradeVars[1] = 2
		end
	elseif TradeVars[1] == 2 then
		--Wait for other player
		if Var8000[2] ~= 0 then TradeVars[2] = 1 end
		--If they cancel
		if Var8000[2] ~= 0 and OtherPlayerHasCancelled ~= 0 then
			OtherPlayerHasCancelled = 0
			Loadscript(19)
			LockFromScript = 7
			TradeVars[1] = 0
			TradeVars[2] = 0
			TradeVars[3] = 0
			
		--If other player has finished selecting
		elseif Var8000[2] ~= 0 and ((EnemyTradeVars[2] == 1 and EnemyTradeVars[1] == 2) or EnemyTradeVars[1] == 3) then
			EnemyTradeVars[6] = EnemyTradeVars[5] .. 5294967295
			WriteBuffers(Buffer1, EnemyTradeVars[6], 5)
			TradeVars[1] = 3
			TradeVars[2] = 0
			Loadscript(8)
			
		end
	elseif TradeVars[1] == 3 then
		--If you decline
		if Var8000[2] == 1 then
			SendData("ROFF", Players[PlayerTalkingID])
			Loadscript(16)
			LockFromScript = 7
			TradeVars[1] = 0
			TradeVars[2] = 0
			TradeVars[3] = 0
			
		--If you accept and they deny
		elseif Var8000[2] == 2 and OtherPlayerHasCancelled ~= 0 then
			OtherPlayerHasCancelled = 0
			Loadscript(9)
			LockFromScript = 7
			TradeVars[1] = 0
			TradeVars[2] = 0
			TradeVars[3] = 0
	
		--If you accept and there is no denial
		elseif Var8000[2] == 2 and OtherPlayerHasCancelled == 0 then
			--If other player isn't finished selecting, wait. Otherwise, go straight into trade.
			if EnemyTradeVars[1] == 4 and EnemyTradeVars[2] == 2 then
				TradeVars[1] = 5
				TradeVars[2] = 2
				local TeamPos = EnemyTradeVars[3] + 1
				SetEnemyPokemonTeam(TeamPos, 1)
				Loadscript(17)
			else
				Loadscript(4)
				TradeVars[1] = 4
				TradeVars[2] = 0
			end
	end
	elseif TradeVars[1] == 4 then
		--Wait for other player
		if Var8000[2] ~= 0 then TradeVars[2] = 2 end
		--If they cancel
		if Var8000[2] ~= 0 and OtherPlayerHasCancelled ~= 0 then
			OtherPlayerHasCancelled = 0
			Loadscript(19)
			LockFromScript = 7
			TradeVars[1] = 0
			TradeVars[2] = 0
			TradeVars[3] = 0
			
		--If other player has finished selecting
		elseif Var8000[2] ~= 0 and (EnemyTradeVars[2] == 2 or EnemyTradeVars[1] == 5) then
			TradeVars[2] = 2
			TradeVars[1] = 5
			local TeamPos = EnemyTradeVars[3] + 1
			SetEnemyPokemonTeam(TeamPos, 1)
			Loadscript(17)
		else
	--		console:log("VARS: " .. Var8000[2] .. " " .. EnemyTradeVars[2] .. " " .. EnemyTradeVars[1])
		end
	elseif TradeVars[1] == 5 then
		--Text for trade
		if Var8000[2] == 0 then
			Loadscript(23)
		--After trade
		elseif Var8000[2] ~= 0 then
			TradeVars[1] = 0
			TradeVars[2] = 0
			TradeVars[3] = 0
			TradeVars[4] = 0
			TradeVars[5] = 0
			EnemyTradeVars[1] = 0
			EnemyTradeVars[2] = 0
			EnemyTradeVars[3] = 0
			EnemyTradeVars[5] = 0
			LockFromScript = 0
		end
	end
	
	if SendTimer == 0 then CreatePackettSpecial("TRAD", Players[PlayerTalkingID]) end
end
		--	if Var8000[2] ~= 0 then
		--		Loadscript(16)
		--		SendData("CTRA", Player2)
		--		LockFromScript = 7
		--		TradeVars[1] = 0
		--		TradeVars[2] = 0
		--		TradeVars[3] = 0

function RenderPlayersOnDifferentMap()
	--if MapChange[1] ~= 0 then console:log("MAP CHANGE PLAYER 1") MapChange[1] = 0 end
	--if MapChange[2] ~= 0 then console:log("MAP CHANGE PLAYER 2") MapChange[2] = 0 end
	for i = 1, MaxPlayers do
		if PlayerID ~= i and PlayerIDNick[i] ~= "None" then
			if PlayerMapID == CurrentMapID[i] then
				--ConsoleForText:print("Drawing on same map player: " .. i .. " my/their mapID: " .. PlayerMapID .. "/" .. CurrentMapID[i] .. " previousmapID: " .. PlayerMapIDPrev .. "/" .. PreviousMapID[i] .. string.char(10))
				PlayerVis[i] = 1
				DifferentMapX[i] = 0
				DifferentMapY[i] = 0
				MapChange[i] = 0
			elseif (PlayerMapIDPrev == CurrentMapID[i] or PlayerMapID == PreviousMapID[i]) and (MapEntranceType[i] == 0 or PlayerMapEntranceType == 0) then
				--ConsoleForText:print("Drawing on diff map player: " .. i .. " my/their mapID: " .. PlayerMapID .. "/" .. CurrentMapID[i] .. " previousmapID: " .. PlayerMapIDPrev .. "/" .. PreviousMapID[i] .. " MapEntranceType: " .. PlayerMapEntranceType .. "/" .. MapEntranceType[i] .. string.char(10))
				PlayerVis[i] = 1
				if MapChange[i] == 1 then
					DifferentMapX[i] = ((PreviousX[i] - StartX[i]) * 16)
					DifferentMapY[i] = ((PreviousY[i] - StartY[i]) * 16)
				end
			else
				--ConsoleForText:print("Not drawing on diff map player: " .. i .. " my/their mapID: " .. PlayerMapID .. "/" .. CurrentMapID[i] .. " previousmapID: " .. PlayerMapIDPrev .. "/" .. PreviousMapID[i] .. " MapEntranceType: " .. PlayerMapEntranceType .. "/"  .. MapEntranceType[i] .. string.char(10))
				PlayerVis[i] = 0
				DifferentMapX[i] = 0
				DifferentMapY[i] = 0
				MapChange[i] = 0
			end
		end
	end
end

function GetPosition()
	local u32 BikeAddress = 0
	local u32 MapAddress = 0
	local u32 PrevMapIDAddress = 0
	local u32 ConnectionTypeAddress = 0
	local u32 PlayerXAddress = 0
	local u32 PlayerYAddress = 0
	local u32 PlayerFaceAddress = 0
	local Bike = 0
	if GameID == "BPR1" or GameID == "BPR2" then
		--Addresses for Firered
		PlayerXAddress = 33779272
		PlayerYAddress = 33779274
		PlayerFaceAddress = 33779284
		MapAddress = 33813416
		BikeAddress = 33687112
		PrevMapIDAddress = 33813418
		ConnectionTypeAddress = 33785351
		Bike = emu:read16(BikeAddress)
		if Bike > 3000 then Bike = Bike - 3352 end
	elseif GameID == "BPG1" or GameID == "BPG2" then
		--Addresses for Leafgreen
		PlayerXAddress = 33779272
		PlayerYAddress = 33779274
		PlayerFaceAddress = 33779284
		MapAddress = 33813416
		BikeAddress = 33687112
		PrevMapIDAddress = 33813418
		ConnectionTypeAddress = 33785351
		Bike = emu:read16(BikeAddress)
		if Bike > 3000 then Bike = Bike - 3320 end
	elseif GameID == "BPEE" then
		--Addresses for Emerald
		PlayerXAddress = 33780576
		PlayerYAddress = 33780578
		PlayerFaceAddress = 33780588
		MapAddress = 33799296
		BikeAddress = 33687100
		PrevMapIDAddress = 33799298
		ConnectionTypeAddress = 33786663
		Bike = emu:read16(BikeAddress)
			-- Emerald Bike Values: 
				--Dive 23708 
				--Surf 23612
				--Walking 23180
				--Biking 23396
	end
	PlayerFacing = emu:read8(PlayerFaceAddress)
	Facing2[PlayerID] = PlayerFacing + 100   --obsolete?
	PlayerMapEntranceType = emu:read8(ConnectionTypeAddress)

	
	
	--Prev map
	PlayerMapIDPrev = emu:read16(PrevMapIDAddress)
	PlayerMapIDPrev = PlayerMapIDPrev + 100000
	-- These values are only equal if you are changing map
	if (PlayerMapIDPrev == PlayerMapID) then
		PreviousX[PlayerID] = CurrentX[PlayerID]
		PreviousY[PlayerID] = CurrentY[PlayerID]
		if PlayerMapEntranceType > 10 then PlayerMapEntranceType = 9 end
		PlayerMapChange = 1
		MapChange[PlayerID] = 1
	end
	PlayerMapID = emu:read16(MapAddress)
	PlayerMapID = PlayerMapID + 100000
	PlayerMapX = emu:read16(PlayerXAddress)
	PlayerMapY = emu:read16(PlayerYAddress)
	PlayerMapX = PlayerMapX + 2000
	PlayerMapY = PlayerMapY + 2000
		
	CurrentX[PlayerID] = PlayerMapX
	CurrentY[PlayerID] = PlayerMapY
	--	console:log("X: " .. CurrentX[PlayerID])

	-- Firered/Leafgreen
		--Male Sprite from 1.0, 1.1, and leafgreen
		if ((Bike == 160 or Bike == 272) or (Bike == 128 or Bike == 240)) then
			globalSpriteNo[PlayerID] = FR_M_SpriteID
			PlayerExtra3[PlayerID] = 0
		--	if TempVar2 == 0 then ConsoleForText:print("Male on Foot") end

		--Male Biking Sprite										
		elseif (Bike == 320 or Bike == 432 or Bike == 288 or Bike == 400) then
			globalSpriteNo[PlayerID] = FR_M_SpriteID
			PlayerExtra3[PlayerID] = 1
		--	if TempVar2 == 0 then ConsoleForText:print("Male on Bike") end

		--Male Surfing Sprite
		elseif (Bike == 624 or Bike == 736 or Bike == 592 or Bike == 704) then
			globalSpriteNo[PlayerID] = FR_M_SpriteID
			PlayerExtra3[PlayerID] = 2

		--Female sprite
		elseif ((Bike == 392 or Bike == 504) or (Bike == 360 or Bike == 472)) then
			globalSpriteNo[PlayerID] = FR_F_SpriteID
			PlayerExtra3[PlayerID] = 0
		--	if TempVar2 == 0 then ConsoleForText:print("Female on Foot") end

		--Female Biking sprite
		elseif ((Bike == 552 or Bike == 664) or (Bike == 520 or Bike == 632)) then
			globalSpriteNo[PlayerID] = FR_F_SpriteID
			PlayerExtra3[PlayerID] = 1
		--	if TempVar2 == 0 then ConsoleForText:print("Female on Bike") end

		--Female Surfing Sprite
		elseif (Bike == 720 or Bike == 832 or Bike == 688 or Bike == 800) then
			globalSpriteNo[PlayerID] = FR_F_SpriteID
			PlayerExtra3[PlayerID] = 2

	-- Emerald 
		--Male on foot
		elseif Bike == 23180 then
			globalSpriteNo[PlayerID] = EM_M_SpriteID;
			PlayerExtra3[PlayerID] = 0;

		--Male Biking
		elseif Bike == 23324 then
			globalSpriteNo[PlayerID] = EM_M_SpriteID;
			PlayerExtra3[PlayerID] = 1;
		
		--Male Surfing
		elseif Bike == 23612 then
			globalSpriteNo[PlayerID] = EM_M_SpriteID;
			PlayerExtra3[PlayerID] = 2;
		
		--Female on foot
		elseif Bike == 0 then
			globalSpriteNo[PlayerID] = EM_F_SpriteID;
			PlayerExtra3[PlayerID] = 0;

		--Female Biking
		elseif Bike == 0 then
			globalSpriteNo[PlayerID] = EM_F_SpriteID;
			PlayerExtra3[PlayerID] = 1;
		
		--Female Surfing
		elseif Bike == 0 then
			globalSpriteNo[PlayerID] = EM_F_SpriteID;
			PlayerExtra3[PlayerID] = 2;
	



		else
		--If in bag when connecting will automatically be firered male
		--	if TempVar2 == 0 then ConsoleForText:print("Bag/Unknown") end
		end

	if PlayerExtra1[PlayerID] ~= 0 then PlayerExtra1[PlayerID] = PlayerExtra1[PlayerID] - 100 end
	
	-- Surfing
	if PlayerExtra3[PlayerID] == 2 then
		if GameID ~= "BPEE" then
		--if (GameID == "BPR1" or GameID == "BPR2" or GameID == "BPG1" or GameID == "BPG2") then
			PreviousPlayerDirection = PlayerDirection
			--Facing
			if PlayerFacing == 0 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end
			if PlayerFacing == 1 then PlayerExtra1[PlayerID] = 34 PlayerDirection = 3 end
			if PlayerFacing == 2 then PlayerExtra1[PlayerID] = 35 PlayerDirection = 1 end
			if PlayerFacing == 3 then PlayerExtra1[PlayerID] = 36 PlayerDirection = 2 end
			--Surfing
			if PlayerFacing == 29 then PlayerExtra1[PlayerID] = 37 PlayerDirection = 4 end
			if PlayerFacing == 30 then PlayerExtra1[PlayerID] = 38 PlayerDirection = 3 end
			if PlayerFacing == 31 then PlayerExtra1[PlayerID] = 39 PlayerDirection = 1 end
			if PlayerFacing == 32 then PlayerExtra1[PlayerID] = 40 PlayerDirection = 2 end
			--Turning
			if PlayerFacing == 41 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end
			if PlayerFacing == 42 then PlayerExtra1[PlayerID] = 34 PlayerDirection = 3 end
			if PlayerFacing == 43 then PlayerExtra1[PlayerID] = 35 PlayerDirection = 1 end
			if PlayerFacing == 44 then PlayerExtra1[PlayerID] = 36 PlayerDirection = 2 end
			--hitting a wall
			if PlayerFacing == 33 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end
			if PlayerFacing == 34 then PlayerExtra1[PlayerID] = 34 PlayerDirection = 3 end
			if PlayerFacing == 35 then PlayerExtra1[PlayerID] = 35 PlayerDirection = 1 end
			if PlayerFacing == 36 then PlayerExtra1[PlayerID] = 36 PlayerDirection = 2 end
			--getting on pokemon
			if PlayerFacing == 70 then PlayerExtra1[PlayerID] = 37 PlayerDirection = 4 end
			if PlayerFacing == 71 then PlayerExtra1[PlayerID] = 38 PlayerDirection = 3 end
			if PlayerFacing == 72 then PlayerExtra1[PlayerID] = 39 PlayerDirection = 1 end
			if PlayerFacing == 73 then PlayerExtra1[PlayerID] = 40 PlayerDirection = 2 end
			--getting off pokemon
			if PlayerFacing == 166 then PlayerExtra1[PlayerID] = 5 PlayerDirection = 4 end
			if PlayerFacing == 167 then PlayerExtra1[PlayerID] = 6 PlayerDirection = 3 end
			if PlayerFacing == 168 then PlayerExtra1[PlayerID] = 7 PlayerDirection = 1 end
			if PlayerFacing == 169 then PlayerExtra1[PlayerID] = 8 PlayerDirection = 2 end
			--calling pokemon out
			if PlayerFacing == 69 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end

		elseif GameID == "BPEE" then
			PreviousPlayerDirection = PlayerDirection
			--Facing
			if PlayerFacing == 0 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end
			if PlayerFacing == 1 then PlayerExtra1[PlayerID] = 34 PlayerDirection = 3 end
			if PlayerFacing == 2 then PlayerExtra1[PlayerID] = 35 PlayerDirection = 1 end
			if PlayerFacing == 3 then PlayerExtra1[PlayerID] = 36 PlayerDirection = 2 end
			--Surfing
			if PlayerFacing == 21 then PlayerExtra1[PlayerID] = 37 PlayerDirection = 4 end
			if PlayerFacing == 22 then PlayerExtra1[PlayerID] = 38 PlayerDirection = 3 end
			if PlayerFacing == 23 then PlayerExtra1[PlayerID] = 39 PlayerDirection = 1 end
			if PlayerFacing == 24 then PlayerExtra1[PlayerID] = 40 PlayerDirection = 2 end
			--Turning
			if PlayerFacing == 33 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end
			if PlayerFacing == 34 then PlayerExtra1[PlayerID] = 34 PlayerDirection = 3 end
			if PlayerFacing == 35 then PlayerExtra1[PlayerID] = 35 PlayerDirection = 1 end
			if PlayerFacing == 36 then PlayerExtra1[PlayerID] = 36 PlayerDirection = 2 end
			--hitting a wall
			if PlayerFacing == 29 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end
			if PlayerFacing == 30 then PlayerExtra1[PlayerID] = 34 PlayerDirection = 3 end
			if PlayerFacing == 31 then PlayerExtra1[PlayerID] = 35 PlayerDirection = 1 end
			if PlayerFacing == 32 then PlayerExtra1[PlayerID] = 36 PlayerDirection = 2 end
			--getting on pokemon
			if PlayerFacing == 70 then PlayerExtra1[PlayerID] = 37 PlayerDirection = 4 end
			if PlayerFacing == 71 then PlayerExtra1[PlayerID] = 38 PlayerDirection = 3 end
			if PlayerFacing == 72 then PlayerExtra1[PlayerID] = 39 PlayerDirection = 1 end
			if PlayerFacing == 73 then PlayerExtra1[PlayerID] = 40 PlayerDirection = 2 end
			--getting off pokemon
			if PlayerFacing == 166 then PlayerExtra1[PlayerID] = 5 PlayerDirection = 4 end
			if PlayerFacing == 167 then PlayerExtra1[PlayerID] = 6 PlayerDirection = 3 end
			if PlayerFacing == 168 then PlayerExtra1[PlayerID] = 7 PlayerDirection = 1 end
			if PlayerFacing == 169 then PlayerExtra1[PlayerID] = 8 PlayerDirection = 2 end
			--calling pokemon out
			if PlayerFacing == 69 then PlayerExtra1[PlayerID] = 33 PlayerDirection = 4 end

		end


		if ScreenData == 0 then
			if PlayerDirection == 4 then PlayerExtra1[PlayerID] = 33 PlayerFacing = 0 end
			if PlayerDirection == 3 then PlayerExtra1[PlayerID] = 34 PlayerFacing = 1 end
			if PlayerDirection == 1 then PlayerExtra1[PlayerID] = 35 PlayerFacing = 2 end
			if PlayerDirection == 2 then PlayerExtra1[PlayerID] = 36 PlayerFacing = 3 end
		end
	-- Biking
	elseif PlayerExtra3[PlayerID] == 1 then
		if RegionID == KantoRegionID then
				
			if PlayerFacing == 0 then PlayerExtra1[PlayerID] = 17 PlayerDirection = 4 end
			if PlayerFacing == 1 then PlayerExtra1[PlayerID] = 18 PlayerDirection = 3 end
			if PlayerFacing == 2 then PlayerExtra1[PlayerID] = 19 PlayerDirection = 1 end
			if PlayerFacing == 3 then PlayerExtra1[PlayerID] = 20 PlayerDirection = 2 end
			--Standard speed
			if PlayerFacing == 49 then PlayerExtra1[PlayerID] = 21 PlayerDirection = 4 end
			if PlayerFacing == 50 then PlayerExtra1[PlayerID] = 22 PlayerDirection = 3 end
			if PlayerFacing == 51 then PlayerExtra1[PlayerID] = 23 PlayerDirection = 1 end
			if PlayerFacing == 52 then PlayerExtra1[PlayerID] = 24 PlayerDirection = 2 end
			--In case you use a fast bike
			if PlayerFacing == 61 then PlayerExtra1[PlayerID] = 25 PlayerDirection = 4 end
			if PlayerFacing == 62 then PlayerExtra1[PlayerID] = 26 PlayerDirection = 3 end
			if PlayerFacing == 63 then PlayerExtra1[PlayerID] = 27 PlayerDirection = 1 end
			if PlayerFacing == 64 then PlayerExtra1[PlayerID] = 28 PlayerDirection = 2 end
			--hitting a wall
			if PlayerFacing == 37 then PlayerExtra1[PlayerID] = 29 PlayerDirection = 4 end
			if PlayerFacing == 38 then PlayerExtra1[PlayerID] = 30 PlayerDirection = 3 end
			if PlayerFacing == 39 then PlayerExtra1[PlayerID] = 31 PlayerDirection = 1 end
			if PlayerFacing == 40 then PlayerExtra1[PlayerID] = 32 PlayerDirection = 2 end
			
			--calling pokemon out
			if PlayerFacing == 69 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
		elseif RegionID == HoennRegionID then

			if PlayerFacing == 0 then PlayerExtra1[PlayerID] = 17 PlayerDirection = 4 end
			if PlayerFacing == 1 then PlayerExtra1[PlayerID] = 18 PlayerDirection = 3 end
			if PlayerFacing == 2 then PlayerExtra1[PlayerID] = 19 PlayerDirection = 1 end
			if PlayerFacing == 3 then PlayerExtra1[PlayerID] = 20 PlayerDirection = 2 end
			--Standard speed
			if PlayerFacing == 8 then PlayerExtra1[PlayerID] = 21 PlayerDirection = 4 end
			if PlayerFacing == 9 then PlayerExtra1[PlayerID] = 22 PlayerDirection = 3 end
			if PlayerFacing == 10 then PlayerExtra1[PlayerID] = 23 PlayerDirection = 1 end
			if PlayerFacing == 11 then PlayerExtra1[PlayerID] = 24 PlayerDirection = 2 end
			--In case you use a fast bike
			if PlayerFacing == 21 then PlayerExtra1[PlayerID] = 25 PlayerDirection = 4 end
			if PlayerFacing == 22 then PlayerExtra1[PlayerID] = 26 PlayerDirection = 3 end
			if PlayerFacing == 23 then PlayerExtra1[PlayerID] = 27 PlayerDirection = 1 end
			if PlayerFacing == 24 then PlayerExtra1[PlayerID] = 28 PlayerDirection = 2 end
			--In case you use a hecka fast bike
			if PlayerFacing == 45 then PlayerExtra1[PlayerID] = 25 PlayerDirection = 4 end
			if PlayerFacing == 46 then PlayerExtra1[PlayerID] = 26 PlayerDirection = 3 end
			if PlayerFacing == 47 then PlayerExtra1[PlayerID] = 27 PlayerDirection = 1 end
			if PlayerFacing == 48 then PlayerExtra1[PlayerID] = 28 PlayerDirection = 2 end
			--hitting a wall
			if PlayerFacing == 29 then PlayerExtra1[PlayerID] = 29 PlayerDirection = 4 end
			if PlayerFacing == 30 then PlayerExtra1[PlayerID] = 30 PlayerDirection = 3 end
			if PlayerFacing == 31 then PlayerExtra1[PlayerID] = 31 PlayerDirection = 1 end
			if PlayerFacing == 32 then PlayerExtra1[PlayerID] = 32 PlayerDirection = 2 end



		end

		if ScreenData == 0 then
			if PlayerDirection == 4 then PlayerExtra1[PlayerID] = 17 PlayerFacing = 0 end
			if PlayerDirection == 3 then PlayerExtra1[PlayerID] = 18 PlayerFacing = 1 end
			if PlayerDirection == 1 then PlayerExtra1[PlayerID] = 19 PlayerFacing = 2 end
			if PlayerDirection == 2 then PlayerExtra1[PlayerID] = 20 PlayerFacing = 3 end
		end
	-- On foot
	else
		if RegionID == KantoRegionID then
			--Standing still
			if PlayerFacing == 0 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
			if PlayerFacing == 1 then PlayerExtra1[PlayerID] = 2 PlayerDirection = 3 end
			if PlayerFacing == 2 then PlayerExtra1[PlayerID] = 3 PlayerDirection = 1 end
			if PlayerFacing == 3 then PlayerExtra1[PlayerID] = 4 PlayerDirection = 2 end
			
			--Hitting stuff
			if PlayerFacing == 33 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
			if PlayerFacing == 34 then PlayerExtra1[PlayerID] = 2 PlayerDirection = 3 end
			if PlayerFacing == 35 then PlayerExtra1[PlayerID] = 3 PlayerDirection = 1 end
			if PlayerFacing == 36 then PlayerExtra1[PlayerID] = 4 PlayerDirection = 2 end
			
			if PlayerFacing == 37 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
			if PlayerFacing == 38 then PlayerExtra1[PlayerID] = 2 PlayerDirection = 3 end
			if PlayerFacing == 39 then PlayerExtra1[PlayerID] = 3 PlayerDirection = 1 end
			if PlayerFacing == 40 then PlayerExtra1[PlayerID] = 4 PlayerDirection = 2 end
			
			--Walking
			if PlayerFacing == 16 then PlayerExtra1[PlayerID] = 5 PlayerDirection = 4 end
			if PlayerFacing == 17 then PlayerExtra1[PlayerID] = 6 PlayerDirection = 3 end
			if PlayerFacing == 18 then PlayerExtra1[PlayerID] = 7 PlayerDirection = 1 end
			if PlayerFacing == 19 then PlayerExtra1[PlayerID] = 8 PlayerDirection = 2 end
			
			--Jumping over route
			if PlayerFacing == 20 then PlayerExtra1[PlayerID] = 13 PlayerDirection = 4 end
			if PlayerFacing == 21 then PlayerExtra1[PlayerID] = 14 PlayerDirection = 3 end
			if PlayerFacing == 22 then PlayerExtra1[PlayerID] = 15 PlayerDirection = 1 end
			if PlayerFacing == 23 then PlayerExtra1[PlayerID] = 16 PlayerDirection = 2 end
			--Turning
			if PlayerFacing == 41 then PlayerExtra1[PlayerID] = 9 PlayerDirection = 4 end
			if PlayerFacing == 42 then PlayerExtra1[PlayerID] = 10 PlayerDirection = 3 end
			if PlayerFacing == 43 then PlayerExtra1[PlayerID] = 11 PlayerDirection = 1 end
			if PlayerFacing == 44 then PlayerExtra1[PlayerID] = 12 PlayerDirection = 2 end
			--Running
			if PlayerFacing == 61 then PlayerExtra1[PlayerID] = 13 PlayerDirection = 4 end
			if PlayerFacing == 62 then PlayerExtra1[PlayerID] = 14 PlayerDirection = 3 end
			if PlayerFacing == 63 then PlayerExtra1[PlayerID] = 15 PlayerDirection = 1 end
			if PlayerFacing == 64 then PlayerExtra1[PlayerID] = 16 PlayerDirection = 2 end
			
			--calling pokemon out
			if PlayerFacing == 69 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
		elseif RegionID == HoennRegionID then
			--Standing still
			if PlayerFacing == 0 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
			if PlayerFacing == 1 then PlayerExtra1[PlayerID] = 2 PlayerDirection = 3 end
			if PlayerFacing == 2 then PlayerExtra1[PlayerID] = 3 PlayerDirection = 1 end
			if PlayerFacing == 3 then PlayerExtra1[PlayerID] = 4 PlayerDirection = 2 end
			
			--Hitting stuff	
			if PlayerFacing == 25 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
			if PlayerFacing == 26 then PlayerExtra1[PlayerID] = 2 PlayerDirection = 3 end
			if PlayerFacing == 27 then PlayerExtra1[PlayerID] = 3 PlayerDirection = 1 end
			if PlayerFacing == 28 then PlayerExtra1[PlayerID] = 4 PlayerDirection = 2 end
			
			if PlayerFacing == 29 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end --not too sure about these four, revisit
			if PlayerFacing == 30 then PlayerExtra1[PlayerID] = 2 PlayerDirection = 3 end
			if PlayerFacing == 31 then PlayerExtra1[PlayerID] = 3 PlayerDirection = 1 end
			if PlayerFacing == 32 then PlayerExtra1[PlayerID] = 4 PlayerDirection = 2 end
			
			--Walking
			if PlayerFacing == 8 then PlayerExtra1[PlayerID] = 5 PlayerDirection = 4 end
			if PlayerFacing == 9 then PlayerExtra1[PlayerID] = 6 PlayerDirection = 3 end
			if PlayerFacing == 10 then PlayerExtra1[PlayerID] = 7 PlayerDirection = 1 end
			if PlayerFacing == 11 then PlayerExtra1[PlayerID] = 8 PlayerDirection = 2 end
			
			--Jumping over route
			if PlayerFacing == 12 then PlayerExtra1[PlayerID] = 13 PlayerDirection = 4 end
			if PlayerFacing == 13 then PlayerExtra1[PlayerID] = 14 PlayerDirection = 3 end
			if PlayerFacing == 14 then PlayerExtra1[PlayerID] = 15 PlayerDirection = 1 end
			if PlayerFacing == 15 then PlayerExtra1[PlayerID] = 16 PlayerDirection = 2 end
			--Turning
			if PlayerFacing == 33 then PlayerExtra1[PlayerID] = 9 PlayerDirection = 4 end
			if PlayerFacing == 34 then PlayerExtra1[PlayerID] = 10 PlayerDirection = 3 end
			if PlayerFacing == 35 then PlayerExtra1[PlayerID] = 11 PlayerDirection = 1 end
			if PlayerFacing == 36 then PlayerExtra1[PlayerID] = 12 PlayerDirection = 2 end
			--Running
			if PlayerFacing == 53 then PlayerExtra1[PlayerID] = 13 PlayerDirection = 4 end
			if PlayerFacing == 54 then PlayerExtra1[PlayerID] = 14 PlayerDirection = 3 end
			if PlayerFacing == 55 then PlayerExtra1[PlayerID] = 15 PlayerDirection = 1 end
			if PlayerFacing == 56 then PlayerExtra1[PlayerID] = 16 PlayerDirection = 2 end
			
			--calling pokemon out
			if PlayerFacing == 57 then PlayerExtra1[PlayerID] = 1 PlayerDirection = 4 end
		end

		if ScreenData == 0 then
			if PlayerDirection == 4 then PlayerExtra1[PlayerID] = 1 PlayerFacing = 0 end
			if PlayerDirection == 3 then PlayerExtra1[PlayerID] = 2 PlayerFacing = 1 end
			if PlayerDirection == 1 then PlayerExtra1[PlayerID] = 3 PlayerFacing = 2 end
			if PlayerDirection == 2 then PlayerExtra1[PlayerID] = 4 PlayerFacing = 3 end
		end
	end
	PlayerExtra1[PlayerID] = PlayerExtra1[PlayerID] + 100
	CurrentFacingDirection[PlayerID] = PlayerDirection
end

function NoPlayersIfScreen()
	local ScreenData1 = 0
	local ScreenData3 = 0
	local ScreenData4 = 0
	local u32 ScreenDataAddress1 = 0
	local u32 ScreenDataAddress3 = 0
	local u32 ScreenDataAddress4 = 0
	if GameID == "BPR1" or GameID == "BPR2" then
		--Address for Firered
		ScreenDataAddress1 = 33691280
		--For intro
		ScreenDataAddress3 = 33686716
		--Check for battle
		ScreenDataAddress4 = 33685514
	elseif GameID == "BPG1" or GameID == "BPG2" then
		--Address for Leafgreen
		ScreenDataAddress1 = 33691280
		--For intro
		ScreenDataAddress3 = 33686716
		--Check for battle
		ScreenDataAddress4 = 33685514
	end
		ScreenData1 = emu:read32(ScreenDataAddress1)
		ScreenData3 = emu:read8(ScreenDataAddress3)
		ScreenData4 = emu:read8(ScreenDataAddress4)
		
	--	if TempVar2 == 0 then ConsoleForText:print("ScreenData: " .. ScreenData1 .. " " .. ScreenData2 .. " " .. ScreenData3) end
		--If screen data are these then hide players
		if ((ScreenData3 ~= 80 or (ScreenData1 > 0)) and GameID ~= "BPEE") and (LockFromScript == 0 or LockFromScript == 8 or LockFromScript == 9) then
			ScreenData = 0
		--	console:log("SCREENDATA OFF: " .. LockFromScript)
		else
			ScreenData = 1
		--	console:log("SCREENDATA ON")
		end
		if ScreenData4 == 1 then
			PlayerExtra4[PlayerID] = 1
		else
			PlayerExtra4[PlayerID] = 0
		end
end



function AnimatePlayerMovement(PlayerNo, AnimateID)
	--This is for updating the previous coords with new ones, without looking janky
	--AnimateID List
	--0 = Standing Still
	--1 = Walking Down
	--2 = Walking Up
	--3 = Walking Left/Right
	--4 = Running Down
	--5 = Running Up
	--6 = Running Left/Right
	--7 = Bike Down
	--8 = Bike Up
	--9 = Bike left/right
	--10 = Face down
	--11 = Face up
	--12 = Face left/right
	local FrameNumber = 0
	
	if CurrentX[PlayerNo] == 0 then CurrentX[PlayerNo] = FutureX[PlayerNo] end
	if CurrentY[PlayerNo] == 0 then CurrentY[PlayerNo] = FutureY[PlayerNo] end
	local AnimationMovementX = FutureX[PlayerNo] - CurrentX[PlayerNo]
	local AnimationMovementY = FutureY[PlayerNo] - CurrentY[PlayerNo]
	local ShiftedPlayerNo = PlayerNo - 1
	local SpriteNumber = globalSpriteNo[PlayerNo]
	-- Ensure that the player animation frame doesn't go below zero
	PlayerAnimationFrameTimer[PlayerNo] = math.max(PlayerAnimationFrameTimer[PlayerNo], 0)
	-- Increment player animation frame every frame, surprise surprise!
	PlayerAnimationFrameTimer[PlayerNo] = PlayerAnimationFrameTimer[PlayerNo] + 1

	 --Horizontal Animations
		--Animate left movement
		if AnimationMovementX < 0 then
		
		--Walk
			if AnimateID == WalkSideAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 14
				AnimationX[PlayerNo] = AnimationX[PlayerNo] - 1

				if PlayerAnimationFrameTimer[PlayerNo] == 5 then AnimationX[PlayerNo] = AnimationX[PlayerNo] - 1 end
				
				if PlayerAnimationFrameTimer[PlayerNo] == 9 then AnimationX[PlayerNo] = AnimationX[PlayerNo] - 1 end
				
				if PlayerAnimationFrameTimer[PlayerNo] >= 3 and PlayerAnimationFrameTimer[PlayerNo] <= 11 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = WalkSide1ID
					else
						FrameNumber = WalkSide2ID
					end
				else
					FrameNumber = FaceSideID
				end
		--Run
			elseif AnimateID == RunSideAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 9
				AnimationX[PlayerNo] = AnimationX[PlayerNo] - 4
				--	ConsoleForText:print("Frame: " .. PlayerAnimationFrameTimer)
				if PlayerAnimationFrameTimer[PlayerNo] > 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = RunSide1ID
					else
						FrameNumber = RunSide2ID
					end
				else
					FrameNumber = RunFaceSideID
				end
		--Bike
			elseif AnimateID == BikeSideAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 6
				AnimationX[PlayerNo] = AnimationX[PlayerNo] + ((AnimationMovementX*16)/3)
				if PlayerAnimationFrameTimer[PlayerNo] >= 1 and PlayerAnimationFrameTimer[PlayerNo] < 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = BikeSide1ID
					else
						FrameNumber = BikeSide2ID
					end
				else
					FrameNumber = BikeFaceSideID
				end
		--Surf
			elseif AnimateID == SurfLeftAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 4
				AnimationX[PlayerNo] = AnimationX[PlayerNo] - 4
				createChars(ShiftedPlayerNo, SurfSide1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				FrameNumber = SitFaceSideID
				

						
























			else
			
			end
			
		--Animate right movement
		elseif AnimationMovementX > 0 then
		--Walk
			if AnimateID == WalkRightAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 14
				AnimationX[PlayerNo] = AnimationX[PlayerNo] + 1
				if PlayerAnimationFrameTimer[PlayerNo] == 5 then AnimationX[PlayerNo] = AnimationX[PlayerNo] + 1 end
				if PlayerAnimationFrameTimer[PlayerNo] == 9 then AnimationX[PlayerNo] = AnimationX[PlayerNo] + 1 end
				if PlayerAnimationFrameTimer[PlayerNo] >= 3 and PlayerAnimationFrameTimer[PlayerNo] <= 11 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = WalkSide1ID
					else
						FrameNumber = WalkSide2ID
					end
				else
					FrameNumber = FaceSideID
				end
		--Run
			elseif AnimateID == RunRightAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 9
				AnimationX[PlayerNo] = AnimationX[PlayerNo] + 4
				if PlayerAnimationFrameTimer[PlayerNo] > 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = RunSide1ID
					else
						FrameNumber = RunSide2ID
					end
				else
					FrameNumber = RunFaceSideID
				end
		--Bike
			elseif AnimateID == BikeRightAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 6
				AnimationX[PlayerNo] = AnimationX[PlayerNo] + ((AnimationMovementX*16)/3)
				if PlayerAnimationFrameTimer[PlayerNo] >= 1 and PlayerAnimationFrameTimer[PlayerNo] < 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = BikeSide1ID
					else
						FrameNumber = BikeSide2ID
					end
				else
					FrameNumber = BikeFaceSideID
				end
		--Surf
			elseif AnimateID == SurfRightAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 4
				AnimationX[PlayerNo] = AnimationX[PlayerNo] + 4
				createChars(ShiftedPlayerNo, SurfSide1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				FrameNumber = SitFaceSideID
			else
			
			end
		--Animate no position change
		else
			AnimationX[PlayerNo] = 0
			CurrentX[PlayerNo] = FutureX[PlayerNo]
		--Turn player left/right
			if AnimateID == TurnSideAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 8
				if PlayerAnimationFrameTimer[PlayerNo] > 1 and PlayerAnimationFrameTimer[PlayerNo] < 6 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
						FrameNumber = WalkSide1ID
					else
						FrameNumber = WalkSide2ID
					end
				else
					FrameNumber = FaceSideID
				end
			end
		--Surfing animation
		 if AnimateID == SurfTurnLeftAnimID or AnimateID == SurfTurnRightAnimID then
			FrameNumber = SitFaceSideID
			if RegionID == KantoRegionID then

				if not (PreviousPlayerAnimation[PlayerNo] >= SurfTurnDownAnimID and PreviousPlayerAnimation[PlayerNo] <= SurfRightAnimID) then
					PlayerAnimationFlag[PlayerNo] = 0 PlayerAnimationFrameTimer[PlayerNo] = 24
				end
				PlayerAnimationFrameTimerMax[PlayerNo] = 48

				if PlayerAnimationFlag[PlayerNo] == 0 then 
					createChars(ShiftedPlayerNo, SurfSide1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
					SurfBobAnimationY[PlayerNo] = 0


				elseif PlayerAnimationFlag[PlayerNo] == 1 then 
					createChars(ShiftedPlayerNo, SurfSide2ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
					SurfBobAnimationY[PlayerNo] = 1

				end
			else

				if not (PreviousPlayerAnimation[PlayerNo] >= SurfTurnDownAnimID and PreviousPlayerAnimation[PlayerNo] <= SurfRightAnimID) then
					PlayerAnimationFlag[PlayerNo] = 0 PlayerAnimationFrameTimer[PlayerNo] = 0
				end

				PlayerAnimationFrameTimerMax[PlayerNo] = 32
				local DivisionLength = 8
				-- Only update the offset every 8 frames, just as the Hoennian god intended
				if ((PlayerAnimationFrameTimer[PlayerNo] % DivisionLength) == 0) then 
					if PlayerAnimationFrameTimer[PlayerNo] == DivisionLength then SurfBobAnimationY[PlayerNo] = -1
					elseif PlayerAnimationFrameTimer[PlayerNo] == 2 * DivisionLength then SurfBobAnimationY[PlayerNo] = 0
					elseif PlayerAnimationFrameTimer[PlayerNo] == 3 * DivisionLength then SurfBobAnimationY[PlayerNo] = 1
					elseif PlayerAnimationFrameTimer[PlayerNo] == 4 * DivisionLength then SurfBobAnimationY[PlayerNo] = 0
					end
				end
				
				createChars(ShiftedPlayerNo, SurfSide1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])

			end
		end
		
	 --Vertical Animations
		--Animate up movement
		if AnimationMovementY < 0 then
		--Walk
			if AnimateID == WalkUpAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 14
				AnimationY[PlayerNo] = AnimationY[PlayerNo] - 1
				if PlayerAnimationFrameTimer[PlayerNo] == 5 then AnimationY[PlayerNo] = AnimationY[PlayerNo] - 1 end
				if PlayerAnimationFrameTimer[PlayerNo] == 9 then AnimationY[PlayerNo] = AnimationY[PlayerNo] - 1 end
				if PlayerAnimationFrameTimer[PlayerNo] >= 3 and PlayerAnimationFrameTimer[PlayerNo] <= 11 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, WalkUp1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, WalkUp2ID, SpriteNumber)
					end	
				else
					createChars(ShiftedPlayerNo, FaceUpID, SpriteNumber)
				end
		--Run
			elseif AnimateID == RunUpAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 9
				AnimationY[PlayerNo] = AnimationY[PlayerNo] - 4
				if PlayerAnimationFrameTimer[PlayerNo] > 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, RunUp1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, RunUp2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, RunFaceUpID, SpriteNumber)
				end
		--Bike
			elseif AnimateID == BikeUpAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 6
				AnimationY[PlayerNo] = AnimationY[PlayerNo] + ((AnimationMovementY*16)/3)
				if PlayerAnimationFrameTimer[PlayerNo] >= 1 and PlayerAnimationFrameTimer[PlayerNo] < 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, BikeUp1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, BikeUp2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, BikeFaceUpID, SpriteNumber)
				end
		--Surf
			elseif AnimateID == SurfUpAnimID then
				if RegionID == KantoRegionID then
					PlayerAnimationFrameTimerMax[PlayerNo] = 4
					AnimationY[PlayerNo] = AnimationY[PlayerNo] - 4
					createChars(ShiftedPlayerNo, SurfUp1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
					createChars(ShiftedPlayerNo, SitFaceUpID, SpriteNumber)
				end
			end
				
		--Animate down movement
		elseif AnimationMovementY > 0 then
		--Walk
			if AnimateID == WalkDownAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 14
				AnimationY[PlayerNo] = AnimationY[PlayerNo] + 1
				if PlayerAnimationFrameTimer[PlayerNo] == 5 then AnimationY[PlayerNo] = AnimationY[PlayerNo] + 1 end
				if PlayerAnimationFrameTimer[PlayerNo] == 9 then AnimationY[PlayerNo] = AnimationY[PlayerNo] + 1 end
				if PlayerAnimationFrameTimer[PlayerNo] >= 3 and PlayerAnimationFrameTimer[PlayerNo] <= 11 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, WalkDown1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, WalkDown2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, FaceDownID, SpriteNumber)
				end
		--Run
			elseif AnimateID == RunDownAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 9
				AnimationY[PlayerNo] = AnimationY[PlayerNo] + 4
				if PlayerAnimationFrameTimer[PlayerNo] > 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, RunDown1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, RunDown2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, RunFaceDownID,SpriteNumber)
				end
		--Bike
			elseif AnimateID == BikeDownAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 6
				AnimationY[PlayerNo] = AnimationY[PlayerNo] + ((AnimationMovementY*16)/3)
				if PlayerAnimationFrameTimer[PlayerNo] >= 1 and PlayerAnimationFrameTimer[PlayerNo] < 5 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, BikeDown1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, BikeDown2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, BikeFaceDownID, SpriteNumber)
				end
		--Surf
			elseif AnimateID == SurfDownAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 4
				AnimationY[PlayerNo] = AnimationY[PlayerNo] + 4
				createChars(ShiftedPlayerNo, SurfDown1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				createChars(ShiftedPlayerNo, SitFaceDownID, SpriteNumber)
			end
		--Animate no position change
		else
			AnimationY[PlayerNo] = 0
			CurrentY[PlayerNo] = FutureY[PlayerNo]
		--Turn player down
			if AnimateID == TurnDownAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 8
				if PlayerAnimationFrameTimer[PlayerNo] > 1 and PlayerAnimationFrameTimer[PlayerNo] < 6 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, WalkDown1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, WalkDown2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, FaceDownID, SpriteNumber)
				end
		--Turn player up
			elseif AnimateID == TurnUpAnimID then
				PlayerAnimationFrameTimerMax[PlayerNo] = 8
				if PlayerAnimationFrameTimer[PlayerNo] > 1 and PlayerAnimationFrameTimer[PlayerNo] < 6 then
					if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, WalkUp1ID, SpriteNumber)
					else
					createChars(ShiftedPlayerNo, WalkUp2ID, SpriteNumber)
					end
				else
					createChars(ShiftedPlayerNo, FaceUpID, SpriteNumber)
				end
			
		--Surfing animation
			elseif AnimateID == SurfTurnDownAnimID then
				
				createChars(ShiftedPlayerNo, SitFaceDownID, SpriteNumber)
				
				--This doesn't seem to do much
				-- Starting animation (only if we were not surfing before)
				--if not (PreviousPlayerAnimation[PlayerNo] >= SurfTurnDownAnimID and PreviousPlayerAnimation[PlayerNo] <= SurfRightAnimID) then
					--PlayerAnimationFlag[PlayerNo] = 0
					--PlayerAnimationFrameTimer[PlayerNo] = 24
				--end

				-- Continuing Animation
				PlayerAnimationFrameTimerMax[PlayerNo] = 48
				if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, SurfDown1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				elseif PlayerAnimationFlag[PlayerNo] == 1 then
					createChars(ShiftedPlayerNo, SurfDown2ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				end
			
			elseif AnimateID == SurfTurnUpAnimID then
				createChars(ShiftedPlayerNo, SitFaceUpID, SpriteNumber)
				if not (PreviousPlayerAnimation[PlayerNo] >= SurfTurnDownAnimID and PreviousPlayerAnimation[PlayerNo] <= SurfRightAnimID) then
					PlayerAnimationFlag[PlayerNo] = 0
					PlayerAnimationFrameTimer[PlayerNo] = 24
				end
				PlayerAnimationFrameTimerMax[PlayerNo] = 48
				if PlayerAnimationFlag[PlayerNo] == 0 then
					createChars(ShiftedPlayerNo, SurfUp1ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				elseif PlayerAnimationFlag[PlayerNo] == 1 then
					createChars(ShiftedPlayerNo, SurfUp2ID, KantoSurfBlobSpriteID + HoennSurfBool[PlayerNo])
				end
			--If they are now equal
			end
		end
	end

	if FrameNumber ~= 0 then
		createChars(ShiftedPlayerNo, FrameNumber, SpriteNumber)
	end


  --Not vertical or horizontal animation
	if AnimateID >= 251 and AnimateID <= 254 then
		PlayerAnimationFrameTimer[PlayerNo] = 0
		AnimationX[PlayerNo] = 0
		AnimationY[PlayerNo] = 0
		CurrentX[PlayerNo] = FutureX[PlayerNo]
		CurrentY[PlayerNo] = FutureY[PlayerNo]
	elseif AnimateID == 255 then
		CurrentX[PlayerNo] = FutureX[PlayerNo]
		CurrentY[PlayerNo] = FutureY[PlayerNo]
	end

  --AnimationFrame Management
	if PlayerAnimationFrameTimerMax[PlayerNo] <= PlayerAnimationFrameTimer[PlayerNo] then
		PlayerAnimationFrameTimer[PlayerNo] = 0
		if PlayerAnimationFlag[PlayerNo] == 0 then
			PlayerAnimationFlag[PlayerNo] = 1
		else
			PlayerAnimationFlag[PlayerNo] = 0
		end
	end

	-- Wrap around
	if AnimationX[PlayerNo] > 15 or AnimationX[PlayerNo] < -15 then
		CurrentX[PlayerNo] = FutureX[PlayerNo]
		AnimationX[PlayerNo] = 0
	end
	if AnimationY[PlayerNo] > 15 or AnimationY[PlayerNo] < -15 then
		CurrentY[PlayerNo] = FutureY[PlayerNo]
		AnimationY[PlayerNo] = 0
	end
  --Update the PreviousPlayerAnimation variable
	PreviousPlayerAnimation[PlayerNo] = AnimateID
end



function HandleSprites()
	--Because handling images every time would become a hassle, this will automatically set the image of every player
	
	
	--PlayerExtra 1 = Down Face
	--PlayerExtra 2 = Up Face
	--PlayerExtra 3 or 4 = Left/Right Face
	--PlayerExtra 5 = Down Walk
	--PlayerExtra 6 = Up Walk
	--PlayerExtra 7 or 8 = Left/Right Walk
	--PlayerExtra 9 = Down Turn
	--PlayerExtra 10 = Up Turn
	--PlayerExtra 11 or 12 = Left/Right Turn
	--PlayerExtra 13 = Down Run
	--PlayerExtra 14 = Up Run
	--PlayerExtra 15 or 16 = Left/Right Run
	--PlayerExtra 17 = Down Bike
	--PlayerExtra 18 = Up Bike
	--PlayerExtra 19 or 20 = Left/Right Bike
	local PlayerChar = 0
	for i = 1, MaxPlayers do
		PlayerChar = i - 1
		
		if PlayerID ~= i and PlayerIDNick[i] ~= "None" then
			-- debug ConsoleForText:print("PlayerExtra1: " .. PlayerExtra1[i] .. string.char(10))
			--Facing down
			if PlayerExtra1[i] == 1 then createChars(PlayerChar, FaceDownID, globalSpriteNo[i]) CurrentFacingDirection[i] = DownDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 251) 
			
			--Facing up
			elseif PlayerExtra1[i] == 2 then createChars(PlayerChar, FaceUpID, globalSpriteNo[i]) CurrentFacingDirection[i] = UpDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 252) 
			
			--Facing left
			elseif PlayerExtra1[i] == 3 then createChars(PlayerChar, FaceSideID, globalSpriteNo[i]) CurrentFacingDirection[i] = LeftDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 253) 
			
			--Facing right
			elseif PlayerExtra1[i] == 4 then createChars(PlayerChar, FaceSideID, globalSpriteNo[i]) CurrentFacingDirection[i] = RightDirID Facing2[i] = FaceRightID AnimatePlayerMovement(i, 254) 
			
			--walk down
			elseif PlayerExtra1[i] == 5 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = DownDirID AnimatePlayerMovement(i, WalkDownAnimID)
			
			--walk up
			elseif PlayerExtra1[i] == 6 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = UpDirID AnimatePlayerMovement(i, WalkUpAnimID)
			
			--walk left
			elseif PlayerExtra1[i] == 7 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = LeftDirID AnimatePlayerMovement(i, WalkSideAnimID)
			
			--walk right
			elseif PlayerExtra1[i] == 8 then Facing2[i] = FaceRightID CurrentFacingDirection[i] = RightDirID AnimatePlayerMovement(i, WalkRightAnimID)
			
			--turn down
			elseif PlayerExtra1[i] == 9 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = DownDirID AnimatePlayerMovement(i, TurnDownAnimID)  
			
			--turn up
			elseif PlayerExtra1[i] == 10 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = UpDirID AnimatePlayerMovement(i, TurnUpAnimID)  
			
			--turn left
			elseif PlayerExtra1[i] == 11 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = LeftDirID AnimatePlayerMovement(i, TurnSideAnimID)  
			
			--turn right
			elseif PlayerExtra1[i] == 12 then Facing2[i] = FaceRightID CurrentFacingDirection[i] = RightDirID AnimatePlayerMovement(i, TurnSideAnimID) 
			
			--run down
			elseif PlayerExtra1[i] == 13 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = DownDirID AnimatePlayerMovement(i, RunDownAnimID)
			
			--run up
			elseif PlayerExtra1[i] == 14 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = UpDirID AnimatePlayerMovement(i, RunUpAnimID)
			
			--run left
			elseif PlayerExtra1[i] == 15 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = LeftDirID AnimatePlayerMovement(i, RunSideAnimID)
			
			--run right
			elseif PlayerExtra1[i] == 16 then Facing2[i] = FaceRightID CurrentFacingDirection[i] = RightDirID AnimatePlayerMovement(i, RunRightAnimID)
			
			--bike face down
			elseif PlayerExtra1[i] == 17 then createChars(PlayerChar,12,globalSpriteNo[i]) CurrentFacingDirection[i] = DownDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 251)
			
			--bike face up
			elseif PlayerExtra1[i] == 18 then createChars(PlayerChar,11,globalSpriteNo[i]) CurrentFacingDirection[i] = UpDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 252)
			
			--bike face left
			elseif PlayerExtra1[i] == 19 then createChars(PlayerChar,10,globalSpriteNo[i]) CurrentFacingDirection[i] = LeftDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 253)
			
			--bike face right
			elseif PlayerExtra1[i] == 20 then createChars(PlayerChar,10,globalSpriteNo[i]) CurrentFacingDirection[i] = RightDirID Facing2[i] = FaceRightID AnimatePlayerMovement(i, 254)
			
			--bike move down
			elseif PlayerExtra1[i] == 21 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = DownDirID AnimatePlayerMovement(i, BikeDownAnimID)
			
			--bike move up
			elseif PlayerExtra1[i] == 22 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = UpDirID AnimatePlayerMovement(i, BikeUpAnimID)
			
			--bike move left
			elseif PlayerExtra1[i] == 23 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = LeftDirID AnimatePlayerMovement(i, BikeSideAnimID)
			
			--bike move right
			elseif PlayerExtra1[i] == 24 then Facing2[i] = FaceRightID CurrentFacingDirection[i] = RightDirID AnimatePlayerMovement(i, BikeRightAnimID)
			
			--bike fast move down
			elseif PlayerExtra1[i] == 25 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = DownDirID AnimatePlayerMovement(i, BikeDownAnimID)
			
			--bike fast move up
			elseif PlayerExtra1[i] == 26 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = UpDirID AnimatePlayerMovement(i, BikeUpAnimID)
			
			--bike fast move left
			elseif PlayerExtra1[i] == 27 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = LeftDirID AnimatePlayerMovement(i, BikeSideAnimID)
			
			--bike fast move right
			elseif PlayerExtra1[i] == 28 then Facing2[i] = FaceRightID CurrentFacingDirection[i] = RightDirID AnimatePlayerMovement(i, BikeRightAnimID)
			
			--bike hit wall down
			elseif PlayerExtra1[i] == 29 then createChars(PlayerChar, BikeFaceDownID, globalSpriteNo[i]) CurrentFacingDirection[i] = DownDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 251)
			
			--bike hit wall up
			elseif PlayerExtra1[i] == 30 then createChars(PlayerChar, BikeFaceUpID, globalSpriteNo[i]) CurrentFacingDirection[i] = UpDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 252)
			
			--bike hit wall left
			elseif PlayerExtra1[i] == 31 then createChars(PlayerChar, BikeFaceSideID, globalSpriteNo[i]) CurrentFacingDirection[i] = LeftDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 253)
			
			--bike hit wall right
			elseif PlayerExtra1[i] == 32 then createChars(PlayerChar, BikeFaceSideID, globalSpriteNo[i]) CurrentFacingDirection[i] = RightDirID Facing2[i] = FaceRightID AnimatePlayerMovement(i, 254)
			
			--Surfing
			
			--Facing down
			elseif PlayerExtra1[i] == 33 then CurrentFacingDirection[i] = DownDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, SurfTurnDownAnimID)   
			
			--Facing up
			elseif PlayerExtra1[i] == 34 then CurrentFacingDirection[i] = UpDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, SurfTurnUpAnimID) 
			
			--Facing left
			elseif PlayerExtra1[i] == 35 then CurrentFacingDirection[i] = LeftDirID Facing2[i] = FaceLeftID AnimatePlayerMovement(i, SurfTurnLeftAnimID) 
			
			--Facing right
			elseif PlayerExtra1[i] == 36 then CurrentFacingDirection[i] = RightDirID Facing2[i] = FaceRightID AnimatePlayerMovement(i, SurfTurnRightAnimID) 
			
			--surf down
			elseif PlayerExtra1[i] == 37 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = DownDirID AnimatePlayerMovement(i, SurfDownAnimID)
			
			--surf up
			elseif PlayerExtra1[i] == 38 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = UpDirID AnimatePlayerMovement(i, SurfUpAnimID)
			
			--surf left
			elseif PlayerExtra1[i] == 39 then Facing2[i] = FaceLeftID CurrentFacingDirection[i] = LeftDirID AnimatePlayerMovement(i, SurfLeftAnimID)
			
			--surf right
			elseif PlayerExtra1[i] == 40 then Facing2[i] = FaceRightID CurrentFacingDirection[i] = RightDirID AnimatePlayerMovement(i, SurfRightAnimID)
			
			
			--default position
			elseif PlayerExtra1[i] == 0 then Facing2[i] = FaceLeftID AnimatePlayerMovement(i, 255)
			
			end
		end
	end
end

function CalculateCamera()
	--	ConsoleForText:print("Player X camera: " .. PlayerMapXMove .. "Player Y camera: " .. PlayerMapYMove)
	--	ConsoleForText:print("PlayerMapXMove: " .. PlayerMapXMove .. "PlayerMapYMove: " .. PlayerMapYMove .. "PlayerMapXMovePREV: " .. PlayerMapXMovePrev .. "PlayerMapYMovePrev: " .. PlayerMapYMovePrev)
		
		local PlayerMapXMoveTemp = 0
		local PlayerMapYMoveTemp = 0
		
		if GameID == "BPR1" or GameID == "BPR2" then
			--Addresses for Firered
			PlayerMapXMoveAddress = 33687132
			PlayerMapYMoveAddress = 33687134
		elseif GameID == "BPG1" or GameID == "BPG2"  then
			--Addresses for Leafgreen
			PlayerMapXMoveAddress = 33687132
			PlayerMapYMoveAddress = 33687134
		elseif GameID == "BPEE" then
			--Addresses for Emerald
			PlayerMapXMoveAddress = 33687120	--0x2020650
			PlayerMapYMoveAddress = 33687122	--0x2020652
		end
		--if PlayerMapChange == 1 then
			--Update first if map change
			PlayerMapXMovePrev = emu:read16(PlayerMapXMoveAddress) - 8
			PlayerMapYMovePrev = emu:read16(PlayerMapYMoveAddress)
			PlayerMapXMoveTemp = PlayerMapXMovePrev % 16
			PlayerMapYMoveTemp = PlayerMapYMovePrev % 16
			
			if PlayerDirection == 1 then
				CameraX = PlayerMapXMoveTemp * -1
			--	console:log("XTEMP: " .. PlayerMapXMoveTemp)
			elseif PlayerDirection == 2 then
				if PlayerMapXMoveTemp > 0 then
					CameraX = 16 - PlayerMapXMoveTemp
				else
					CameraX = 0
				end
				--console:log("XTEMP: " .. PlayerMapXMoveTemp)
			elseif PlayerDirection == 3 then
				CameraY = PlayerMapYMoveTemp * -1
				--console:log("YTEMP: " .. PlayerMapYMoveTemp)
			elseif PlayerDirection == 4 then
				--console:log("YTEMP: " .. PlayerMapYMoveTemp)
				if PlayerMapYMoveTemp > 0 then
					CameraY = 16 - PlayerMapYMoveTemp
				else
					CameraY = 0
				end
			end
			
			--Calculations for X and Y of new map
			if PlayerMapChange == 1 and (CameraX == 0 and CameraY == 0) then
				PlayerMapChange = 0
				StartX[PlayerID] = PlayerMapX
				StartY[PlayerID] = PlayerMapY
				DifferentMapXPlayer = (StartX[PlayerID] - PreviousX[PlayerID]) * 16
				DifferentMapYPlayer = (StartY[PlayerID] - PreviousY[PlayerID]) * 16
				if PlayerDirection == 1 then
					StartX[PlayerID] = StartX[PlayerID] + 1
				elseif PlayerDirection == 2 then
					StartX[PlayerID] = StartX[PlayerID] - 1
				elseif PlayerDirection == 3 then
					StartY[PlayerID] = StartY[PlayerID] + 1
				elseif PlayerDirection == 4 then
					StartY[PlayerID] = StartY[PlayerID] - 1
				end
			--	console:log("YOU HAVE MOVED MAPS")
				--For New Positions if player moves
			--	console:log("X: " .. DifferentMapX[i] .. " Y: " .. DifferentMapY[i])
				--if PlayerDirection == 4 then
				--	DifferentMapY[i] = DifferentMapY[i] + 16
				--end
			end
end

function CalculateRelativePositions()
	local TempX = 0
	local TempY = 0
	local TempX2 = 0
	local TempY2 = 0
	for i = 1, MaxPlayers do
		TempX = ((CurrentX[i] - PlayerMapX) * 16) + DifferentMapX[i]
		TempY = ((CurrentY[i] - PlayerMapY) * 16) + DifferentMapY[i]
		if PlayerID ~= i and PlayerIDNick[i] ~= "None" then
			if (PlayerMapEntranceType == 0) and (PlayerMapIDPrev == CurrentMapID[i] or PlayerMapID == PreviousMapID[i]) and MapChange[i] == 0 then
				PlayerVis[i] = 1
				TempX2 = TempX + DifferentMapXPlayer
				TempY2 = TempY + DifferentMapYPlayer
			else
				TempX2 = TempX
				TempY2 = TempY
			end
			--AnimationX is -16 - 16 and is purely to animate sprites
			--CameraX can be between -16 and 16 and is to get the camera movement while moving
			--Current X is the X the current sprite has
			--Player X is the X the player sprite has
			RelativeX[i] = AnimationX[i] + CameraX + TempX2
			RelativeY[i] = AnimationY[i] + CameraY + TempY2
			--console:log("X: " .. RelativeX[i] .. " " .. CurrentX[i] .. " " .. PlayerMapX .. " " .. DifferentMapX[i])
			--console:log("Y: " .. RelativeY[i] .. " " .. AnimationY[i] .. " " .. CameraY .. " " .. TempY)
		end
	end
end


function DrawChars()
	if EnableScript == true then
		NoPlayersIfScreen()
			
		HandleSprites()
		CalculateCamera()
		RenderPlayersOnDifferentMap()
		CalculateRelativePositions()
		if ScreenData == 1 then
			for i = 1, MaxPlayers do
				if HasErasedPlayer[i] == false then
					HasErasedPlayer[i] = true
					ErasePlayer(i)
				end
				if PlayerID ~= i and PlayerIDNick[i] ~= "None" then
					DrawPlayer(i)
				end
			end
		else
			for i = 1, MaxPlayers do
				HasErasedPlayer[i] = false
			end
		end
	end
end


function DrawPlayer(PlayerNo)
	--ConsoleForText:print("Drawing Player: " .. PlayerNo)
		local SpriteNo1 = 2608 - ((PlayerNo - 1) * 40)
		local SpriteNo2 = SpriteNo1 + 18
		--For extra char if not biking
		local SpriteNo3 = SpriteNo1 + 8
		--For extra char if biking
		local SpriteNo4 = SpriteNo1 + 16


		if GameID ~= "BPEE" then
			--Addresses for Firered & Leafgreen
			SpriteTableAddress = 50345200 - ((PlayerNo - 1) * 24)
		else
			--Addresses for Emerald
			SpriteTableAddress = 50341568 - ((PlayerNo - 1) * 24)
		end
		
		SurfBlobAddress = SpriteTableAddress + 8
		IconAddress = SpriteTableAddress + 16
		--Screen size (take into account movement)
		local MinX = -16
		local MaxX = 240
		local MinY = -32
		local MaxY = 144

		--This is for the bike + surf
		if PlayerExtra1[PlayerNo] >= 17 and PlayerExtra1[PlayerNo] <= 40 then MinX = -8 end
		if PlayerExtra1[PlayerNo] >= 33 and PlayerExtra1[PlayerNo] <= 40 then MinX = 8 end
		
		--112 and 56 = middle of screen
		local FinalMapX = RelativeX[PlayerNo] + 112
		local FinalMapY = RelativeY[PlayerNo] + 56
		
		--Flip sprite if facing right
		local FacingTemp = 128
		if Facing2[PlayerNo] == 1 then FacingTemp = 144 end
		
		if not ((FinalMapX > MaxX or FinalMapX < MinX) or (FinalMapY > MaxY or FinalMapY < MinY)) then
			if PlayerVis[PlayerNo] == 1 then
				--Bikes need different vars
				if PlayerExtra1[PlayerNo] >= 17 and PlayerExtra1[PlayerNo] <= 32 then
					FinalMapX = FinalMapX - 8	-- need to modify this because the sprite becomes bigger
					WriteToSpriteList(SpriteTableAddress, FinalMapX, FinalMapY, FacingTemp, 0, SpriteNo1, 0, 0)
					--Surfing char erase
					WriteToSpriteList(SurfBlobAddress, 48, 160, 1, 0, 12, 0, 1)
					--Add fighting symbol if in battle
					if PlayerExtra4[PlayerNo] == 1 then
						local SymbolY = FinalMapY - 8
						local SymbolX = FinalMapX + 8
						--Create battle symbol
						createChars(PlayerNo - 1, 1, BattleIconID, 1)
						--Extra Char
						WriteToSpriteList(IconAddress, SymbolX, SymbolY, 64, 0, SpriteNo4, 0, 1)
					else
						WriteToSpriteList(IconAddress, 48, 160, 1, 0, 12, 0, 1)
					end
				--Same with surf
				elseif PlayerExtra1[PlayerNo] >= 33 and PlayerExtra1[PlayerNo] <= 40 then
					if (PlayerAnimationFlag[PlayerNo] == 1 or RegionID == HoennRegionID) and PlayerExtra1[PlayerNo] <= 36 then 
						FinalMapY = FinalMapY + SurfBobAnimationY[PlayerNo]
					end

					--Sitting char
					WriteToSpriteList(SpriteTableAddress, FinalMapX, FinalMapY, FacingTemp, 128, SpriteNo1, 0, 0)

				  --Add fighting symbol if in battle
					if PlayerExtra4[PlayerNo] == 1 then
						local SymbolY = FinalMapY - 8
						local SymbolX = FinalMapX
						--Create battle symbol
						createChars(PlayerNo - 1, 1, BattleIconID, 0)
						--Extra Char
						WriteToSpriteList(IconAddress, SymbolX, SymbolY, 64, 0, SpriteNo3, 0, 1)
					else
						WriteToSpriteList(IconAddress, 48, 160, 1, 0, 12, 0, 1)
					end
					--Surfing char
						--We only subtract the surf animation y height if the surf blob isn't supposed to move 
					if RegionID == KantoRegionID and HoennSurfBool[PlayerNo] == 0 then	-- need to modify case for hoenn but overriding
						if PlayerAnimationFlag[PlayerNo] == 1 and PlayerExtra1[PlayerNo] <= 36 then 
							FinalMapY = FinalMapY - SurfBobAnimationY[PlayerNo]
						end
					end
					
					FinalMapX = FinalMapX - 8
					FinalMapY = FinalMapY + 8
					WriteToSpriteList(SurfBlobAddress, FinalMapX, FinalMapY, FacingTemp, 0, SpriteNo2, 0, 0)
				--Walking char
				else
					WriteToSpriteList(SpriteTableAddress, FinalMapX, FinalMapY, FacingTemp, 128, SpriteNo1, 0, 0)
					--Surfing char
					WriteToSpriteList(SurfBlobAddress, 48, 160, 1, 0, 12, 0, 1)
					--Add fighting symbol if in battle
					if PlayerExtra4[PlayerNo] == 1 then
						local SymbolY = FinalMapY - 8
						local SymbolX = FinalMapX
						--Create battle symbol
						createChars(PlayerNo - 1, 1, BattleIconID, 0)
						--Extra Char
						WriteToSpriteList(IconAddress, SymbolX, SymbolY, 64, 0, SpriteNo3, 0, 1)
					else
						WriteToSpriteList(IconAddress, 48, 160, 1, 0, 12, 0, 1)
					end
				end
			--Remove sprite (not surfing or biking)
			else
				WriteToSpriteList(SpriteTableAddress, 48, 160, 1, 0, 12, 0, 1)
				--Surfing char
				WriteToSpriteList(SurfBlobAddress, 48, 160, 1, 0, 12, 0, 1)
				--Extra Char
				WriteToSpriteList(IconAddress, 48, 160, 1, 0, 12, 0, 1)
			end
		--Remove sprite (not on screen) revisit for map edge glitchiness
		else
			WriteToSpriteList(SpriteTableAddress, 48, 160, 1, 0, 12, 0, 1)
			--Surfing char
			WriteToSpriteList(SurfBlobAddress, 48, 160, 1, 0, 12, 0, 1)
			--Extra Char
			WriteToSpriteList(IconAddress, 48, 160, 1, 0, 12, 0, 1)

		end
end

-- Tate Addition 
function WriteToSpriteList(SpriteYAddress, X, Y, Facing, SpriteNumInTable, Extra1, Extra3, Extra4)
	SpriteXAddress = SpriteYAddress + 2
	SpriteFaceAddress = SpriteYAddress + 3
	SpriteSpriteAddress = SpriteYAddress + 1
	SpriteExtra1Address = SpriteYAddress + 4
	SpriteExtra2Address = SpriteYAddress + 5
	SpriteExtra3Address = SpriteYAddress + 6
	SpriteExtra4Address = SpriteYAddress + 7

	emu:write8(SpriteXAddress, X)
	emu:write8(SpriteYAddress, Y)
	emu:write8(SpriteFaceAddress, Facing)
	emu:write8(SpriteSpriteAddress, SpriteNumInTable)
	emu:write16(SpriteExtra1Address, Extra1)
	emu:write8(SpriteExtra3Address, Extra3)
	emu:write8(SpriteExtra4Address, Extra4)
end


function ErasePlayer(PlayerNo)

		if GameID == "BPR1" or GameID == "BPR2" or GameID == "BPEE" then
			--Addresses for Firered
			SpriteTableAddress = 50345200 - ((PlayerNo - 1) * 24)
		elseif GameID == "BPG1" or GameID == "BPG2" then
			--Addresses for Leafgreen
			SpriteTableAddress = 50345200 - ((PlayerNo - 1) * 24)
		end

		WriteToSpriteList(SpriteTableAddress, 48, 160, 1, 0, 12, 0, 1)
		--Surfing char
		WriteToSpriteList(SpriteTableAddress + 8, 48, 160, 1, 0, 12, 0, 1)
		--Extra Char
		WriteToSpriteList(SpriteTableAddress + 16, 48, 160, 1, 0, 12, 0, 1)
end

--Unique for server

function AddPlayerToConsole(PlayerNumber)
	local MultiplayerPlayerNumber = PlayerNumber + 1
	local ConsoleLine = PlayerNumber + 8
	if MultiplayerConsoleFlags[MultiplayerPlayerNumber] == 0 and PlayerIDNick[PlayerNumber] ~= "None" then
		ConsoleForText:moveCursor(0,4)
		MultiplayerConsoleFlags[1] = MultiplayerConsoleFlags[1] + 1
		ConsoleForText:print("Players found!                                                  ")
			
			
		MultiplayerConsoleFlags[MultiplayerPlayerNumber] = 1
		ConsoleForText:moveCursor(0,ConsoleLine)
		ConsoleForText:print("Player " .. PlayerNumber .. ": " .. PlayerIDNick[PlayerNumber]  .. "                            ")
		
	end
end

function RemovePlayerFromConsole(PlayerNumber)
	local MultiplayerPlayerNumber = PlayerNumber + 1
	local ConsoleLine = PlayerNumber + 8
	if MultiplayerConsoleFlags[MultiplayerPlayerNumber] == 1 then
		MultiplayerConsoleFlags[1] = MultiplayerConsoleFlags[1] - 1
		if MultiplayerConsoleFlags[1] <= 0 then
			MultiplayerConsoleFlags[1] = 0
			ConsoleForText:moveCursor(0,4)
			ConsoleForText:print("Searching for player...                                                ")
		end
		MultiplayerConsoleFlags[MultiplayerPlayerNumber] = 0
		ConsoleForText:moveCursor(0,ConsoleLine)
		ConsoleForText:print("                                                                     ")
		
	end
end



function GetNewGame()
    ClearAllVar()
	if ConsoleForText == nil then
		ConsoleForText = console:createBuffer("GBA-PK SERVER")
	end
	ConsoleForText:clear()
	ConsoleForText:moveCursor(0,0)
	ConsoleForText:print("A new game has started")
	ConsoleForText:moveCursor(0,1)
	FFTimer2 = os.time()
	GetGameVersion()
end

function shutdownGame()
    ClearAllVar()
	ConsoleForText:clear()
	ConsoleForText:moveCursor(0,0)
	ConsoleForText:print("The game was shutdown")
end

--Begin Networking

function CreateNetwork()
	if MasterClient ~= "c" then
		SocketMain:connect(IPAddress, Port)
		SendData("Request")
		ConsoleForText:moveCursor(0,3)
		ConsoleForText:print("Searching for an open game on IP ".. IPAddress .. " and port " .. Port)
		ConsoleForText:moveCursor(0,15)
		ConsoleForText:print("Connected to a server: No                   ")
		ReceiveData()
	else
		if PlayerID ~= 1 then
			ConsoleForText:moveCursor(0,3)
			ConsoleForText:print("You have successfully connected.                                                          ")
			ConsoleForText:moveCursor(0,15)
			ConsoleForText:print("Connected to a server: Yes                 ")
		else
			ConsoleForText:moveCursor(0,3)
			ConsoleForText:print("Searching for an open game on IP ".. IPAddress .. " and port " .. Port)
			ConsoleForText:moveCursor(0,15)
			ConsoleForText:print("Connected to a server: No                   ")
		end
	end
end

--Receive Data from server
function SetPokemonData(PokeData)
	if string.len(EnemyPokemon[1]) < 250 then EnemyPokemon[1] = EnemyPokemon[1] .. PokeData
	elseif string.len(EnemyPokemon[2]) < 250 then EnemyPokemon[2] = EnemyPokemon[2] .. PokeData
	elseif string.len(EnemyPokemon[3]) < 250 then EnemyPokemon[3] = EnemyPokemon[3] .. PokeData
	elseif string.len(EnemyPokemon[4]) < 250 then EnemyPokemon[4] = EnemyPokemon[4] .. PokeData
	elseif string.len(EnemyPokemon[5]) < 250 then EnemyPokemon[5] = EnemyPokemon[5] .. PokeData
	elseif string.len(EnemyPokemon[6]) < 250 then EnemyPokemon[6] = EnemyPokemon[6] .. PokeData
	end
end
function ReceiveData()
	local RECEIVEDID = 0
	if EnableScript == true then
			--If host has package sent
			if SocketMain:hasdata() then
				local ReadData = SocketMain:receive(64)
				if ReadData ~= nil then
					--Encryption key
					ReceiveDataSmall[17] = "A"
					ReceiveDataSmall[1] = string.sub(ReadData,1,4)
					ReceiveDataSmall[2] = string.sub(ReadData,5,8)
					ReceiveDataSmall[3] = tonumber(string.sub(ReadData,9,12))
					RECEIVEDID = ReceiveDataSmall[3] - 1000
					ReceiveDataSmall[4] = tonumber(string.sub(ReadData,13,16))
					PlayerReceiveID = ReceiveDataSmall[4]
					ReceiveDataSmall[5] = string.sub(ReadData,17,20)
					ReceiveDataSmall[17] = string.sub(ReadData,64,64)
				--	if ReceiveDataSmall[4] == "BATT" then ConsoleForText:print("Valid package! Contents: " .. ReadData) end
				--	ConsoleForText:print("Type: " .. ReceiveDataSmall[4])
					if ReceiveDataSmall[17] == "U" and ReceiveDataSmall[5] == "SLNK" then
							timeout[1] = timeoutmax
							ReceiveDataSmall[6] = string.sub(ReadData,21,30)
							ReceiveDataSmall[6] = tonumber(ReceiveDataSmall[6])
							if ReceiveDataSmall[6] ~= 0 then
								ReceiveDataSmall[6] = ReceiveDataSmall[6] - 1000000000
								ReceiveMultiplayerPackets(ReceiveDataSmall[6])
							end
					elseif ReceiveDataSmall[17] == "U" and ReceiveDataSmall[5] == "POKE" then
							timeout[1] = timeoutmax
							local PokeTemp2 = string.sub(ReadData,21,45)
							SetPokemonData(PokeTemp2)
							
					elseif ReceiveDataSmall[17] == "U" and ReceiveDataSmall[5] == "TRAD" then
						timeout[1] = timeoutmax
						EnemyTradeVars[1] = string.sub(ReadData,21,21)
						EnemyTradeVars[2] = string.sub(ReadData,22,22)
						EnemyTradeVars[3] = string.sub(ReadData,23,23)
						EnemyTradeVars[5] = string.sub(ReadData,24,63)
						EnemyTradeVars[1] = tonumber(EnemyTradeVars[1])
						EnemyTradeVars[2] = tonumber(EnemyTradeVars[2])
						EnemyTradeVars[3] = tonumber(EnemyTradeVars[3])
					elseif ReceiveDataSmall[17] == "U" and ReceiveDataSmall[5] == "BATT" then
						timeout[1] = timeoutmax
						EnemyBattleVars[1] = string.sub(ReadData,21,21)
						EnemyBattleVars[2] = string.sub(ReadData,22,22)
						EnemyBattleVars[3] = string.sub(ReadData,23,23)
						EnemyBattleVars[4] = string.sub(ReadData,24,24)
						EnemyBattleVars[5] = string.sub(ReadData,25,25)
						EnemyBattleVars[6] = string.sub(ReadData,26,26)
						EnemyBattleVars[7] = string.sub(ReadData,27,27)
						EnemyBattleVars[8] = string.sub(ReadData,28,28)
						EnemyBattleVars[9] = string.sub(ReadData,29,29)
						EnemyBattleVars[10] = string.sub(ReadData,30,30)
						EnemyBattleVars[1] = tonumber(EnemyBattleVars[1])
						EnemyBattleVars[2] = tonumber(EnemyBattleVars[2])
						EnemyBattleVars[3] = tonumber(EnemyBattleVars[3])
						EnemyBattleVars[4] = tonumber(EnemyBattleVars[4])
						EnemyBattleVars[5] = tonumber(EnemyBattleVars[5])
						EnemyBattleVars[6] = tonumber(EnemyBattleVars[6])
						EnemyBattleVars[7] = tonumber(EnemyBattleVars[7])
						EnemyBattleVars[8] = tonumber(EnemyBattleVars[8])
						EnemyBattleVars[9] = tonumber(EnemyBattleVars[9])
						EnemyBattleVars[10] = tonumber(EnemyBattleVars[10])
					
					elseif ReceiveDataSmall[17] == "U" then
						timeout[1] = timeoutmax
							--Decryption for packet
							--Extra bytes connected to sent request
							ReceiveDataSmall[6] = string.sub(ReadData,21,24)
							ReceiveDataSmall[6] = tonumber(ReceiveDataSmall[6])
							--X
							ReceiveDataSmall[7] = string.sub(ReadData,25,28)
							ReceiveDataSmall[7] = tonumber(ReceiveDataSmall[7])
							--Y
							ReceiveDataSmall[8] = string.sub(ReadData,29,32)
							ReceiveDataSmall[8] = tonumber(ReceiveDataSmall[8])
							--Facing (used during comparing for extra1)
							ReceiveDataSmall[9] = string.sub(ReadData,33,35)
							ReceiveDataSmall[9] = tonumber(ReceiveDataSmall[9])
							--Extra 1
							ReceiveDataSmall[10] = string.sub(ReadData,36,38)
							ReceiveDataSmall[10] = tonumber(ReceiveDataSmall[10])
							ReceiveDataSmall[10] = ReceiveDataSmall[10] - 100
							--Extra 2
							ReceiveDataSmall[11] = string.sub(ReadData,39,39)
							ReceiveDataSmall[11] = tonumber(ReceiveDataSmall[11])
							--Extra 3
							ReceiveDataSmall[12] = string.sub(ReadData,40,40)
							ReceiveDataSmall[12] = tonumber(ReceiveDataSmall[12])
							--Extra 4
							ReceiveDataSmall[13] = string.sub(ReadData,41,41)
							ReceiveDataSmall[13] = tonumber(ReceiveDataSmall[13])
							--MapID
							ReceiveDataSmall[14] = string.sub(ReadData,42,47)
							ReceiveDataSmall[14] = tonumber(ReceiveDataSmall[14])
							--PreviousMapID
							ReceiveDataSmall[15] = string.sub(ReadData,48,53)
							ReceiveDataSmall[15] = tonumber(ReceiveDataSmall[15])
							--MapConnectionType
							ReceiveDataSmall[16] = string.sub(ReadData,54,54)
							ReceiveDataSmall[16] = tonumber(ReceiveDataSmall[16])
							--StartX
							ReceiveDataSmall[18] = string.sub(ReadData,55,58)
							ReceiveDataSmall[18] = tonumber(ReceiveDataSmall[18])
							--StartY
							ReceiveDataSmall[19] = string.sub(ReadData,59,62)
							ReceiveDataSmall[19] = tonumber(ReceiveDataSmall[19])
							--Between 53 and 63 there are 11 bytes of filler.
							
				--		console:log("X: " .. ReceiveDataSmall[6] .. " Y: " .. ReceiveDataSmall[7] .. " Extra 1: " .. ReceiveDataSmall[9] .. " Extra 2: " .. ReceiveDataSmall[10] .. " MapID: " .. ReceiveDataSmall[13] .. " ConnectType: " .. ReceiveDataSmall[15])
	--					ConsoleForText:print("Valid package! Contents: " .. ReadData)
			--		if ReceiveDataSmall[34] ~= 0 and (ReceiveDataSmall[11] == ReceiveDataSmall[34]) then
			--			ConsoleForText:print("Valid package! Contents: " .. ReadData)
				--	if ReceiveDataSmall[5] == "DTRA" then ConsoleForText:print("Locktype: " .. LockFromScript) end
						--Set connection type to var
							ReturnConnectionType = ReceiveDataSmall[5]
						--If host asks for positions
						if ReceiveDataSmall[5] == "RPOK" then
							CreatePackettSpecial("POKE")
						--	console:log("YOU ARE NOW SENDING POKE PACKAGE")
						end
						if ReceiveDataSmall[5] == "GPOS" then
							SendData("GPOS")
						end
						
						--If player requests for a battle
						if ReceiveDataSmall[5] == "RBAT" and ReceiveDataSmall[3] ~= PlayerID2 then
							local TooBusyByte = emu:read8(50335644)
							if (TooBusyByte ~= 0 or LockFromScript ~= 0) then
								SendData("TBUS")
							else
								OtherPlayerHasCancelled = 0
								LockFromScript = 10
								PlayerTalkingID = ReceiveDataSmall[3] - 1000
								PlayerTalkingID2 = ReceiveDataSmall[3]
								Loadscript(10)
							end
						end
						
						--If player requests for a trade
						if ReceiveDataSmall[5] == "RTRA" and ReceiveDataSmall[3] ~= PlayerID2 then
							local TooBusyByte = emu:read8(50335644)
							if (TooBusyByte ~= 0 or LockFromScript ~= 0) then
								SendData("TBUS")
							else
								OtherPlayerHasCancelled = 0
								LockFromScript = 11
								PlayerTalkingID = ReceiveDataSmall[3] - 1000
								PlayerTalkingID2 = ReceiveDataSmall[3]
								Loadscript(6)
							end
						end
						
						--If player cancels battle
						if ReceiveDataSmall[5] == "CBAT" and ReceiveDataSmall[3] == PlayerTalkingID2 then
				--			ConsoleForText:print("Other player has canceled battle.")
							OtherPlayerHasCancelled = 1
						end
						--If player cancels trade
						if ReceiveDataSmall[5] == "CTRA" and ReceiveDataSmall[3] == PlayerTalkingID2 then
				--			ConsoleForText:print("Other player has canceled trade.")
							OtherPlayerHasCancelled = 2
						end
						
						--If player is too busy to battle
						if ReceiveDataSmall[5] == "TBUS" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 4 then
					--		ConsoleForText:print("Other player is too busy to battle.")
							if Var8000[2] ~= 0 then
								LockFromScript = 7
								Loadscript(20)
							else
								TextSpeedWait = 5
							end
						--If player is too busy to trade
						elseif ReceiveDataSmall[5] == "TBUS" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 5 then
					--		ConsoleForText:print("Other player is too busy to trade.")
							if Var8000[2] ~= 0 then
								LockFromScript = 7
								Loadscript(21)
							else
								TextSpeedWait = 6
							end
						end
						
						--If player accepts your battle request
						if ReceiveDataSmall[5] == "SBAT" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 4 then
							SendData("RPOK")
							if Var8000[2] ~= 0 then
								LockFromScript = 8
								Loadscript(13)
							else
								TextSpeedWait = 1
							end
						end
						--If player accepts your trade request
						if ReceiveDataSmall[5] == "STRA" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 5 then
							SendData("RPOK")
							if Var8000[2] ~= 0 then
								LockFromScript = 9
							else
								TextSpeedWait = 2
							end
						end
						
						--If player denies your battle request
						if ReceiveDataSmall[5] == "DBAT" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 4 then
							if Var8000[2] ~= 0 then
								LockFromScript = 7
								Loadscript(11)
							else
								TextSpeedWait = 3
							end
						end
						--If player denies your trade request
						if ReceiveDataSmall[5] == "DTRA" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 5 then
							if Var8000[2] ~= 0 then
								LockFromScript = 7
								Loadscript(7)
							else
								TextSpeedWait = 4
							end
						end
						
						--If player refuses trade offer
						if ReceiveDataSmall[5] == "ROFF" and ReceiveDataSmall[3] == PlayerTalkingID2 and LockFromScript == 9 then
							OtherPlayerHasCancelled = 3
						end
						
							--If host accepts your join request
						if ReceiveDataSmall[5] == "STRT" then
							timeout[1] = timeoutmax
							MapChange[1] = 0
							PlayerAnimationFrameTimer[1] = 0
							PlayerAnimationFlag[1] = 0
							PlayerAnimationFrameTimerMax[1] = 0
							PlayerIDNick[1] = ReceiveDataSmall[2]
							PlayerID2 = tonumber(ReceiveDataSmall[6])
							PlayerID = PlayerID2 - 1000
							FutureX[1] = ReceiveDataSmall[7]
							FutureY[1] = ReceiveDataSmall[8]
						--	Facing = tonumber(ReceiveDataSmall[11])
							--Action type -> can be walk or run
							PlayerExtra1[1] = ReceiveDataSmall[10]
							globalSpriteNo[1] = ReceiveDataSmall[11]
							PlayerExtra3[1] = ReceiveDataSmall[12]
							PlayerExtra4[1] = ReceiveDataSmall[13]
						end
						
						if ReceiveDataSmall[5] == "SPOS" then
									PlayerIDNick[RECEIVEDID] = ReceiveDataSmall[2]
									if CurrentMapID[RECEIVEDID] ~= ReceiveDataSmall[14] then
										PlayerAnimationFrameTimer[RECEIVEDID] = 0
										PlayerAnimationFlag[RECEIVEDID] = 0
										PlayerAnimationFrameTimerMax[RECEIVEDID] = 0
									--	console:log("Player 1 has changed maps")
										CurrentMapID[RECEIVEDID] = ReceiveDataSmall[14]
										PreviousMapID[RECEIVEDID] = ReceiveDataSmall[15]
										MapEntranceType[RECEIVEDID] = ReceiveDataSmall[16]
										PreviousX[RECEIVEDID] = CurrentX[RECEIVEDID]
										PreviousY[RECEIVEDID] = CurrentY[RECEIVEDID]
										CurrentX[RECEIVEDID] = ReceiveDataSmall[7]
										CurrentY[RECEIVEDID] = ReceiveDataSmall[8]
										MapChange[RECEIVEDID] = 1
									end
									FutureX[RECEIVEDID] = ReceiveDataSmall[7]
									FutureY[RECEIVEDID] = ReceiveDataSmall[8]
									PlayerExtra1[RECEIVEDID] = ReceiveDataSmall[10]
									globalSpriteNo[RECEIVEDID] = ReceiveDataSmall[11]
									PlayerExtra3[RECEIVEDID] = ReceiveDataSmall[12]
									PlayerExtra4[RECEIVEDID] = ReceiveDataSmall[13]
									StartX[RECEIVEDID] = ReceiveDataSmall[18]
									StartY[RECEIVEDID] = ReceiveDataSmall[19]
						end
		--			if TempVar2 == 0 then ConsoleForText:print("Test 4") end
			--		else
			--			ConsoleForText:print("INVALID PACKAGE: " .. ReadData)
					end
				end
			end
	end
end

function CreatePackettSpecial(RequestTemp, OptionalData)
	if RequestTemp == "POKE" then
		PlayerReceiveID = PlayerTalkingID2
		GetPokemonTeam()
		local PokeTemp
		local StartNum = 0
		local StartNum2 = 0
		local Filler = "FFFFFFFFFFFFFFFFFF"
		for j = 1, 6 do
			for i = 1, 10 do
			StartNum = ((i - 1) * 25) + 1
			StartNum2 = StartNum + 24
			PokeTemp = string.sub(Pokemon[j],StartNum,StartNum2)
			Packett = GameID .. Nickname .. PlayerID2 .. PlayerReceiveID .. RequestTemp .. PokeTemp .. Filler .. "U"
			SocketMain:send(Packett)
		--	console:log("PACKETT SENDING TO " .. PlayerReceiveID .. ": " .. Packett)
			end
		end
	elseif RequestTemp == "TRAD" then
		PlayerReceiveID = PlayerTalkingID2
		Packett = GameID .. Nickname .. PlayerID2 .. PlayerReceiveID .. RequestTemp .. TradeVars[1] .. TradeVars[2] .. TradeVars[3] .. TradeVars[5] .. "U"
		--4 + 4 + 4 + 4 + 4 + 3 + 40 + 1
		SocketMain:send(Packett)
	elseif RequestTemp == "BATT" then
		PlayerReceiveID = PlayerTalkingID2
		local FillerSend = "100000000000000000000000000000000"
		Packett = GameID .. Nickname .. PlayerID2 .. PlayerReceiveID .. RequestTemp .. BattleVars[1] .. BattleVars[2] .. BattleVars[3] .. BattleVars[4] .. BattleVars[5] .. BattleVars[6] .. BattleVars[7] .. BattleVars[8] .. BattleVars[9] .. BattleVars[10] .. FillerSend .. "U"
	--	ConsoleForText:print("Packett: " .. Packett)
		SocketMain:send(Packett)
	elseif RequestTemp == "SLNK" then
		PlayerReceiveID = PlayerTalkingID2
		OptionalData = OptionalData or 0
		local Filler = "100000000000000000000000000000000"
		local SizeAct = OptionalData + 1000000000
 --		SizeAct = tostring(SizeAct)
--		SizeAct = string.format("%.0f",SizeAct)
		Packett = GameID .. Nickname .. PlayerID2 .. PlayerReceiveID .. RequestTemp .. SizeAct .. Filler .. "U"
--		ConsoleForText:print("Packett: " .. Packett)
		SocketMain:send(Packett)
	end
end
--Send Data to clients
function CreatePackett(RequestTemp, PackettTemp)
	local FillerStuff = "F"
	Packett = GameID .. Nickname .. PlayerID2 .. PlayerReceiveID .. RequestTemp .. PackettTemp .. CurrentX[PlayerID] .. CurrentY[PlayerID] .. Facing2[PlayerID] .. PlayerExtra1[PlayerID] .. globalSpriteNo[PlayerID] .. PlayerExtra3[PlayerID] .. PlayerExtra4[PlayerID] .. PlayerMapID .. PlayerMapIDPrev .. PlayerMapEntranceType .. StartX[PlayerID] .. StartY[PlayerID] .. FillerStuff .. "U"
end

function SendData(DataType, ExtraData)
	--If you have made a server
	if (DataType == "NewPlayer") then
		PlayerReceiveID = 1000
	--	ConsoleForText:print("Request accepted!")
		CreatePackett("STRT", ExtraData)
		SocketMain:send(Packett)
	elseif (DataType == "DENY") then
		CreatePackett("DENY", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "KICK") then
		CreatePackett("KICK", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "GPOS") then
		CreatePackett("GPOS", "1000")
		SocketMain:send(Packett)
		ConsoleForText:print("Sending gpos packet") --temporary
--		SocketMain:send("BPREABCD1DMMY111111111111111111111111111111111111111111111111111")
	elseif (DataType == "SPOS") then
		CreatePackett("SPOS", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "Request") then
		PlayerReceiveID = 1000
		CreatePackett("JOIN", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "Hide") then
		CreatePackett("HIDE", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "POKE") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackettSpecial("POKE")
	elseif (DataType == "RPOK") then
		PlayerReceiveID = PlayerTalkingID2
		local whiletempmax = 100000
		EnemyPokemon[1] = ""
		EnemyPokemon[2] = ""
		EnemyPokemon[3] = ""
		EnemyPokemon[4] = ""
		EnemyPokemon[5] = ""
		EnemyPokemon[6] = ""
		CreatePackett("RPOK", "1000")
		SocketMain:send(Packett)
		while (string.len(EnemyPokemon[6]) < 100 and whiletempmax > 0) do
			ReceiveData()
			ReceiveData()
			ReceiveData()
			ReceiveData()
			ReceiveData()
			whiletempmax = whiletempmax - 1
	--		if string.len(EnemyPokemon[6]) >= 100 then break end
		end
	elseif (DataType == "RTRA") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("RTRA", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "RBAT") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("RBAT", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "STRA") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("STRA", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "SBAT") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("SBAT", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "DTRA") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("DTRA", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "DBAT") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("DBAT", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "CTRA") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("CTRA", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "CBAT") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("CBAT", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "TBUS") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("TBUS", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "ROFF") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackett("ROFF", "1000")
		SocketMain:send(Packett)
	elseif (DataType == "TRAD") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackettSpecial("TRAD")
	elseif (DataType == "BATT") then
		PlayerReceiveID = PlayerTalkingID2
		CreatePackettSpecial("BATT")
	end
end

function ConnectNetwork()
	--If you are currently connected to a server
	if (timeout[1] > 0) then
	--To prevent package overrunning, sending will be every 8 frames, unlike recieve, which is every frame
	--Send timer
	--Receive timer
	
		--Recieve data from server (GPOS and SPOS)
		for j = 1, MaxPlayers do
			for i = 1, MaxPlayers do
				if PlayerID ~= i then ReceiveData() end
			end
		end
		if SendTimer == 0 then 
			--Send your positional data
			for i = 1, MaxPlayers do
				PlayerReceiveID = i + 1000
				if PlayerID2 ~= PlayerReceiveID then
					SendData("SPOS")
				end
			end
			timeout[1] = timeout[1] - 4
					if timeout[1] <= 0 then
						
						SocketMain:close()
						MasterClient = "a"
						PlayerID = 1
						PlayerID2 = 1001
						ConsoleForText:moveCursor(0,3)
						console:log("You have timed out")
						ConsoleForText:print("You have been disconnected due to timeout.                                           ")
						ConsoleForText:moveCursor(0,15)
						ConsoleForText:print("Connected to a server: No         ")
						for i = 1, MaxPlayers do
							PlayerIDNick[i] = "None"
						end
						CreateNetwork()
					end
		end
	else 
		--You might be connected to one
		ReceiveData()
	--	ConsoleForText:print("Connection Type: " .. ReturnConnectionType)
		if ReturnConnectionType == "STRT" then
			console:log("You have connected to " .. PlayerIDNick[1])
			ConsoleForText:moveCursor(0,3)
			ConsoleForText:print("You have successfully connected.                                                          ")
			ConsoleForText:moveCursor(0,15)
			ConsoleForText:print("Connected to a server: Yes                 ")
			--Since ID has changed, get real position
			MasterClient = "c"
		end
	end
end

--End network code

function RandomizeNickname()
	local res = ""
	for i = 1, 4 do
		res = res .. string.char(math.random(97, 122))
	end
	return res
end


function Interact()
	if EnableScript == true and initialized ~= 0 then
		local Keypress = emu:getKeys()
		local TalkingDirX = 0
		local TalkingDirY = 0
		local ScriptAddressTemp = 0
		local ScriptAddressTemp1 = 0
		local AddressGet = ""
		local TooBusyByte = emu:read8(50335644)
		
		--Hide n seek
		if LockFromScript == 1 then
			if Var8000[5] == 2 then
		--		ConsoleForText:print("Hide n' Seek selected")
				LockFromScript = 0
				Loadscript(3)
				Keypressholding = 1
				Keypress = 1
			
			elseif Var8000[5] == 1 then
		--		ConsoleForText:print("Hide n' Seek not selected")
				LockFromScript = 0
				Loadscript(3)
				Keypressholding = 1
				Keypress = 1
			end
		--Interaction Multi-choice
		elseif LockFromScript == 2 then
			if Var8000[1] ~= Var8000[14] then
				if Var8000[1] == 1 then
		--			ConsoleForText:print("Battle selected")
					FixAddress()
		--			LockFromScript = 4
		--			Loadscript(4)
					LockFromScript = 7
					Loadscript(3)
					Keypressholding = 1
					Keypress = 1
		--			SendData("RBAT", Player2)
				
				elseif Var8000[1] == 2 then
		--			ConsoleForText:print("Trade selected")
					FixAddress()
					LockFromScript = 5
					Loadscript(4)
					Keypressholding = 1
					Keypress = 1
					SendData("RTRA")
				
				elseif Var8000[1] == 3 then
		--			ConsoleForText:print("Card selected")
					FixAddress()
					LockFromScript = 6
					Loadscript(3)
					Keypressholding = 1
					Keypress = 1
				
				elseif Var8000[1] ~= 0 then
		--			ConsoleForText:print("Exit selected")
					FixAddress()
					LockFromScript = 0
					Keypressholding = 1
					Keypress = 1
				end
			end
		end
		if Keypress ~= 0 then
		if Keypress == 1 or Keypress == 65 or Keypress == 129 or Keypress == 33 or Keypress == 17 then
	--		ConsoleForText:print("Pressed A")
	
			--SCRIPTS. LOCK AND PREVENT SPAM PRESS. 
			if LockFromScript == 0 and Keypressholding == 0 and TooBusyByte == 0 then
				--HIDE N SEEK AT DESK IN ROOM
				if MasterClient == "h" and PlayerDirection == 3 and PlayerMapX == 1009 and PlayerMapY == 1009 and PlayerMapID == 100260 then
				--Server config through bedroom drawer
					--For temp ram to load up script in 145227776 - 08A80000
					--8004 is the temp var to get yes or no
					Loadscript(1)
					LockFromScript = 1
				end
				--Interact with players
				for i = 1, MaxPlayers do
					if PlayerID ~= i and PlayerIDNick[i] ~= "None" then
						TalkingDirX = PlayerMapX - CurrentX[i]
						TalkingDirY = PlayerMapY - CurrentY[i]
						if PlayerDirection == 1 and TalkingDirX == 1 and TalkingDirY == 0 then
					--		ConsoleForText:print("Player Left")
							
						elseif PlayerDirection == 2 and TalkingDirX == -1 and TalkingDirY == 0 then
					--		ConsoleForText:print("Player Right")
						elseif PlayerDirection == 3 and TalkingDirY == 1 and TalkingDirX == 0 then
					--		ConsoleForText:print("Player Up")
						elseif PlayerDirection == 4 and TalkingDirY == -1 and TalkingDirX == 0 then
					--		ConsoleForText:print("Player Down")
						end
						if (PlayerDirection == 1 and TalkingDirX == 1 and TalkingDirY == 0) or (PlayerDirection == 2 and TalkingDirX == -1 and TalkingDirY == 0) or (PlayerDirection == 3 and TalkingDirX == 0 and TalkingDirY == 1) or (PlayerDirection == 4 and TalkingDirX == 0 and TalkingDirY == -1) then
						
					--		ConsoleForText:print("Player Any direction")
							emu:write16(Var8000Adr[1], 0) 
							emu:write16(Var8000Adr[2], 0) 
							emu:write16(Var8000Adr[14], 0)
							PlayerTalkingID = i
							PlayerTalkingID2 = i + 1000
							LockFromScript = 2
							Loadscript(2)
						end
					end
				end
			end
			Keypressholding = 1
			elseif Keypress == 2 then
				if LockFromScript == 4 and Keypressholding == 0 and Var8000[2] ~= 0 then
					--Cancel battle request
					Loadscript(15)
					SendData("CBAT")
					LockFromScript = 0
				elseif LockFromScript == 5 and Keypressholding == 0 and Var8000[2] ~= 0 then
					--Cancel trade request
					Loadscript(16)
					SendData("CTRA")
					LockFromScript = 0
					TradeVars[1] = 0
					TradeVars[2] = 0
					TradeVars[3] = 0
					OtherPlayerHasCancelled = 0
				elseif LockFromScript == 9 and (TradeVars[1] == 2 or TradeVars[1] == 4) and Keypressholding == 0 and Var8000[2] ~= 0 then
					--Cancel trade request
					Loadscript(16)
					SendData("CTRA")
					LockFromScript = 0
					TradeVars[1] = 0
					TradeVars[2] = 0
					TradeVars[3] = 0
					OtherPlayerHasCancelled = 0
				end
				Keypressholding = 1
			elseif Keypress == 4 then
		--		GetPokemonTeam()
		--		SetEnemyPokemonTeam()
		--		ConsoleForText:print("Pressed Select")
			elseif Keypress == 8 then
		--		ConsoleForText:print("Pressed Start")
			elseif Keypress == 16 then
		--		ConsoleForText:print("Pressed Right")
			elseif Keypress == 32 then
		--		ConsoleForText:print("Pressed Left")
			elseif Keypress == 64 then
		--		ConsoleForText:print("Pressed Up")
			elseif Keypress == 128 then
		--		ConsoleForText:print("Pressed Down")
			elseif Keypress == 256 then
		--		ConsoleForText:print("Pressed R-Trigger")
		--	if LockFromScript == 0 and Keypressholding == 0 then
		--	ConsoleForText:print("Pressed R-Trigger")
			--	ApplyMovement(0)
		--		emu:write16(Var8001Adr, 0) 
			--	BufferString = Player2ID
		--		Loadscript(12)
		--		LockFromScript = 5
		--		local TestString = ReadBuffers(33692880, 4)
		--		WriteBuffers(33692912, TestString, 4)
			--	ConsoleForText:print("String: " .. TestString)
			
		--		SendData("RPOK",Player2)
		--		if EnemyPokemon[6] ~= 0 then
		--			SetEnemyPokemonTeam(0,1)
		--		end
				
			--	LockFromScript = 8
		--		SendMultiplayerPackets(0,256)
		--	end
		--	Keypressholding = 1
			elseif Keypress == 512 then
		--		ConsoleForText:print("Pressed L-Trigger")
			end
		else
			Keypressholding = 0
		end
	end
end

function mainLoop()
	FFTimer = os.time() - FFTimer2
	FFTimer = math.floor(FFTimer)
	ScriptTime = ScriptTime + 1
	SendTimer = ScriptTime % ScriptTimeFrame
	
	if FFTimer > FramesPS then
		--This is our framerate
		local ScriptTimeSpeed = ScriptTime - ScriptTimePrev
		ScriptTimePrev = ScriptTime
		
		if ScriptTimeSpeed < 100 then
			ScriptTimeFrame = 4
		elseif ScriptTimeSpeed < 200 then
			ScriptTimeFrame = 10
		elseif ScriptTimeSpeed < 300 then
			ScriptTimeFrame = 16
		elseif ScriptTimeSpeed < 400 then
			ScriptTimeFrame = 22
		elseif ScriptTimeSpeed < 500 then
			ScriptTimeFrame = 28
		elseif ScriptTimeSpeed < 600 then
			ScriptTimeFrame = 34
		elseif ScriptTimeSpeed < 700 then
			ScriptTimeFrame = 40
		elseif ScriptTimeSpeed < 800 then
			ScriptTimeFrame = 46
		elseif ScriptTimeSpeed < 900 then
			ScriptTimeFrame = 52
		elseif ScriptTimeSpeed >= 900 then
			ScriptTimeFrame = 60
		else
			ScriptTimeFrame = 4
		end
	end
	
	FramesPS = FFTimer
	
	if initialized == 0 and EnableScript == true then
		ROMCARD = emu.memory.cart0
		initialized = 1
		GetPosition()
	--	Loadscript(0)
		Nickname = RandomizeNickname()
		ConsoleForText:print("Nickname is now " .. Nickname)
		ConsoleForText:moveCursor(0,3)
		CreateNetwork()
	elseif EnableScript == true then
			--Debugging
			local TempVarTimer = ScriptTime % DebugTime
			
			TempVar2 = ScriptTime % DebugTime2
			GetPosition()
			ConnectNetwork()
			--Create a network if not made every half second
			TempVarTimer = ScriptTime % DebugTime2
			if TempVarTimer == 0 then
				if timeout[1] == 0 then
					CreateNetwork()
				end
			end
							--VARS--
		if GameID == "BPR1" or GameID == "BPR2" then
			Startvaraddress = 33779896
		elseif GameID == "BPG1" or GameID == "BPG2" then
			Startvaraddress = 33779896
		end
		Var8000Adr[1] = Startvaraddress
		Var8000Adr[2] = Startvaraddress + 2
		Var8000Adr[3] = Startvaraddress + 4
		Var8000Adr[4] = Startvaraddress + 6
		Var8000Adr[5] = Startvaraddress + 8
		Var8000Adr[6] = Startvaraddress + 10
		Var8000Adr[14] = Startvaraddress + 26
		Var8000[1] = emu:read16(Var8000Adr[1])
		Var8000[2] = emu:read16(Var8000Adr[2])
		Var8000[3] = emu:read16(Var8000Adr[3])
		Var8000[4] = emu:read16(Var8000Adr[4])
		Var8000[5] = emu:read16(Var8000Adr[5])
		Var8000[6] = emu:read16(Var8000Adr[6])
		Var8000[14] = emu:read16(Var8000Adr[14])
		Var8000[1] = tonumber(Var8000[1])
		Var8000[2] = tonumber(Var8000[2])
		Var8000[3] = tonumber(Var8000[3])
		Var8000[4] = tonumber(Var8000[4])
		Var8000[5] = tonumber(Var8000[5])
		Var8000[6] = tonumber(Var8000[6])
		Var8000[14] = tonumber(Var8000[14])
			
						--BATTLE/TRADE--
			
		--	if TempVar2 == 0 then ConsoleForText:print("OtherPlayerCanceled: " .. OtherPlayerHasCancelled) end
			
			--If you cancel/stop
			if LockFromScript == 0 then
				PlayerTalkingID = 0
			end
			
			--Wait until other player accepts battle
			if LockFromScript == 4 then
				if Var8000[2] ~= 0 then
					if TextSpeedWait == 1 then
						TextSpeedWait = 0
						LockFromScript = 8
						Loadscript(13)
					elseif TextSpeedWait == 3 then
						TextSpeedWait = 0
						LockFromScript = 7
						Loadscript(11)
					elseif TextSpeedWait == 5 then
						TextSpeedWait = 0
						LockFromScript = 7
						Loadscript(20)
					end
				end
--				if SendTimer == 0 then SendData("RBAT") end
				
			--Wait until other player accepts trade
			elseif LockFromScript == 5 then
				if Var8000[2] ~= 0 then
					if TextSpeedWait == 2 then
						TextSpeedWait = 0
						LockFromScript = 9
					elseif TextSpeedWait == 4 then
						TextSpeedWait = 0
						LockFromScript = 7
						Loadscript(7)
					elseif TextSpeedWait == 6 then
						TextSpeedWait = 0
						LockFromScript = 7
						Loadscript(21)
					end
				end
--				if SendTimer == 0 then SendData("RTRA") end
			
			--Show card. Placeholder for now
			elseif LockFromScript == 6 then
				if Var8000[2] ~= 0 then
			--		ConsoleForText:print("Var 8001: " .. Var8000[2])
					LockFromScript = 0
				--	if SendTimer == 0 then SendData("RTRA") end
				end
				
			--Exit message
			elseif LockFromScript == 7 then
				if Var8000[2] ~= 0 then LockFromScript = 0 Keypressholding = 1 end
				
			--Trade script
			elseif LockFromScript == 8 then
			
				Battlescript()
			
			--Battle script
			elseif LockFromScript == 9 then
			
				Tradescript()
			
			--Player 1 has requested to battle
			elseif LockFromScript == 10 then
		--	if Var8000[2] ~= 0 then ConsoleForText:print("Var8001: " .. Var8000[2]) end
				if Var8000[2] == 2 then
					if OtherPlayerHasCancelled == 0 then
						SendData("RPOK")
						SendData("SBAT")
						LockFromScript = 8
						Loadscript(13)
					else
						OtherPlayerHasCancelled = 0
						LockFromScript = 7
						Loadscript(18)
					end
				elseif Var8000[2] == 1 then LockFromScript = 0 SendData("DBAT") Keypressholding = 1 end
				
			--Player 1 has requested to trade
			elseif LockFromScript == 11 then
		--	if Var8000[2] ~= 0 then ConsoleForText:print("Var8001: " .. Var8000[2]) end
				--If accept, then send that you accept
				if Var8000[2] == 2 then
					if OtherPlayerHasCancelled == 0 then
						SendData("RPOK")
						SendData("STRA")
						LockFromScript = 9
					else
						OtherPlayerHasCancelled = 0
						LockFromScript = 7
						Loadscript(19)
					end
				elseif Var8000[2] == 1 then LockFromScript = 0 SendData("DTRA") Keypressholding = 1 end
			end
	end
end


SocketMain:add("received", ReceiveData)
callbacks:add("reset", GetNewGame)
callbacks:add("shutdown", shutdownGame)
callbacks:add("frame", mainLoop)
callbacks:add("frame", DrawChars)

callbacks:add("keysRead", Interact)

console:log("Started GBA-PK_Client.lua")
if not (emu == nil) then
	if ConsoleForText == nil then ConsoleForText = console:createBuffer("GBA-PK CLIENT") end
	ConsoleForText:clear()
	ConsoleForText:moveCursor(0,1)
	FFTimer2 = os.time()
    GetGameVersion()
end

